{"mappings":"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AO;4BACH,GAAG;4BACH,GAAG;4BACH,GAAG;4BACH,GAAG;wBACP;wBACA,UAAU;4BACN,GAAG;4BACH,GAAG;4BACH,GAAG;wBACP;wBACA,UAAU;4BACN,GAAG;4BACH,GAAG;4BACH,GAAG;wBACP;wBACA,MAAM;wBACN,OAAO;wBACP,WAAW;wBACX,gBAAgB;oBACpB;oBACA;wBACI,OAAO;4BACH,GAAG;4BACH,GAAG;4BACH,GAAG;4BACH,GAAG;wBACP;wBACA,UAAU;4BACN,GAAG;4BACH,GAAG;4BACH,GAAG;wBACP;wBACA,UAAU;4BACN,GAAG;4BACH,GAAG;4BACH,GAAG;wBACP;wBACA,MAAM;wBACN,OAAO;wBACP,WAAW;wBACX,gBAAgB;oBACpB;iBACH;gBACD,yBAAyB;gBACzB,sBAAsB;gBACtB,YAAY;oBACR,GAAG;oBACH,GAAG;oBACH,GAAG;gBACP;gBACA,cAAc;oBACV,GAAG;oBACH,GAAG;oBACH,GAAG;oBACH,GAAG;gBACP;gBACA,cAAc;oBACV,GAAG;oBACH,GAAG;oBACH,GAAG;oBACH,GAAG;gBACP;YACJ;YACA,wCAAwC;gBACpC,MAAM;gBACN,MAAM;gBACN,gBAAgB;oBACZ,YAAY;oBACZ,UAAU;wBACN,GAAG;wBACH,GAAG;wBACH,GAAG;wBACH,GAAG;oBACP;oBACA,YAAY;oBACZ,kBAAkB;oBAClB,gBAAgB;oBAChB,YAAY;wBACR,GAAG;wBACH,GAAG;wBACH,GAAG;wBACH,GAAG;oBACP;oBACA,cAAc;wBACV,GAAG;wBACH,GAAG;wBACH,GAAG;wBACH,GAAG;oBACP;oBACA,gBAAgB;oBAChB,YAAY;wBACR,GAAG;wBACH,GAAG;wBACH,GAAG;wBACH,GAAG;oBACP;oBACA,mBAAmB;oBACnB,uBAAuB;oBACvB,eAAe;oBACf,mBAAmB;oBACnB,qBAAqB;gBACzB;gBACA,QAAQ;oBACJ;wBACI,OAAO;4BACH,GAAG;4BACH,GAAG;4BACH,GAAG;4BACH,GAAG;wBACP;wBACA,UAAU;4BACN,GAAG;4BACH,GAAG;4BACH,GAAG;wBACP;wBACA,UAAU;4BACN,GAAG;4BACH,GAAG;4BACH,GAAG;wBACP;wBACA,MAAM;wBACN,OAAO;wBACP,WAAW;wBACX,gBAAgB;oBACpB;oBACA;wBACI,OAAO;4BACH,GAAG;4BACH,GAAG;4BACH,GAAG;4BACH,GAAG;wBACP;wBACA,UAAU;4BACN,GAAG;4BACH,GAAG;4BACH,GAAG;wBACP;wBACA,UAAU;4BACN,GAAG;4BACH,GAAG;4BACH,GAAG;wBACP;wBACA,MAAM;wBACN,OAAO;wBACP,WAAW;wBACX,gBAAgB;oBACpB;iBACH;gBACD,yBAAyB;gBACzB,sBAAsB;gBACtB,YAAY;oBACR,GAAG;oBACH,GAAG;oBACH,GAAG;gBACP;gBACA,cAAc;oBACV,GAAG;oBACH,GAAG;oBACH,GAAG;oBACH,GAAG;gBACP;gBACA,cAAc;oBACV,GAAG;oBACH,GAAG;oBACH,GAAG;oBACH,GAAG;gBACP;YACJ;YACA,wCAAwC;gBACpC,MAAM;gBACN,MAAM;gBACN,gBAAgB;oBACZ,YAAY;oBACZ,UAAU;wBACN,GAAG;wBACH,GAAG;wBACH,GAAG;wBACH,GAAG;oBACP;oBACA,YAAY;oBACZ,kBAAkB;oBAClB,gBAAgB;oBAChB,YAAY;wBACR,GAAG;wBACH,GAAG;wBACH,GAAG;wBACH,GAAG;oBACP;oBACA,cAAc;wBACV,GAAG;wBACH,GAAG;wBACH,GAAG;wBACH,GAAG;oBACP;oBACA,gBAAgB;oBAChB,YAAY;wBACR,GAAG;wBACH,GAAG;wBACH,GAAG;wBACH,GAAG;oBACP;oBACA,mBAAmB;oBACnB,uBAAuB;oBACvB,eAAe;oBACf,mBAAmB;oBACnB,qBAAqB;gBACzB;gBACA,QAAQ;oBACJ;wBACI,OAAO;4BACH,GAAG;4BACH,GAAG;4BACH,GAAG;4BACH,GAAG;wBACP;wBACA,UAAU;4BACN,GAAG;4BACH,GAAG;4BACH,GAAG;wBACP;wBACA,UAAU;4BACN,GAAG;4BACH,GAAG;4BACH,GAAG;wBACP;wBACA,MAAM;wBACN,OAAO;wBACP,WAAW;wBACX,gBAAgB;oBACpB;oBACA;wBACI,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","sources":["src/viewer.ts","node_modules/camera-controls/dist/camera-controls.module.js","src/IcosaXRButton.js","src/helpers/Navigation.ts","node_modules/hold-event/dist/hold-event.module.js","src/legacy/LegacyGLTFLoader.js"],"sourcesContent":["// Copyright 2021-2022 Icosa Gallery\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport CameraControls from 'camera-controls';\r\nimport * as THREE from 'three';\r\n\r\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\r\nimport {GLTF, GLTFLoader} from 'three/examples/jsm/loaders/GLTFLoader.js';\r\nimport {OBJLoader} from 'three/examples/jsm/loaders/OBJLoader.js';\r\nimport {MTLLoader} from 'three/examples/jsm/loaders/MTLLoader.js';\r\nimport {FBXLoader} from 'three/examples/jsm/loaders/FBXLoader.js';\r\nimport {PLYLoader} from 'three/examples/jsm/loaders/PLYLoader.js';\r\nimport {STLLoader} from 'three/examples/jsm/loaders/STLLoader.js';\r\nimport {USDZLoader} from 'three/examples/jsm/loaders/USDZLoader.js';\r\nimport {VOXLoader, VOXMesh} from 'three/examples/jsm/loaders/VOXLoader.js';\r\nimport { XRButton } from './IcosaXRButton.js';\r\nimport { GLTFGoogleTiltBrushTechniquesExtension } from 'three-icosa';\r\nimport { GLTFGoogleTiltBrushMaterialExtension } from 'three-icosa';\r\nimport { TiltLoader } from 'three-tiltloader';\r\nimport * as holdEvent from \"hold-event\";\r\nimport {CanvasTexture, Object3D, Object3DEventMap} from \"three\";\r\n// import { EffectComposer } from 'three/addons';\r\n// import { RenderPass } from 'three/addons';\r\nimport { setupNavigation } from './helpers/Navigation';\r\nimport { LegacyGLTFLoader } from './legacy/LegacyGLTFLoader.js';\r\nimport {texture} from \"three/examples/jsm/nodes/accessors/TextureNode\";\r\n// import { GlitchPass } from 'three/addons';\r\n// import { OutputPass } from 'three/addons';\r\nimport { TrackballControls } from 'three/examples/jsm/controls/TrackballControls.js';\r\nimport { XRControllerModelFactory } from 'three/examples/jsm/webxr/XRControllerModelFactory.js';\r\n\r\nclass SketchMetadata {\r\n    public EnvironmentGuid: string;\r\n    public Environment: string;\r\n    public UseGradient: boolean;\r\n    public SkyColorA: THREE.Color;\r\n    public SkyColorB: THREE.Color;\r\n    public SkyGradientDirection: THREE.Vector3;\r\n    public AmbientLightColor: THREE.Color;\r\n    public FogColor: THREE.Color;\r\n    public FogDensity: number;\r\n    public SceneLight0Color: THREE.Color;\r\n    public SceneLight0Rotation: THREE.Vector3;\r\n    public SceneLight1Color: THREE.Color;\r\n    public SceneLight1Rotation: THREE.Vector3;\r\n    public PoseTranslation: THREE.Vector3;\r\n    public PoseRotation: THREE.Vector3;\r\n    public CameraTranslation: THREE.Vector3;\r\n    public CameraRotation: THREE.Vector3;\r\n    public PoseScale: number;\r\n    public EnvironmentPreset: EnvironmentPreset;\r\n    public SkyTexture: string;\r\n    public ReflectionTexture: string;\r\n    public ReflectionIntensity : number\r\n\r\n    constructor(scene: Object3D, userData: any) {\r\n\r\n        // Traverse the scene and return all nodes with a name starting with \"node_SceneLight_\"\r\n        let sceneLights: any[] = [];\r\n\r\n        scene?.traverse((node: any) => {\r\n            if (node.name && node.name.startsWith(\"node_SceneLight_\")) {\r\n                sceneLights.push(node);\r\n                if (sceneLights.length === 2) {\r\n                    return false; // Bail out early\r\n                }\r\n            }\r\n            return true; // Continue traversal\r\n        });\r\n        this.EnvironmentGuid = userData['TB_EnvironmentGuid'] ?? '';\r\n        this.Environment = userData['TB_Environment'] ?? '(None)';\r\n        this.EnvironmentPreset = new EnvironmentPreset(Viewer.lookupEnvironment(this.EnvironmentGuid));\r\n\r\n        if (userData && userData['TB_UseGradient'] === undefined) {\r\n            // The sketch metadata doesn't specify whether to use a gradient or not,\r\n            // so we'll use the environment preset value (assuming it's not a null preset)\r\n            let isValidEnvironmentPreset = this.EnvironmentPreset.Guid !== null;\r\n            this.UseGradient = isValidEnvironmentPreset && this.EnvironmentPreset.UseGradient;\r\n        } else {\r\n            this.UseGradient = JSON.parse(userData['TB_UseGradient'].toLowerCase());\r\n        }\r\n        this.SkyColorA = this.parseTBColorString(userData['TB_SkyColorA'], this.EnvironmentPreset.SkyColorA);\r\n        this.SkyColorB = this.parseTBColorString(userData['TB_SkyColorB'], this.EnvironmentPreset.SkyColorB);\r\n        this.SkyGradientDirection = this.parseTBVector3(userData['TB_SkyGradientDirection'], new THREE.Vector3(0, 1, 0));\r\n        this.AmbientLightColor = this.parseTBColorString(userData['TB_AmbientLightColor'], this.EnvironmentPreset.AmbientLightColor);\r\n        this.FogColor = this.parseTBColorString(userData['TB_FogColor'], this.EnvironmentPreset.FogColor);\r\n        this.FogDensity = userData['TB_FogDensity'] ?? this.EnvironmentPreset.FogDensity;\r\n        this.SkyTexture = userData['TB_SkyTexture'] ?? this.EnvironmentPreset.SkyTexture;\r\n        this.ReflectionTexture = userData['TB_ReflectionTexture'] ?? this.EnvironmentPreset.ReflectionTexture;\r\n        this.ReflectionIntensity = userData['TB_ReflectionIntensity'] ?? this.EnvironmentPreset.ReflectionIntensity;\r\n\r\n        function radToDeg3(rot : THREE.Euler) {\r\n            return {\r\n                x: THREE.MathUtils.radToDeg(rot.x),\r\n                y: THREE.MathUtils.radToDeg(rot.y),\r\n                z: THREE.MathUtils.radToDeg(rot.z)\r\n            };\r\n        }\r\n\r\n        let light0rot = sceneLights.length == 1 ? radToDeg3(sceneLights[0].rotation) : null;\r\n        let light1rot = sceneLights.length == 2 ? radToDeg3(sceneLights[1].rotation) : null;\r\n        this.SceneLight0Rotation = userData['TB_SceneLight0Rotation'] ?? light0rot ?? this.EnvironmentPreset.SceneLight0Rotation;\r\n        this.SceneLight1Rotation = userData['TB_SceneLight1Rotation'] ?? light1rot ?? this.EnvironmentPreset.SceneLight1Rotation;\r\n\r\n        let light0col = userData['TB_SceneLight0Color'] ?? this.EnvironmentPreset.SceneLight0Color;\r\n        let light1col = userData['TB_SceneLight1Color'] ?? this.EnvironmentPreset.SceneLight1Color;\r\n        this.SceneLight0Color = new THREE.Color(light0col.r, light0col.g, light0col.b);\r\n        this.SceneLight1Color = new THREE.Color(light1col.r, light1col.g, light1col.b);\r\n\r\n        this.PoseTranslation = this.parseTBVector3(userData['TB_PoseTranslation']);\r\n        this.PoseRotation = this.parseTBVector3(userData['TB_PoseRotation']);\r\n        this.PoseScale = userData['TB_PoseScale'] ?? 1;\r\n\r\n        this.CameraTranslation = this.parseTBVector3(userData['TB_CameraTranslation'])\r\n        this.CameraRotation = this.parseTBVector3(userData['TB_CameraRotation']);\r\n    }\r\n\r\n    private parseTBVector3(vectorString: string, defaultValue? : THREE.Vector3) {\r\n        if (!vectorString) {return defaultValue ?? new THREE.Vector3()}\r\n        let [x, y, z] = vectorString.split(',').map(parseFloat);\r\n        return new THREE.Vector3(x, y, z);\r\n    }\r\n\r\n    private parseTBColorString(colorString: string, defaultValue: THREE.Color) {\r\n        let r : number, g : number, b : number;\r\n        if (colorString) {\r\n            [r, g, b] = colorString.split(',').map(parseFloat);\r\n            return new THREE.Color(r, g, b);\r\n        } else {\r\n            // Check if it's already a THREE.Color\r\n            if (defaultValue instanceof THREE.Color) {\r\n                return defaultValue;\r\n            }\r\n            else {\r\n                return new THREE.Color(defaultValue.r, defaultValue.g, defaultValue.b, defaultValue.a);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass EnvironmentPreset {\r\n\r\n    public Guid : string;\r\n    public Name : string;\r\n    public UseGradient : boolean;\r\n    public SkyColorA : THREE.Color;\r\n    public SkyColorB : THREE.Color;\r\n    public SkyGradientDirection : THREE.Vector3;\r\n    public FogColor : THREE.Color;\r\n    public FogDensity : number;\r\n    public AmbientLightColor : THREE.Color;\r\n    public SceneLight0Color : THREE.Color;\r\n    public SceneLight0Rotation : THREE.Vector3;\r\n    public SceneLight1Color : THREE.Color;\r\n    public SceneLight1Rotation : THREE.Vector3;\r\n    public SkyTexture: string;\r\n    public ReflectionTexture: string;\r\n    public ReflectionIntensity: number;\r\n\r\n    constructor()\r\n    constructor(preset: any)\r\n    constructor(preset?: any) {\r\n\r\n        let defaultColor = new THREE.Color(\"#FFF\");\r\n        let defaultRotation = new THREE.Vector3(0, 1, 0);\r\n\r\n        this.Guid = preset?.guid ?? null;\r\n        this.Name = preset?.name ?? \"No preset\";\r\n        this.AmbientLightColor = preset?.renderSettings.ambientColor ?? defaultColor;\r\n        this.SkyColorA = preset?.skyboxColorA ?? defaultColor;\r\n        this.SkyColorB = preset?.skyboxColorB ?? defaultColor;\r\n        this.SkyGradientDirection = new THREE.Vector3(0, 1, 0);\r\n        this.FogColor = preset?.renderSettings.fogColor ?? defaultColor;\r\n        this.FogDensity = preset?.renderSettings.fogDensity ?? 0;\r\n        this.SceneLight0Color = preset?.lights[0].color ?? defaultColor;\r\n        this.SceneLight0Rotation = preset?.lights[0].rotation ?? defaultRotation;\r\n        this.SceneLight1Color = preset?.lights[1].color ?? defaultColor;\r\n        this.SceneLight1Rotation = preset?.lights[1].rotation ?? defaultRotation;\r\n        this.SkyTexture = preset?.renderSettings.skyboxCubemap ?? null;\r\n        this.UseGradient = this.SkyTexture === null;\r\n        this.ReflectionTexture = preset?.renderSettings.reflectionCubemap ?? null;\r\n        this.ReflectionIntensity = preset?.renderSettings.reflectionIntensity ?? 1;\r\n    }\r\n}\r\n\r\nexport class Viewer {\r\n\r\n    public gltfLoader: GLTFLoader;\r\n    public gltfLegacyLoader: LegacyGLTFLoader;\r\n    public objLoader: OBJLoader;\r\n    public fbxLoader: FBXLoader;\r\n    public mtlLoader: MTLLoader;\r\n    public plyLoader: PLYLoader;\r\n    public stlLoader: STLLoader;\r\n    public usdzLoader: USDZLoader;\r\n    public voxLoader: VOXLoader;\r\n    public three : any;\r\n    public captureThumbnail : (width : number, height : number) => string;\r\n    public dataURLtoBlob : (dataURL : string) => Blob;\r\n    public modelBoundingBox?: THREE.Box3;\r\n\r\n    private icosa_frame? : HTMLElement | null;\r\n    private brushPath: URL;\r\n    private texturePath: URL;\r\n    private environmentPath: URL;\r\n    private scene : THREE.Scene;\r\n    private canvas : HTMLCanvasElement;\r\n\r\n    private activeCamera: THREE.PerspectiveCamera;\r\n    private flatCamera: THREE.PerspectiveCamera;\r\n    private xrCamera: THREE.PerspectiveCamera;\r\n    private cameraControls: CameraControls;\r\n    private trackballControls: TrackballControls;\r\n    private loadedModel?: THREE.Object3D;\r\n    private sceneGltf?: GLTF;\r\n    public environmentObject?: Object3D;\r\n    public skyObject?: Object3D;\r\n    public sketchMetadata?: SketchMetadata;\r\n    private defaultBackgroundColor: THREE.Color; // Used if no environment sky is set\r\n    private overrides: any;\r\n    private cameraRig: THREE.Group;\r\n    public selectedNode: THREE.Object3D | null;\r\n    public showErrorIcon: () => void;\r\n    public loadingError: boolean;\r\n\r\n    constructor(assetBaseUrl: string, frame?: HTMLElement) {\r\n        this.loadingError = false;\r\n        this.icosa_frame = frame;\r\n\r\n        // Attempt to find viewer frame if not assigned\r\n        if(!this.icosa_frame)\r\n            this.icosa_frame = document.getElementById('icosa-viewer');\r\n\r\n        // Create if still not assigned\r\n        if(!this.icosa_frame) {\r\n            this.icosa_frame = document.createElement('div');\r\n            this.icosa_frame.id = 'icosa-viewer';\r\n        }\r\n\r\n        initCustomUi(this.icosa_frame);\r\n\r\n        const controlPanel = document.createElement('div');\r\n        controlPanel.classList.add('control-panel');\r\n\r\n        const fullscreenButton = document.createElement('button');\r\n        fullscreenButton.classList.add('panel-button', 'fullscreen-button');\r\n        fullscreenButton.onclick = () => { this.toggleFullscreen(fullscreenButton); }\r\n\r\n        controlPanel.appendChild(fullscreenButton);\r\n\r\n        this.icosa_frame.appendChild(controlPanel);\r\n\r\n        //loadscreen\r\n        const loadscreen = document.createElement('div');\r\n        loadscreen.id = 'loadscreen';\r\n        const loadanim = document.createElement('div');\r\n        loadanim.classList.add('loadlogo');\r\n        loadscreen.appendChild(loadanim);\r\n        this.icosa_frame.appendChild(loadscreen);\r\n        loadscreen.addEventListener('transitionend', function() {\r\n            const opacity = window.getComputedStyle(loadscreen).opacity;\r\n            if (parseFloat(opacity) < 0.2) {\r\n                loadscreen.classList.add('loaded');\r\n            }\r\n        });\r\n\r\n        this.showErrorIcon = () => {\r\n            let loadscreen = document.getElementById('loadscreen');\r\n            loadscreen?.classList.remove('fade-out');\r\n            loadscreen?.classList.add('loaderror');\r\n        }\r\n\r\n        const clock = new THREE.Clock();\r\n\r\n        this.scene = new THREE.Scene();\r\n        this.three = THREE;\r\n\r\n        const viewer = this;\r\n\r\n        const manager = new THREE.LoadingManager();\r\n        manager.onStart = function() {\r\n            document.getElementById('loadscreen')?.classList.remove('fade-out');\r\n            document.getElementById('loadscreen')?.classList.remove('loaded');\r\n        };\r\n\r\n        manager.onLoad = function () {\r\n            let loadscreen = document.getElementById('loadscreen');\r\n            if (!loadscreen?.classList.contains('loaderror'))\r\n            {\r\n                loadscreen?.classList.add('fade-out');\r\n            }\r\n        };\r\n\r\n        this.brushPath = new URL('brushes/', assetBaseUrl);\r\n\r\n        this.environmentPath = new URL('environments/', assetBaseUrl);\r\n        this.texturePath = new URL('textures/', assetBaseUrl);\r\n\r\n        this.defaultBackgroundColor = new THREE.Color(0x000000);\r\n\r\n        this.tiltLoader = new TiltLoader(manager);\r\n        this.tiltLoader.setBrushPath(this.brushPath.toString());\r\n\r\n        this.objLoader = new OBJLoader(manager);\r\n        this.mtlLoader = new MTLLoader(manager);\r\n        this.fbxLoader = new FBXLoader(manager);\r\n        this.plyLoader = new PLYLoader(manager);\r\n        this.stlLoader = new STLLoader(manager);\r\n        this.usdzLoader = new USDZLoader(manager);\r\n        this.voxLoader = new VOXLoader(manager);\r\n\r\n        this.gltfLegacyLoader = new LegacyGLTFLoader(manager, assetBaseUrl);\r\n        this.gltfLoader = new GLTFLoader(manager);\r\n        // this.gltfLoader.register(parser => new GLTFGoogleTiltBrushTechniquesExtension(parser, this.brushPath.toString()));\r\n        this.gltfLoader.register(parser => new GLTFGoogleTiltBrushMaterialExtension(parser, this.brushPath.toString()));\r\n\r\n        const dracoLoader = new DRACOLoader();\r\n        dracoLoader.setDecoderPath('https://www.gstatic.com/draco/v1/decoders/');\r\n        this.gltfLoader.setDRACOLoader(dracoLoader);\r\n\r\n        this.canvas = document.createElement('canvas') as HTMLCanvasElement;\r\n        this.canvas.id = 'c';\r\n        this.icosa_frame.appendChild(this.canvas);\r\n        this.canvas.onmousedown = () => { this.canvas.classList.add('grabbed'); }\r\n        this.canvas.onmouseup = () => { this.canvas.classList.remove('grabbed'); }\r\n\r\n        const renderer = new THREE.WebGLRenderer({\r\n            canvas : this.canvas,\r\n            antialias: true\r\n        });\r\n\r\n        renderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n        // TODO linear/gamma selection\r\n        if (false) {\r\n            renderer.outputColorSpace = THREE.LinearSRGBColorSpace;\r\n        } else {\r\n            renderer.outputColorSpace = THREE.SRGBColorSpace;\r\n        }\r\n\r\n        renderer.xr.enabled = true;\r\n\r\n        function handleController(inputSource: XRInputSource) {\r\n            const gamepad = inputSource.gamepad;\r\n            if (gamepad) {\r\n                return {\r\n                    axes: gamepad.axes,\r\n                    buttons: gamepad.buttons\r\n                };\r\n            }\r\n            return null;\r\n        }\r\n\r\n        this.cameraRig = new THREE.Group();\r\n        this.selectedNode = null;\r\n\r\n        let controller0: THREE.Group;\r\n        let controller1: THREE.Group;\r\n        let controllerGrip0;\r\n        let controllerGrip1;\r\n        let previousLeftThumbstickX = 0;\r\n\r\n        controller0 = renderer.xr.getController(0);\r\n        this.scene.add(controller0);\r\n\r\n\r\n        controller1 = renderer.xr.getController(1);\r\n        this.scene.add(controller1);\r\n\r\n        const controllerModelFactory = new XRControllerModelFactory();\r\n\r\n        controllerGrip0 = renderer.xr.getControllerGrip(0);\r\n        controllerGrip0.add(controllerModelFactory.createControllerModel(controllerGrip0));\r\n        this.scene.add(controllerGrip0);\r\n\r\n        controllerGrip1 = renderer.xr.getControllerGrip(1);\r\n        controllerGrip1.add(controllerModelFactory.createControllerModel(controllerGrip1));\r\n        this.scene.add(controllerGrip1);\r\n\r\n        let xrButton = XRButton.createButton( renderer );\r\n        this.icosa_frame.appendChild(xrButton);\r\n\r\n        function initCustomUi(viewerContainer : HTMLElement) {\r\n\r\n            const button = document.createElement('button');\r\n            button.innerHTML = `<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<svg width=\"36\" height=\"36\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n<path d=\"M4 7.5L11.6078 3.22062C11.7509 3.14014 11.8224 3.09991 11.8982 3.08414C11.9654 3.07019 12.0346 3.07019 12.1018 3.08414C12.1776 3.09991 12.2491 3.14014 12.3922 3.22062L20 7.5M4 7.5V16.0321C4 16.2025 4 16.2876 4.02499 16.3637C4.04711 16.431 4.08326 16.4928 4.13106 16.545C4.1851 16.6041 4.25933 16.6459 4.40779 16.7294L12 21M4 7.5L12 11.5M12 21L19.5922 16.7294C19.7407 16.6459 19.8149 16.6041 19.8689 16.545C19.9167 16.4928 19.9529 16.431 19.975 16.3637C20 16.2876 20 16.2025 20 16.0321V7.5M12 21V11.5M20 7.5L12 11.5\" stroke=\"white\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n</svg>`;\r\n            button.style.backgroundColor = 'transparent';\r\n            button.style.position = 'absolute';\r\n            button.style.bottom = '10px';\r\n            button.style.left = '10px';\r\n            button.style.padding = '0px 2px';\r\n            button.style.border = 'none';\r\n            button.style.color = 'white';\r\n            button.style.cursor = 'pointer';\r\n            button.style.zIndex = '20';\r\n            button.title = 'Fit Scene to View';\r\n            viewerContainer.appendChild(button);\r\n            const svgPath = button.querySelector('path');\r\n            button.addEventListener('click', () => {\r\n                viewer.frameScene();\r\n            });\r\n\r\n            button.addEventListener('mouseover', () => {\r\n                svgPath.setAttribute('stroke', 'rgba(255, 255, 255, 0.7)');\r\n            });\r\n            button.addEventListener('mouseout', () => {\r\n                svgPath.setAttribute('stroke', 'white');\r\n            });\r\n\r\n\r\n        }\r\n\r\n        function animate() {\r\n            renderer.setAnimationLoop(render);\r\n            // requestAnimationFrame( animate );\r\n            // composer.render();\r\n        }\r\n\r\n        function render() {\r\n\r\n            const delta = clock.getDelta();\r\n\r\n            if (renderer.xr.isPresenting) {\r\n\r\n                let session : XRSession = <XRSession>renderer.xr.getSession();\r\n                viewer.activeCamera = viewer?.xrCamera;\r\n\r\n                const inputSources = Array.from(session.inputSources);\r\n                const moveSpeed = 0.05;\r\n                const snapAngle = 15;\r\n\r\n                inputSources.forEach((inputSource) => {\r\n\r\n                    const controllerData = handleController(inputSource);\r\n\r\n                    if (controllerData) {\r\n\r\n                        const axes = controllerData.axes;\r\n\r\n                        if (inputSource.handedness === 'left') {\r\n                            // Movement (left thumbstick)\r\n                            if (Math.abs(axes[2]) > 0.1 || Math.abs(axes[3]) > 0.1) {\r\n                                const moveX = axes[2] * moveSpeed;\r\n                                const moveZ = -axes[3] * moveSpeed;\r\n\r\n                                // Get the camera's forward and right vectors\r\n                                const forward = new THREE.Vector3();\r\n                                viewer.activeCamera.getWorldDirection(forward);\r\n\r\n                                // TODO Make this an option\r\n                                //forward.y = 0; // Ignore vertical movement\r\n\r\n                                forward.normalize();\r\n\r\n                                const right = new THREE.Vector3();\r\n                                right.crossVectors(forward, viewer.activeCamera.up).normalize();\r\n\r\n                                // Calculate the movement vector\r\n                                const movement = new THREE.Vector3();\r\n                                movement.addScaledVector(forward, moveZ);\r\n                                movement.addScaledVector(right, moveX);\r\n\r\n                                viewer.cameraRig.position.add(movement);\r\n                            }\r\n                        }\r\n\r\n                        if (inputSource.handedness === 'right') {\r\n\r\n                            // Rotation (right thumbstick x)\r\n                            if (Math.abs(axes[2]) > 0.8 && Math.abs(previousLeftThumbstickX) <= 0.8) {\r\n                                if (axes[2] > 0) {\r\n                                    viewer.cameraRig.rotation.y -= THREE.MathUtils.degToRad(snapAngle);\r\n                                } else {\r\n                                    viewer.cameraRig.rotation.y += THREE.MathUtils.degToRad(snapAngle);\r\n                                }\r\n                            }\r\n                            previousLeftThumbstickX = axes[2];\r\n\r\n                            // Up/down position right thumbstick y)\r\n                            if (Math.abs(axes[3]) > 0.5) {\r\n                                viewer.cameraRig.position.y += axes[3] * moveSpeed;\r\n                            }\r\n                        }\r\n\r\n\r\n                    }\r\n                });\r\n            } else {\r\n                viewer.activeCamera = viewer?.flatCamera;\r\n                const needResize = viewer.canvas.width !== viewer.canvas.clientWidth || viewer.canvas.height !== viewer.canvas.clientHeight;\r\n                if (needResize && viewer?.flatCamera) {\r\n                    renderer.setSize(viewer.canvas.clientWidth, viewer.canvas.clientHeight, false);\r\n                    viewer.flatCamera.aspect = viewer.canvas.clientWidth / viewer.canvas.clientHeight;\r\n                    viewer.flatCamera.updateProjectionMatrix();\r\n                }\r\n                if (viewer?.cameraControls) viewer.cameraControls.update(delta);\r\n                if (viewer?.trackballControls) viewer.trackballControls.update();\r\n            }\r\n\r\n            if (viewer?.activeCamera) {\r\n                renderer.render(viewer.scene, viewer.activeCamera);\r\n            }\r\n        }\r\n\r\n        this.dataURLtoBlob = (dataURL : string) => {\r\n            let arr = dataURL.split(',');\r\n            let mimeMatch = arr[0].match(/:(.*?);/);\r\n            let mime = mimeMatch ? mimeMatch[1] : 'image/png';\r\n            let bstr = atob(arr[1]);\r\n            let n = bstr.length;\r\n            let u8arr = new Uint8Array(n);\r\n\r\n            while(n--) {\r\n                u8arr[n] = bstr.charCodeAt(n);\r\n            }\r\n            return new Blob([u8arr], { type: mime });\r\n        }\r\n\r\n        this.captureThumbnail = (width: number, height : number) => {\r\n\r\n            const canvas = document.createElement('canvas');\r\n            canvas.width = width;\r\n            canvas.height = height;\r\n\r\n            const thumbnailRenderer = new THREE.WebGLRenderer({\r\n                canvas: canvas,\r\n                antialias: true,\r\n                preserveDrawingBuffer: true // Important to allow toDataURL to work\r\n            });\r\n            thumbnailRenderer.setSize(width, height);\r\n            thumbnailRenderer.setPixelRatio(window.devicePixelRatio);\r\n\r\n            // If your scene requires specific renderer settings (e.g., tone mapping, shadow map), apply them here\r\n            // Example:\r\n            // thumbnailRenderer.toneMapping = renderer.toneMapping;\r\n            // thumbnailRenderer.shadowMap.enabled = renderer.shadowMap.enabled;\r\n\r\n            thumbnailRenderer.render(this.scene, this.activeCamera);\r\n            const dataUrl = canvas.toDataURL('image/png');\r\n\r\n            thumbnailRenderer.dispose();\r\n            canvas.width = canvas.height = 0;\r\n\r\n            return dataUrl;\r\n        };\r\n\r\n        animate();\r\n    }\r\n\r\n    private toggleFullscreen(controlButton: HTMLButtonElement) {\r\n        if(this.icosa_frame?.requestFullscreen)\r\n            this.icosa_frame?.requestFullscreen();\r\n\r\n        document.onfullscreenchange = ()  => {\r\n            if (document.fullscreenElement == null) {\r\n                controlButton.onclick = () => {\r\n                    if(this.icosa_frame?.requestFullscreen)\r\n                        this.icosa_frame?.requestFullscreen();\r\n                };\r\n                controlButton.classList.remove('fullscreen');\r\n            } else {\r\n                controlButton.onclick = () => {\r\n                    if(document.exitFullscreen)\r\n                        document.exitFullscreen();\r\n                };\r\n                controlButton.classList.add('fullscreen');\r\n            }\r\n        }\r\n    }\r\n\r\n    private initializeScene(overrides : any) {\r\n\r\n        let defaultBackgroundColor : string = overrides?.[\"defaultBackgroundColor\"];\r\n        if (!defaultBackgroundColor) {defaultBackgroundColor = \"#000000\";}\r\n        this.defaultBackgroundColor = new THREE.Color(defaultBackgroundColor);\r\n\r\n        if(!this.loadedModel)\r\n            return;\r\n\r\n        this.scene.clear();\r\n        this.initSceneBackground();\r\n        this.initFog();\r\n        this.initLights();\r\n        this.initCameras();\r\n\r\n        // Compensate for insanely large models\r\n        const LIMIT = 100000;\r\n        let radius = this.overrides?.geometryData?.stats?.radius;\r\n        if (radius > LIMIT) {\r\n            let excess = radius - LIMIT;\r\n            let sceneNode = this.scene.add(this.loadedModel);\r\n            sceneNode.scale.divideScalar(excess);\r\n            // Reframe the scaled scene\r\n            this.frameNode(sceneNode);\r\n        } else {\r\n            this.scene.add(this.loadedModel);\r\n        }\r\n    }\r\n\r\n    public toggleTreeView(root: HTMLElement) {\r\n        if (root.childElementCount == 0) {\r\n            this.createTreeView(this.scene, root);\r\n            root.style.display = 'none';\r\n        }\r\n        if (root.style.display === 'block') {\r\n            root.style.display = 'none';\r\n        } else if (root.style.display === 'none') {\r\n            root.style.display = 'block';\r\n        }\r\n    }\r\n\r\n    static lookupEnvironment(guid : string) {\r\n        return {\r\n            \"e38af599-4575-46ff-a040-459703dbcd36\": {\r\n                name: \"Passthrough\",\r\n                guid: \"e38af599-4575-46ff-a040-459703dbcd36\",\r\n                renderSettings: {\r\n                    fogEnabled: false,\r\n                    fogColor: {\r\n                        r: 0.0,\r\n                        g: 0.0,\r\n                        b: 0.0,\r\n                        a: 0.0\r\n                    },\r\n                    fogDensity: 0.0,\r\n                    fogStartDistance: 0.0,\r\n                    fogEndDistance: 0.0,\r\n                    clearColor: {\r\n                        r: 1.0,\r\n                        g: 1.0,\r\n                        b: 1.0,\r\n                        a: 1.0\r\n                    },\r\n                    ambientColor: {\r\n                        r: 0.5,\r\n                        g: 0.5,\r\n                        b: 0.5,\r\n                        a: 1.0\r\n                    },\r\n                    skyboxExposure: 0.0,\r\n                    skyboxTint: {\r\n                        r: 0.0,\r\n                        g: 0.0,\r\n                        b: 0.0,\r\n                        a: 0.0\r\n                    },\r\n                    environmentPrefab: \"EnvironmentPrefabs/Passthrough\",\r\n                    environmentReverbZone: \"EnvironmentAudio/ReverbZone_Room\",\r\n                    skyboxCubemap: null,\r\n                    reflectionCubemap: \"threelight_reflection\",\r\n                    reflectionIntensity: 0.3\r\n                },\r\n                lights: [\r\n                    {\r\n                        color: {\r\n                            r: 1.16949809,\r\n                            g: 1.19485855,\r\n                            b: 1.31320751,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        rotation: {\r\n                            x: 60.0000038,\r\n                            y: 0.0,\r\n                            z: 25.9999962\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: true\r\n                    },\r\n                    {\r\n                        color: {\r\n                            r: 0.428235322,\r\n                            g: 0.4211765,\r\n                            b: 0.3458824,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        rotation: {\r\n                            x: 40.0000038,\r\n                            y: 180.0,\r\n                            z: 220.0\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: false\r\n                    }\r\n                ],\r\n                teleportBoundsHalfWidth: 80.0,\r\n                controllerXRayHeight: 0.0,\r\n                widgetHome: {\r\n                    x: 0.0,\r\n                    y: 0.0,\r\n                    z: 0.0\r\n                },\r\n                skyboxColorA: {\r\n                    r: 0.0,\r\n                    g: 0.0,\r\n                    b: 0.0,\r\n                    a: 0.0\r\n                },\r\n                skyboxColorB: {\r\n                    r: 0.0,\r\n                    g: 0.0,\r\n                    b: 0.0,\r\n                    a: 0.0\r\n                }\r\n            },\r\n            \"ab080599-e465-4a6d-8587-43bf495af68b\": {\r\n                name: \"Standard\",\r\n                guid: \"ab080599-e465-4a6d-8587-43bf495af68b\",\r\n                renderSettings: {\r\n                    fogEnabled: true,\r\n                    fogColor: {\r\n                        r: 0.164705887,\r\n                        g: 0.164705887,\r\n                        b: 0.20784314,\r\n                        a: 1.0\r\n                    },\r\n                    fogDensity: 0.0025,\r\n                    fogStartDistance: 0.0,\r\n                    fogEndDistance: 0.0,\r\n                    clearColor: {\r\n                        r: 0.156862751,\r\n                        g: 0.156862751,\r\n                        b: 0.203921571,\r\n                        a: 1.0\r\n                    },\r\n                    ambientColor: {\r\n                        r: 0.392156869,\r\n                        g: 0.392156869,\r\n                        b: 0.392156869,\r\n                        a: 1.0\r\n                    },\r\n                    skyboxExposure: 0.9,\r\n                    skyboxTint: {\r\n                        r: 0.235294119,\r\n                        g: 0.2509804,\r\n                        b: 0.3529412,\r\n                        a: 1.0\r\n                    },\r\n                    environmentPrefab: \"EnvironmentPrefabs/Standard\",\r\n                    environmentReverbZone: \"EnvironmentAudio/ReverbZone_CarpetedHallway\",\r\n                    skyboxCubemap: null,\r\n                    reflectionCubemap: \"threelight_reflection\",\r\n                    reflectionIntensity: 0.3\r\n                },\r\n                lights: [\r\n                    {\r\n                        color: {\r\n                            r: 0.7780392,\r\n                            g: 0.815686345,\r\n                            b: 0.9913726,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        rotation: {\r\n                            x: 60.0000038,\r\n                            y: 0.0,\r\n                            z: 25.9999962\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: true\r\n                    },\r\n                    {\r\n                        color: {\r\n                            r: 0.428235322,\r\n                            g: 0.4211765,\r\n                            b: 0.3458824,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        rotation: {\r\n                            x: 40.0000038,\r\n                            y: 180.0,\r\n                            z: 220.0\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: false\r\n                    }\r\n                ],\r\n                teleportBoundsHalfWidth: 80.0,\r\n                controllerXRayHeight: 0.0,\r\n                widgetHome: {\r\n                    x: 0.0,\r\n                    y: 0.0,\r\n                    z: 0.0\r\n                },\r\n                skyboxColorA: {\r\n                    r: 0.274509817,\r\n                    g: 0.274509817,\r\n                    b: 0.31764707,\r\n                    a: 1.0\r\n                },\r\n                skyboxColorB: {\r\n                    r: 0.03529412,\r\n                    g: 0.03529412,\r\n                    b: 0.08627451,\r\n                    a: 1.0\r\n                }\r\n            },\r\n            \"c504347a-c96d-4505-853b-87b484acff9a\": {\r\n                name: \"NightSky\",\r\n                guid: \"c504347a-c96d-4505-853b-87b484acff9a\",\r\n                renderSettings: {\r\n                    fogEnabled: true,\r\n                    fogColor: {\r\n                        r: 0.0196078438,\r\n                        g: 0.0117647061,\r\n                        b: 0.0431372561,\r\n                        a: 1.0\r\n                    },\r\n                    fogDensity: 0.006,\r\n                    fogStartDistance: 0.0,\r\n                    fogEndDistance: 0.0,\r\n                    clearColor: {\r\n                        r: 0.0,\r\n                        g: 0.0,\r\n                        b: 0.0,\r\n                        a: 1.0\r\n                    },\r\n                    ambientColor: {\r\n                        r: 0.3019608,\r\n                        g: 0.3019608,\r\n                        b: 0.6039216,\r\n                        a: 1.0\r\n                    },\r\n                    skyboxExposure: 1.0,\r\n                    skyboxTint: {\r\n                        r: 1.0,\r\n                        g: 1.0,\r\n                        b: 1.0,\r\n                        a: 1.0\r\n                    },\r\n                    environmentPrefab: \"EnvironmentPrefabs/NightSky\",\r\n                    environmentReverbZone: \"EnvironmentAudio/ReverbZone_Mountains\",\r\n                    skyboxCubemap: \"nightsky\",\r\n                    reflectionCubemap: \"milkyway_reflection\",\r\n                    reflectionIntensity: 3.0\r\n                },\r\n                lights: [\r\n                    {\r\n                        color: {\r\n                            r: 1.02352941,\r\n                            g: 0.7647059,\r\n                            b: 0.929411769,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 8.0\r\n                        },\r\n                        rotation: {\r\n                            x: 65.0,\r\n                            y: 0.0,\r\n                            z: 25.9999981\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: true\r\n                    },\r\n                    {\r\n                        color: {\r\n                            r: 0.0,\r\n                            g: 0.0,\r\n                            b: 0.0,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 8.0\r\n                        },\r\n                        rotation: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: false\r\n                    }\r\n                ],\r\n                teleportBoundsHalfWidth: 80.0,\r\n                controllerXRayHeight: 0.0,\r\n                widgetHome: {\r\n                    x: 0.0,\r\n                    y: 0.0,\r\n                    z: 0.0\r\n                },\r\n                skyboxColorA: {\r\n                    r: 0.08235294,\r\n                    g: 0.0470588244,\r\n                    b: 0.184313729,\r\n                    a: 1.0\r\n                },\r\n                skyboxColorB: {\r\n                    r: 0.0,\r\n                    g: 0.0,\r\n                    b: 0.0,\r\n                    a: 1.0\r\n                }\r\n            },\r\n            \"96cf6f36-47b6-44f4-bdbf-63be2ddac909\": {\r\n                name: \"Space\",\r\n                guid: \"96cf6f36-47b6-44f4-bdbf-63be2ddac909\",\r\n                renderSettings: {\r\n                    fogEnabled: true,\r\n                    fogColor: {\r\n                        r: 0.0,\r\n                        g: 0.0,\r\n                        b: 0.0,\r\n                        a: 1.0\r\n                    },\r\n                    fogDensity: 0.0,\r\n                    fogStartDistance: 5.0,\r\n                    fogEndDistance: 20.0,\r\n                    clearColor: {\r\n                        r: 0.0,\r\n                        g: 0.0,\r\n                        b: 0.0,\r\n                        a: 1.0\r\n                    },\r\n                    ambientColor: {\r\n                        r: 0.227450982,\r\n                        g: 0.20784314,\r\n                        b: 0.360784322,\r\n                        a: 1.0\r\n                    },\r\n                    skyboxExposure: 1.0,\r\n                    skyboxTint: {\r\n                        r: 1.0,\r\n                        g: 1.0,\r\n                        b: 1.0,\r\n                        a: 1.0\r\n                    },\r\n                    environmentPrefab: \"EnvironmentPrefabs/Space\",\r\n                    environmentReverbZone: \"EnvironmentAudio/ReverbZone_Arena\",\r\n                    skyboxCubemap: \"milkyway_PNG\",\r\n                    reflectionCubemap: \"milkyway_reflection\",\r\n                    reflectionIntensity: 3.0\r\n                },\r\n                lights: [\r\n                    {\r\n                        color: {\r\n                            r: 1.16000009,\r\n                            g: 0.866666734,\r\n                            b: 0.866666734,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 8.0\r\n                        },\r\n                        rotation: {\r\n                            x: 30.0000019,\r\n                            y: 39.9999962,\r\n                            z: 50.0\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: true\r\n                    },\r\n                    {\r\n                        color: {\r\n                            r: 0.0,\r\n                            g: 0.0,\r\n                            b: 0.0,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 8.0\r\n                        },\r\n                        rotation: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: false\r\n                    }\r\n                ],\r\n                teleportBoundsHalfWidth: 20.0,\r\n                controllerXRayHeight: -1E+09,\r\n                widgetHome: {\r\n                    x: 0.0,\r\n                    y: 0.0,\r\n                    z: 0.0\r\n                },\r\n                skyboxColorA: {\r\n                    r: 0.0,\r\n                    g: 0.0,\r\n                    b: 0.0,\r\n                    a: 1.0\r\n                },\r\n                skyboxColorB: {\r\n                    r: 0.121568628,\r\n                    g: 0.03529412,\r\n                    b: 0.172549024,\r\n                    a: 1.0\r\n                }\r\n            },\r\n            \"e2e72b76-d443-4721-97e6-f3d49fe98dda\": {\r\n                name: \"DressForm\",\r\n                guid: \"e2e72b76-d443-4721-97e6-f3d49fe98dda\",\r\n                renderSettings: {\r\n                    fogEnabled: true,\r\n                    fogColor: {\r\n                        r: 0.172549024,\r\n                        g: 0.180392161,\r\n                        b: 0.243137255,\r\n                        a: 1.0\r\n                    },\r\n                    fogDensity: 0.007,\r\n                    fogStartDistance: 0.0,\r\n                    fogEndDistance: 0.0,\r\n                    clearColor: {\r\n                        r: 0.219607845,\r\n                        g: 0.227450982,\r\n                        b: 0.31764707,\r\n                        a: 1.0\r\n                    },\r\n                    ambientColor: {\r\n                        r: 0.4117647,\r\n                        g: 0.3529412,\r\n                        b: 0.596078455,\r\n                        a: 1.0\r\n                    },\r\n                    skyboxExposure: 0.61,\r\n                    skyboxTint: {\r\n                        r: 0.458823532,\r\n                        g: 0.5137255,\r\n                        b: 0.7882353,\r\n                        a: 1.0\r\n                    },\r\n                    environmentPrefab: \"EnvironmentPrefabs/DressForm\",\r\n                    environmentReverbZone: \"EnvironmentAudio/ReverbZone_LivingRoom\",\r\n                    skyboxCubemap: null,\r\n                    reflectionCubemap: \"threelight_reflection\",\r\n                    reflectionIntensity: 0.3\r\n                },\r\n                lights: [\r\n                    {\r\n                        color: {\r\n                            r: 1.1152941,\r\n                            g: 0.917647064,\r\n                            b: 0.7764706,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 7.0\r\n                        },\r\n                        rotation: {\r\n                            x: 50.0,\r\n                            y: 41.9999962,\r\n                            z: 25.9999924\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: true\r\n                    },\r\n                    {\r\n                        color: {\r\n                            r: 0.356862754,\r\n                            g: 0.3509804,\r\n                            b: 0.2882353,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 8.0\r\n                        },\r\n                        rotation: {\r\n                            x: 40.0000038,\r\n                            y: 227.0,\r\n                            z: 220.0\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: false\r\n                    }\r\n                ],\r\n                teleportBoundsHalfWidth: 80.0,\r\n                controllerXRayHeight: 0.0,\r\n                widgetHome: {\r\n                    x: 0.0,\r\n                    y: 0.0,\r\n                    z: 0.0\r\n                },\r\n                skyboxColorA: {\r\n                    r: 0.34117648,\r\n                    g: 0.345098048,\r\n                    b: 0.4509804,\r\n                    a: 1.0\r\n                },\r\n                skyboxColorB: {\r\n                    r: 0.09411765,\r\n                    g: 0.105882354,\r\n                    b: 0.1764706,\r\n                    a: 1.0\r\n                }\r\n            },\r\n            \"ab080511-e465-4a6d-8587-53bf495af68b\": {\r\n                name: \"Pedestal\",\r\n                guid: \"ab080511-e465-4a6d-8587-53bf495af68b\",\r\n                renderSettings: {\r\n                    fogEnabled: true,\r\n                    fogColor: {\r\n                        r: 0.172549024,\r\n                        g: 0.180392161,\r\n                        b: 0.243137255,\r\n                        a: 1.0\r\n                    },\r\n                    fogDensity: 0.007,\r\n                    fogStartDistance: 0.0,\r\n                    fogEndDistance: 0.0,\r\n                    clearColor: {\r\n                        r: 0.219607845,\r\n                        g: 0.227450982,\r\n                        b: 0.31764707,\r\n                        a: 1.0\r\n                    },\r\n                    ambientColor: {\r\n                        r: 0.4117647,\r\n                        g: 0.3529412,\r\n                        b: 0.596078455,\r\n                        a: 1.0\r\n                    },\r\n                    skyboxExposure: 0.61,\r\n                    skyboxTint: {\r\n                        r: 0.458823532,\r\n                        g: 0.5137255,\r\n                        b: 0.7882353,\r\n                        a: 1.0\r\n                    },\r\n                    environmentPrefab: \"EnvironmentPrefabs/Pedestal\",\r\n                    environmentReverbZone: \"EnvironmentAudio/ReverbZone_LivingRoom\",\r\n                    skyboxCubemap: null,\r\n                    reflectionCubemap: \"threelight_reflection\",\r\n                    reflectionIntensity: 1.0\r\n                },\r\n                lights: [\r\n                    {\r\n                        color: {\r\n                            r: 1.1152941,\r\n                            g: 0.917647064,\r\n                            b: 0.7764706,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 7.0\r\n                        },\r\n                        rotation: {\r\n                            x: 50.0,\r\n                            y: 41.9999962,\r\n                            z: 25.9999924\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: true\r\n                    },\r\n                    {\r\n                        color: {\r\n                            r: 0.356862754,\r\n                            g: 0.3509804,\r\n                            b: 0.2882353,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 8.0\r\n                        },\r\n                        rotation: {\r\n                            x: 40.0000038,\r\n                            y: 227.0,\r\n                            z: 220.0\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: false\r\n                    }\r\n                ],\r\n                teleportBoundsHalfWidth: 80.0,\r\n                controllerXRayHeight: 0.0,\r\n                widgetHome: {\r\n                    x: 0.0,\r\n                    y: 9.675,\r\n                    z: 5.0\r\n                },\r\n                skyboxColorA: {\r\n                    r: 0.34117648,\r\n                    g: 0.345098048,\r\n                    b: 0.4509804,\r\n                    a: 1.0\r\n                },\r\n                skyboxColorB: {\r\n                    r: 0.09411765,\r\n                    g: 0.105882354,\r\n                    b: 0.1764706,\r\n                    a: 1.0\r\n                }\r\n            },\r\n            \"ab080511-e565-4a6d-8587-53bf495af68b\": {\r\n                name: \"Snowman\",\r\n                guid: \"ab080511-e565-4a6d-8587-53bf495af68b\",\r\n                renderSettings: {\r\n                    fogEnabled: true,\r\n                    fogColor: {\r\n                        r: 0.6509804,\r\n                        g: 0.7254902,\r\n                        b: 0.8745098,\r\n                        a: 1.0\r\n                    },\r\n                    fogDensity: 0.005,\r\n                    fogStartDistance: 0.0,\r\n                    fogEndDistance: 0.0,\r\n                    clearColor: {\r\n                        r: 0.6509804,\r\n                        g: 0.7019608,\r\n                        b: 0.870588243,\r\n                        a: 1.0\r\n                    },\r\n                    ambientColor: {\r\n                        r: 0.7294118,\r\n                        g: 0.7294118,\r\n                        b: 0.7294118,\r\n                        a: 1.0\r\n                    },\r\n                    skyboxExposure: 0.95,\r\n                    skyboxTint: {\r\n                        r: 0.75686276,\r\n                        g: 0.819607854,\r\n                        b: 1.0,\r\n                        a: 1.0\r\n                    },\r\n                    environmentPrefab: \"EnvironmentPrefabs/Snowman\",\r\n                    environmentReverbZone: \"EnvironmentAudio/ReverbZone_PaddedCell\",\r\n                    skyboxCubemap: \"snowysky\",\r\n                    reflectionCubemap: \"threelight_reflection\",\r\n                    reflectionIntensity: 0.3\r\n                },\r\n                lights: [\r\n                    {\r\n                        color: {\r\n                            r: 0.241451,\r\n                            g: 0.234078437,\r\n                            b: 0.3465098,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 8.0\r\n                        },\r\n                        rotation: {\r\n                            x: 58.0,\r\n                            y: 315.999969,\r\n                            z: 50.0000038\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: true\r\n                    },\r\n                    {\r\n                        color: {\r\n                            r: 0.410980433,\r\n                            g: 0.4956863,\r\n                            b: 0.65882355,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 8.0\r\n                        },\r\n                        rotation: {\r\n                            x: 40.0,\r\n                            y: 143.0,\r\n                            z: 220.0\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: false\r\n                    }\r\n                ],\r\n                teleportBoundsHalfWidth: 80.0,\r\n                controllerXRayHeight: 0.0,\r\n                widgetHome: {\r\n                    x: 0.0,\r\n                    y: 0.0,\r\n                    z: 0.0\r\n                },\r\n                skyboxColorA: {\r\n                    r: 0.4627451,\r\n                    g: 0.5647059,\r\n                    b: 0.7058824,\r\n                    a: 1.0\r\n                },\r\n                skyboxColorB: {\r\n                    r: 0.7607843,\r\n                    g: 0.8156863,\r\n                    b: 0.972549,\r\n                    a: 1.0\r\n                }\r\n            },\r\n            \"36e65e4f-17d7-41ef-834a-e525db0b9888\": {\r\n                name: \"PinkLemonade\",\r\n                guid: \"36e65e4f-17d7-41ef-834a-e525db0b9888\",\r\n                renderSettings: {\r\n                    fogEnabled: true,\r\n                    fogColor: {\r\n                        r: 1.0,\r\n                        g: 0.5514706,\r\n                        b: 0.9319472,\r\n                        a: 1.0\r\n                    },\r\n                    fogDensity: 0.025,\r\n                    fogStartDistance: 0.0,\r\n                    fogEndDistance: 0.0,\r\n                    clearColor: {\r\n                        r: 0.827451,\r\n                        g: 0.368627459,\r\n                        b: 0.34117648,\r\n                        a: 1.0\r\n                    },\r\n                    ambientColor: {\r\n                        r: 1.0,\r\n                        g: 0.9019608,\r\n                        b: 0.854901969,\r\n                        a: 1.0\r\n                    },\r\n                    skyboxExposure: 1.0,\r\n                    skyboxTint: {\r\n                        r: 0.827451,\r\n                        g: 0.368627459,\r\n                        b: 0.34117648,\r\n                        a: 1.0\r\n                    },\r\n                    environmentPrefab: \"EnvironmentPrefabs/AmbientDustDim\",\r\n                    environmentReverbZone: \"EnvironmentAudio/ReverbZone_Room\",\r\n                    skyboxCubemap: null,\r\n                    reflectionCubemap: \"gradientblue\",\r\n                    reflectionIntensity: 0.0\r\n                },\r\n                lights: [\r\n                    {\r\n                        color: {\r\n                            r: 0.0,\r\n                            g: 0.0,\r\n                            b: 0.0,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        rotation: {\r\n                            x: 318.189667,\r\n                            y: 116.565048,\r\n                            z: 116.565048\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 0.0,\r\n                        spotAngle: 0.0,\r\n                        shadowsEnabled: true\r\n                    },\r\n                    {\r\n                        color: {\r\n                            r: 0.5,\r\n                            g: 0.28039217,\r\n                            b: 0.3156863,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        rotation: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 0.0,\r\n                        spotAngle: 0.0,\r\n                        shadowsEnabled: false\r\n                    }\r\n                ],\r\n                teleportBoundsHalfWidth: 80.0,\r\n                controllerXRayHeight: -1E+09,\r\n                widgetHome: {\r\n                    x: 0.0,\r\n                    y: 0.0,\r\n                    z: 0.0\r\n                },\r\n                skyboxColorA: {\r\n                    r: 1.0,\r\n                    g: 0.882352948,\r\n                    b: 0.65882355,\r\n                    a: 1.0\r\n                },\r\n                skyboxColorB: {\r\n                    r: 0.858823538,\r\n                    g: 0.294117659,\r\n                    b: 0.3647059,\r\n                    a: 1.0\r\n                }\r\n            },\r\n            \"a9bc2bc8-6d86-4cda-82a9-283e0f3977ac\": {\r\n                name: \"Pistachio\",\r\n                guid: \"a9bc2bc8-6d86-4cda-82a9-283e0f3977ac\",\r\n                renderSettings: {\r\n                    fogEnabled: true,\r\n                    fogColor: {\r\n                        r: 0.2784314,\r\n                        g: 0.5686275,\r\n                        b: 0.458823532,\r\n                        a: 1.0\r\n                    },\r\n                    fogDensity: 0.015,\r\n                    fogStartDistance: 0.0,\r\n                    fogEndDistance: 0.0,\r\n                    clearColor: {\r\n                        r: 0.9558824,\r\n                        g: 0.6708847,\r\n                        b: 0.513083935,\r\n                        a: 1.0\r\n                    },\r\n                    ambientColor: {\r\n                        r: 0.610186,\r\n                        g: 0.838235259,\r\n                        b: 0.75194633,\r\n                        a: 1.0\r\n                    },\r\n                    skyboxExposure: 1.0,\r\n                    skyboxTint: {\r\n                        r: 0.797,\r\n                        g: 0.616,\r\n                        b: 0.755,\r\n                        a: 1.0\r\n                    },\r\n                    environmentPrefab: \"EnvironmentPrefabs/AmbientDustDim\",\r\n                    environmentReverbZone: \"EnvironmentAudio/ReverbZone_Room\",\r\n                    skyboxCubemap: null,\r\n                    reflectionCubemap: \"gradientblue\",\r\n                    reflectionIntensity: 0.3\r\n                },\r\n                lights: [\r\n                    {\r\n                        color: {\r\n                            r: 0.209818333,\r\n                            g: 0.242647052,\r\n                            b: 0.171280265,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        rotation: {\r\n                            x: 41.810318,\r\n                            y: 116.565048,\r\n                            z: 243.434937\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 0.0,\r\n                        spotAngle: 0.0,\r\n                        shadowsEnabled: true\r\n                    },\r\n                    {\r\n                        color: {\r\n                            r: 0.977941155,\r\n                            g: 0.506417,\r\n                            b: 0.438635379,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        rotation: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 0.0,\r\n                        spotAngle: 0.0,\r\n                        shadowsEnabled: false\r\n                    }\r\n                ],\r\n                teleportBoundsHalfWidth: 50.0,\r\n                controllerXRayHeight: -1E+09,\r\n                widgetHome: {\r\n                    x: 0.0,\r\n                    y: 0.0,\r\n                    z: 0.0\r\n                },\r\n                skyboxColorA: {\r\n                    r: 1.0,\r\n                    g: 0.5176471,\r\n                    b: 0.3529412,\r\n                    a: 1.0\r\n                },\r\n                skyboxColorB: {\r\n                    r: 0.458823532,\r\n                    g: 0.78039217,\r\n                    b: 0.5529412,\r\n                    a: 1.0\r\n                }\r\n            },\r\n            \"e65cde1a-a177-4bfb-b93f-f673c99a32bc\": {\r\n                name: \"Illustrative\",\r\n                guid: \"e65cde1a-a177-4bfb-b93f-f673c99a32bc\",\r\n                renderSettings: {\r\n                    fogEnabled: true,\r\n                    fogColor: {\r\n                        r: 1.0,\r\n                        g: 1.0,\r\n                        b: 1.0,\r\n                        a: 1.0\r\n                    },\r\n                    fogDensity: 0.0125,\r\n                    fogStartDistance: 0.0,\r\n                    fogEndDistance: 0.0,\r\n                    clearColor: {\r\n                        r: 0.7019608,\r\n                        g: 0.7019608,\r\n                        b: 0.7019608,\r\n                        a: 1.0\r\n                    },\r\n                    ambientColor: {\r\n                        r: 1.0,\r\n                        g: 1.0,\r\n                        b: 1.0,\r\n                        a: 1.0\r\n                    },\r\n                    skyboxExposure: 0.0,\r\n                    skyboxTint: {\r\n                        r: 0.625,\r\n                        g: 0.625,\r\n                        b: 0.625,\r\n                        a: 1.0\r\n                    },\r\n                    environmentPrefab: \"EnvironmentPrefabs/AmbientDustDim\",\r\n                    environmentReverbZone: \"EnvironmentAudio/ReverbZone_Room\",\r\n                    skyboxCubemap: null,\r\n                    reflectionCubemap: null,\r\n                    reflectionIntensity: 0.0\r\n                },\r\n                lights: [\r\n                    {\r\n                        color: {\r\n                            r: 0.0,\r\n                            g: 0.0,\r\n                            b: 0.0,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        rotation: {\r\n                            x: 0.0,\r\n                            y: 180.0,\r\n                            z: 180.0\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 0.0,\r\n                        spotAngle: 0.0,\r\n                        shadowsEnabled: true\r\n                    },\r\n                    {\r\n                        color: {\r\n                            r: 0.0,\r\n                            g: 0.0,\r\n                            b: 0.0,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        rotation: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 0.0,\r\n                        spotAngle: 0.0,\r\n                        shadowsEnabled: false\r\n                    }\r\n                ],\r\n                teleportBoundsHalfWidth: 100.0,\r\n                controllerXRayHeight: -1E+09,\r\n                widgetHome: {\r\n                    x: 0.0,\r\n                    y: 0.0,\r\n                    z: 0.0\r\n                },\r\n                skyboxColorA: {\r\n                    r: 0.7647059,\r\n                    g: 0.7647059,\r\n                    b: 0.7647059,\r\n                    a: 1.0\r\n                },\r\n                skyboxColorB: {\r\n                    r: 0.623529434,\r\n                    g: 0.623529434,\r\n                    b: 0.623529434,\r\n                    a: 1.0\r\n                }\r\n            },\r\n            \"580b4529-ac50-4fe9-b8d2-635765a14893\": {\r\n                name: \"Black\",\r\n                guid: \"580b4529-ac50-4fe9-b8d2-635765a14893\",\r\n                renderSettings: {\r\n                    fogEnabled: true,\r\n                    fogColor: {\r\n                        r: 0.0196078438,\r\n                        g: 0.0196078438,\r\n                        b: 0.0196078438,\r\n                        a: 1.0\r\n                    },\r\n                    fogDensity: 0.0,\r\n                    fogStartDistance: 0.0,\r\n                    fogEndDistance: 0.0,\r\n                    clearColor: {\r\n                        r: 0.0,\r\n                        g: 0.0,\r\n                        b: 0.0,\r\n                        a: 1.0\r\n                    },\r\n                    ambientColor: {\r\n                        r: 0.392156869,\r\n                        g: 0.392156869,\r\n                        b: 0.392156869,\r\n                        a: 1.0\r\n                    },\r\n                    skyboxExposure: 1.0,\r\n                    skyboxTint: {\r\n                        r: 0.0,\r\n                        g: 0.0,\r\n                        b: 0.0,\r\n                        a: 1.0\r\n                    },\r\n                    environmentPrefab: \"EnvironmentPrefabs/AmbientDust\",\r\n                    environmentReverbZone: \"EnvironmentAudio/ReverbZone_Room\",\r\n                    skyboxCubemap: null,\r\n                    reflectionCubemap: \"threelight_reflection\",\r\n                    reflectionIntensity: 0.3\r\n                },\r\n                lights: [\r\n                    {\r\n                        color: {\r\n                            r: 0.7780392,\r\n                            g: 0.815686345,\r\n                            b: 0.9913726,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        rotation: {\r\n                            x: 60.0000038,\r\n                            y: 0.0,\r\n                            z: 25.9999962\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: true\r\n                    },\r\n                    {\r\n                        color: {\r\n                            r: 0.428235322,\r\n                            g: 0.4211765,\r\n                            b: 0.3458824,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        rotation: {\r\n                            x: 40.0000038,\r\n                            y: 180.0,\r\n                            z: 220.0\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: false\r\n                    }\r\n                ],\r\n                teleportBoundsHalfWidth: 100.0,\r\n                controllerXRayHeight: -1E+09,\r\n                widgetHome: {\r\n                    x: 0.0,\r\n                    y: 0.0,\r\n                    z: 0.0\r\n                },\r\n                skyboxColorA: {\r\n                    r: 0.0,\r\n                    g: 0.0,\r\n                    b: 0.0,\r\n                    a: 1.0\r\n                },\r\n                skyboxColorB: {\r\n                    r: 0.0,\r\n                    g: 0.0,\r\n                    b: 0.0,\r\n                    a: 1.0\r\n                }\r\n            },\r\n            \"9b89b0a4-c41e-4b78-82a1-22f10a238357\": {\r\n                name: \"White\",\r\n                guid: \"9b89b0a4-c41e-4b78-82a1-22f10a238357\",\r\n                renderSettings: {\r\n                    fogEnabled: true,\r\n                    fogColor: {\r\n                        r: 1.0,\r\n                        g: 1.0,\r\n                        b: 1.0,\r\n                        a: 1.0\r\n                    },\r\n                    fogDensity: 0.0,\r\n                    fogStartDistance: 0.0,\r\n                    fogEndDistance: 0.0,\r\n                    clearColor: {\r\n                        r: 0.784313738,\r\n                        g: 0.784313738,\r\n                        b: 0.784313738,\r\n                        a: 1.0\r\n                    },\r\n                    ambientColor: {\r\n                        r: 0.392156869,\r\n                        g: 0.392156869,\r\n                        b: 0.392156869,\r\n                        a: 1.0\r\n                    },\r\n                    skyboxExposure: 1.0,\r\n                    skyboxTint: {\r\n                        r: 0.0,\r\n                        g: 0.0,\r\n                        b: 0.0,\r\n                        a: 1.0\r\n                    },\r\n                    environmentPrefab: \"EnvironmentPrefabs/AmbientGrid\",\r\n                    environmentReverbZone: \"EnvironmentAudio/ReverbZone_Room\",\r\n                    skyboxCubemap: null,\r\n                    reflectionCubemap: \"threelight_reflection\",\r\n                    reflectionIntensity: 0.4\r\n                },\r\n                lights: [\r\n                    {\r\n                        color: {\r\n                            r: 0.7780392,\r\n                            g: 0.815686345,\r\n                            b: 0.9913726,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        rotation: {\r\n                            x: 60.0000038,\r\n                            y: 0.0,\r\n                            z: 25.9999962\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: true\r\n                    },\r\n                    {\r\n                        color: {\r\n                            r: 0.428235322,\r\n                            g: 0.4211765,\r\n                            b: 0.3458824,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        rotation: {\r\n                            x: 40.0000038,\r\n                            y: 180.0,\r\n                            z: 220.0\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: false\r\n                    }\r\n                ],\r\n                teleportBoundsHalfWidth: 100.0,\r\n                controllerXRayHeight: -1E+09,\r\n                widgetHome: {\r\n                    x: 0.0,\r\n                    y: 0.0,\r\n                    z: 0.0\r\n                },\r\n                skyboxColorA: {\r\n                    r: 0.784313738,\r\n                    g: 0.784313738,\r\n                    b: 0.784313738,\r\n                    a: 1.0\r\n                },\r\n                skyboxColorB: {\r\n                    r: 0.784313738,\r\n                    g: 0.784313738,\r\n                    b: 0.784313738,\r\n                    a: 1.0\r\n                }\r\n            },\r\n            \"0ca88298-e5e8-4e94-aad8-4b4f6c80ae52\": {\r\n                name: \"Blue\",\r\n                guid: \"0ca88298-e5e8-4e94-aad8-4b4f6c80ae52\",\r\n                renderSettings: {\r\n                    fogEnabled: true,\r\n                    fogColor: {\r\n                        r: 0.6313726,\r\n                        g: 0.7137255,\r\n                        b: 0.894117653,\r\n                        a: 1.0\r\n                    },\r\n                    fogDensity: 0.005,\r\n                    fogStartDistance: 0.0,\r\n                    fogEndDistance: 0.0,\r\n                    clearColor: {\r\n                        r: 0.270588249,\r\n                        g: 0.309803933,\r\n                        b: 0.470588237,\r\n                        a: 1.0\r\n                    },\r\n                    ambientColor: {\r\n                        r: 0.203921571,\r\n                        g: 0.294117659,\r\n                        b: 0.368627459,\r\n                        a: 1.0\r\n                    },\r\n                    skyboxExposure: 1.46,\r\n                    skyboxTint: {\r\n                        r: 0.4627451,\r\n                        g: 0.5294118,\r\n                        b: 0.698039234,\r\n                        a: 1.0\r\n                    },\r\n                    environmentPrefab: \"EnvironmentPrefabs/AmbientGrid_Blue\",\r\n                    environmentReverbZone: \"EnvironmentAudio/ReverbZone_Room\",\r\n                    skyboxCubemap: \"gradientblue\",\r\n                    reflectionCubemap: \"threelight_reflection\",\r\n                    reflectionIntensity: 0.8\r\n                },\r\n                lights: [\r\n                    {\r\n                        color: {\r\n                            r: 1.5533334,\r\n                            g: 1.40666676,\r\n                            b: 1.77333343,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        rotation: {\r\n                            x: 60.0000038,\r\n                            y: 0.0,\r\n                            z: 25.9999962\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: true\r\n                    },\r\n                    {\r\n                        color: {\r\n                            r: 0.271215677,\r\n                            g: 0.2667451,\r\n                            b: 0.219058827,\r\n                            a: 1.0\r\n                        },\r\n                        position: {\r\n                            x: 0.0,\r\n                            y: 0.0,\r\n                            z: 0.0\r\n                        },\r\n                        rotation: {\r\n                            x: 40.0000038,\r\n                            y: 180.0,\r\n                            z: 220.0\r\n                        },\r\n                        type: \"Directional\",\r\n                        range: 5.0,\r\n                        spotAngle: 30.0,\r\n                        shadowsEnabled: false\r\n                    }\r\n                ],\r\n                teleportBoundsHalfWidth: 100.0,\r\n                controllerXRayHeight: -1E+09,\r\n                widgetHome: {\r\n                    x: 0.0,\r\n                    y: 0.0,\r\n                    z: 0.0\r\n                },\r\n                skyboxColorA: {\r\n                    r: 0.180392161,\r\n                    g: 0.235294119,\r\n                    b: 0.4117647,\r\n                    a: 1.0\r\n                },\r\n                skyboxColorB: {\r\n                    r: 0.356862754,\r\n                    g: 0.392156869,\r\n                    b: 0.6,\r\n                    a: 1.0\r\n                }\r\n            }\r\n        }[guid];\r\n    }\r\n\r\n    public async loadGltf1(url : string, loadEnvironment : boolean, overrides : any) {\r\n        try {\r\n            await this._loadGltf(url, loadEnvironment, overrides, true);\r\n        } catch (error) {\r\n            this.showErrorIcon();\r\n            console.error(\"Error loading glTFv1 model\");\r\n            this.loadingError = true;\r\n        }\r\n    }\r\n\r\n    public async loadGltf(url : string, loadEnvironment : boolean, overrides : any) {\r\n        try {\r\n            await this._loadGltf(url, loadEnvironment, overrides, false);\r\n        } catch (error) {\r\n            this.showErrorIcon();\r\n            console.error(\"Error loading glTFv2 model\");\r\n            this.loadingError = true;\r\n        }\r\n    }\r\n\r\n    private async replaceGltf1Materials(model: THREE.Object3D, brushPath: string): Promise<void> {\r\n\r\n        // Create a minimal mock parser object with the required options.manager\r\n        const mockParser = {\r\n            options: {\r\n                manager: THREE.DefaultLoadingManager\r\n            }\r\n        };\r\n        const extension = new GLTFGoogleTiltBrushMaterialExtension(mockParser, brushPath, true);\r\n        \r\n        // Collect all meshes first, then process them with async/await\r\n        const meshes: THREE.Mesh[] = [];\r\n        model.traverse((object) => {\r\n            if (object.type === \"Mesh\") {\r\n                meshes.push(object as THREE.Mesh);\r\n            }\r\n        });\r\n        \r\n        // Process all meshes asynchronously\r\n        for (const mesh of meshes) {\r\n            // Use material name directly - strip \"material_\" prefix if present\r\n            const materialName = (mesh.material as THREE.Material)?.name;\r\n            if (materialName) {\r\n                // Strip \"material_\" prefix if present\r\n                let brushId = materialName.startsWith('material_')\r\n                    ? materialName.substring('material_'.length)\r\n                    : materialName;\r\n                // At this point we either have just a guid or brushName-guid\r\n                // If we have brushName-guid, extract just the guid\r\n                const guidMatch = brushId.match(/[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}/);\r\n                if (guidMatch) {\r\n                    brushId = guidMatch[0];\r\n                }\r\n                try {\r\n                    await extension.replaceMaterial(mesh, brushId);\r\n                } catch (error) {\r\n                    console.warn(`Failed to replace material for ${brushId} on mesh ${mesh.name}:`, error);\r\n                    // Keep original material as fallback\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private async _loadGltf(url : string, loadEnvironment : boolean, overrides : any, isV1: boolean) {\r\n        let sceneGltf : GLTF;\r\n        this.overrides = overrides;\r\n        if (isV1) {\r\n            sceneGltf = <GLTF>await this.gltfLegacyLoader.loadAsync(url);\r\n            await this.replaceGltf1Materials(<Object3D>sceneGltf.scene, this.brushPath.toString());\r\n        } else {\r\n            sceneGltf = <GLTF>await this.gltfLoader.loadAsync(url);\r\n        }\r\n\r\n        // The legacy loader has the latter structure\r\n        let userData = sceneGltf.userData ?? sceneGltf.scene.userData;\r\n\r\n        this.setupSketchMetaDataFromScene(sceneGltf.scene, userData);\r\n        if (loadEnvironment) {await this.assignEnvironment(sceneGltf.scene);}\r\n        if (overrides?.tiltUrl) {this.tiltData = await this.tiltLoader.loadAsync(tiltUrl);}\r\n        this.loadedModel = sceneGltf.scene;\r\n        this.sceneGltf = sceneGltf;\r\n        this.initializeScene(overrides);\r\n    }\r\n\r\n    public async loadTilt(url: string, overrides : any) {\r\n        try {\r\n            const tiltData = await this.tiltLoader.loadAsync(url);\r\n            this.loadedModel = tiltData;\r\n            this.setupSketchMetaData(tiltData);\r\n            this.initializeScene(overrides);\r\n        } catch (error) {\r\n            this.showErrorIcon();\r\n            console.error(\"Error loading Tilt model\");\r\n            this.loadingError = true;\r\n        }\r\n    }\r\n\r\n    private setAllVertexColors(model : Object3D<THREE.Object3DEventMap>) {\r\n        model.traverse(node => {\r\n            if (node.material) {\r\n                if (Array.isArray(node.material)) {\r\n                    node.material.forEach(material => material.vertexColors = true);\r\n                } else {\r\n                    node.material.vertexColors = true;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // Defaults to assuming materials are vertex colored\r\n    public async loadObj(url: string, overrides: any) {\r\n        try {\r\n            this.objLoader.loadAsync(url).then((objData) => {\r\n\r\n                this.loadedModel = objData;\r\n\r\n                let defaultBackgroundColor = overrides?.[\"defaultBackgroundColor\"];\r\n                if (!defaultBackgroundColor) {defaultBackgroundColor = \"#000000\";}\r\n                this.defaultBackgroundColor = new THREE.Color(defaultBackgroundColor);\r\n\r\n                let withVertexColors = overrides?.[\"withVertexColors\"];\r\n                if (withVertexColors) {\r\n                    this.setAllVertexColors(this.loadedModel);\r\n                }\r\n                this.setupSketchMetaData(this.loadedModel);\r\n                this.initializeScene(overrides);\r\n            });\r\n        } catch (error) {\r\n            this.showErrorIcon();\r\n            console.error(\"Error loading Obj model\");\r\n            this.loadingError = true;\r\n        }\r\n    }\r\n\r\n    public async loadObjWithMtl(objUrl: string, mtlUrl: string, overrides: any) {\r\n        try {\r\n            this.mtlLoader.loadAsync(mtlUrl).then((materials) => {\r\n                materials.preload();\r\n                this.objLoader.setMaterials(materials);\r\n                this.objLoader.loadAsync(objUrl).then((objData) => {\r\n                    this.loadedModel = objData;\r\n\r\n                    let defaultBackgroundColor = overrides?.[\"defaultBackgroundColor\"];\r\n                    if (!defaultBackgroundColor) {defaultBackgroundColor = \"#000000\";}\r\n                    this.defaultBackgroundColor = new THREE.Color(defaultBackgroundColor);\r\n\r\n                    let withVertexColors = overrides?.[\"withVertexColors\"];\r\n                    if (withVertexColors) {\r\n                        this.setAllVertexColors(this.loadedModel);\r\n                    }\r\n                    this.setupSketchMetaData(this.loadedModel);\r\n                    this.initializeScene(overrides);\r\n                    this.frameScene(); // Not sure why the standard viewpoint heuristic isn't working here\r\n                });\r\n            });\r\n        } catch (error) {\r\n            this.showErrorIcon();\r\n            console.error(\"Error loading Obj/Mtl model\");\r\n            this.loadingError = true;\r\n        }\r\n    }\r\n\r\n    public async loadFbx(url: string, overrides : any) {\r\n        try {\r\n            const fbxData = await this.fbxLoader.loadAsync(url);\r\n            this.loadedModel = fbxData;\r\n            this.setupSketchMetaData(fbxData);\r\n            this.initializeScene(overrides);\r\n            this.frameScene();\r\n        } catch (error) {\r\n            this.showErrorIcon();\r\n            console.error(\"Error loading Fbx model\");\r\n            this.loadingError = true;\r\n        }\r\n    }\r\n\r\n    public async loadPly(url: string, overrides : any) {\r\n        try {\r\n            const plyData = await this.plyLoader.loadAsync(url);\r\n            plyData.computeVertexNormals();\r\n            const material = new THREE.MeshStandardMaterial({ color: 0xffffff, metalness: 0 });\r\n            const plyModel = new THREE.Mesh(plyData, material);\r\n            this.loadedModel = plyModel;\r\n            this.setupSketchMetaData(plyModel);\r\n            this.initializeScene(overrides);\r\n            this.frameScene();\r\n        } catch (error) {\r\n            this.showErrorIcon();\r\n            console.error(\"Error loading Ply model\");\r\n            this.loadingError = true;\r\n        }\r\n    }\r\n\r\n    public async loadStl(url: string, overrides : any) {\r\n        try {\r\n            const stlData = await this.stlLoader.loadAsync(url);\r\n            let material = new THREE.MeshStandardMaterial({ color: 0xffffff, metalness: 0 });\r\n            if (stlData.hasColors) {\r\n                material = new THREE.MeshStandardMaterial( { opacity: stlData.alpha, vertexColors: true } );\r\n            }\r\n            const stlModel = new THREE.Mesh(stlData, material);\r\n            this.loadedModel = stlModel;\r\n            this.setupSketchMetaData(stlModel);\r\n            this.initializeScene(overrides);\r\n            this.frameScene();\r\n        } catch (error) {\r\n            this.showErrorIcon();\r\n            console.error(\"Error loading Stl model\");\r\n            this.loadingError = true;\r\n        }\r\n    }\r\n\r\n    public async loadUsdz(url: string, overrides : any) {\r\n        try {\r\n            const usdzData = await this.usdzLoader.loadAsync(url);\r\n            this.loadedModel = usdzData;\r\n            this.setupSketchMetaData(usdzData);\r\n            this.initializeScene(overrides);\r\n            this.frameScene();\r\n        } catch (error) {\r\n            this.showErrorIcon();\r\n            console.error(\"Error loading Usdz model\");\r\n            this.loadingError = true;\r\n        }\r\n    }\r\n\r\n    public async loadVox(url: string, overrides : any) {\r\n        try {\r\n            let voxModel = new THREE.Group();\r\n            let chunks = await this.voxLoader.loadAsync(url);\r\n            for ( let i = 0; i < chunks.length; i ++ ) {\r\n                const chunk = chunks[ i ];\r\n                const mesh = new VOXMesh( chunk );\r\n                mesh.scale.setScalar( 0.0015 );\r\n                voxModel.add( mesh );\r\n            }\r\n            this.loadedModel = voxModel;\r\n            this.setupSketchMetaData(voxModel);\r\n            this.initializeScene(overrides);\r\n            this.frameScene();\r\n        } catch (error) {\r\n            this.showErrorIcon();\r\n            console.error(\"Error loading Vox model\");\r\n            this.loadingError = true;\r\n        }\r\n    }\r\n\r\n    private async loadSparkModule() {\r\n        try {\r\n            // Construct module name at runtime to avoid bundler processing\r\n            const moduleName = '@sparkjsdev' + '/' + 'spark';\r\n            const sparkModule = await import(/* webpackIgnore: true */ moduleName);\r\n            \r\n            if (!sparkModule.SplatMesh) {\r\n                throw new Error(\"SplatMesh not found in Spark module exports\");\r\n            }\r\n            \r\n            return sparkModule.SplatMesh;\r\n        } catch (error) {\r\n            throw new Error(`Spark (@sparkjsdev/spark) is not available: ${error.message}`);\r\n        }\r\n    }\r\n\r\n    public async loadSplat(url: string, overrides : any) {\r\n        try {\r\n            // Dynamic import for optional Spark dependency\r\n            let SplatMesh;\r\n            try {\r\n                SplatMesh = await this.loadSparkModule();\r\n            } catch (importError) {\r\n                console.error(importError.message);\r\n                this.showErrorIcon();\r\n                this.loadingError = true;\r\n                return;\r\n            }\r\n\r\n            const splatModel = new SplatMesh({ url });\r\n            await splatModel.initialized;\r\n            \r\n            this.loadedModel = splatModel;\r\n            this.setupSketchMetaData(splatModel);\r\n            this.modelBoundingBox = splatModel.getBoundingBox(false);\r\n            this.scene.add(this.loadedModel);\r\n            this.initializeScene(overrides);\r\n            this.frameScene();\r\n            \r\n            // Manually trigger loading screen fade-out since SplatMesh doesn't use LoadingManager\r\n            let loadscreen = document.getElementById('loadscreen');\r\n            if (loadscreen && !loadscreen.classList.contains('loaderror')) {\r\n                loadscreen.classList.add('fade-out');\r\n            }\r\n        } catch (error) {\r\n            this.showErrorIcon();\r\n            console.error(\"Error loading Splat model:\", error);\r\n            this.loadingError = true;\r\n        }\r\n    }\r\n\r\n    private async assignEnvironment(scene : Object3D<THREE.Object3DEventMap>) {\r\n        const guid = this.sketchMetadata?.EnvironmentGuid;\r\n        if (guid) {\r\n            const envUrl = new URL(`${guid}/${guid}.glb`, this.environmentPath);\r\n            // Use the standard GLTFLoader for environments\r\n            const standardLoader = new GLTFLoader();\r\n            const envGltf = await standardLoader.loadAsync(envUrl.toString());\r\n            envGltf.scene.setRotationFromEuler(new THREE.Euler(0, Math.PI, 0));\r\n            // Not sure why the environment models are 2x larger than they should be\r\n            envGltf.scene.scale.set(2, 2, 2);\r\n            scene.attach(envGltf.scene);\r\n            this.environmentObject = envGltf.scene;\r\n        }\r\n    }\r\n\r\n    public generateGradientSky(colorA: THREE.Color, colorB: THREE.Color, direction : THREE.Vector3) : THREE.Mesh\r\n    {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.id = \"skyCanvas\";\r\n        canvas.width = 1;\r\n        canvas.height = 256;\r\n        const context = canvas.getContext('2d');\r\n\r\n        const gradient = context.createLinearGradient(0, 0, 0, 256);\r\n        gradient.addColorStop(0, colorB.convertSRGBToLinear().getStyle());\r\n        gradient.addColorStop(1, colorA.convertSRGBToLinear().getStyle());\r\n        context.fillStyle = gradient;\r\n        context.fillRect(0, 0, 1, 256);\r\n\r\n        const texture = new THREE.CanvasTexture(canvas);\r\n        texture.wrapS = THREE.RepeatWrapping;\r\n        texture.wrapT = THREE.ClampToEdgeWrapping;\r\n        return this.generateSkyGeometry(texture, direction);\r\n    }\r\n\r\n    public generateTextureSky(textureName: string) : THREE.Mesh {\r\n        const textureUrl = new URL(`skies/${textureName}.png`, this.texturePath);\r\n        let texture = new THREE.TextureLoader().load(textureUrl.toString());\r\n        return this.generateSkyGeometry(texture, new THREE.Vector3(0, 1, 0));\r\n    }\r\n\r\n    public generateSkyGeometry(texture: THREE.Texture, direction: THREE.Vector3) : THREE.Mesh {\r\n        texture.colorSpace = THREE.SRGBColorSpace;\r\n        const material = new THREE.MeshBasicMaterial({ map: texture, side: THREE.BackSide });\r\n        material.fog = false;\r\n        material.toneMapped = false;\r\n        const geometry = new THREE.SphereGeometry(5000, 64, 64);\r\n        const skysphere = new THREE.Mesh(geometry, material);\r\n        skysphere.name = \"environmentSky\"\r\n        const defaultUp = new THREE.Vector3(0, 1, 0);\r\n        const quaternion = new THREE.Quaternion().setFromUnitVectors(defaultUp, direction);\r\n        skysphere.applyQuaternion(quaternion);\r\n        return skysphere;\r\n    }\r\n\r\n    private setupSketchMetaDataFromScene(scene: Object3D<THREE.Object3DEventMap>, userData: any) {\r\n        let sketchMetaData = new SketchMetadata(scene, userData);\r\n        this.modelBoundingBox = new THREE.Box3().setFromObject(scene);\r\n        this.sketchMetadata = sketchMetaData;\r\n    }\r\n\r\n    private setupSketchMetaData(model: Object3D<THREE.Object3DEventMap>) {\r\n        let sketchMetaData = new SketchMetadata(model, model.userData);\r\n        this.modelBoundingBox = new THREE.Box3().setFromObject(model);\r\n        this.sketchMetadata = sketchMetaData;\r\n    }\r\n\r\n    private initCameras() {\r\n\r\n        let cameraOverrides = this.overrides?.camera;\r\n\r\n        let cameraPos = cameraOverrides?.translation || this.sketchMetadata?.CameraTranslation.toArray() || [0, 1, -1];\r\n        let cameraRot = cameraOverrides?.rotation || this.sketchMetadata?.CameraRotation.toArray() || [0, 0, 0]; // Could be euler angles or quaternion\r\n\r\n        // Fix handedness between Unity and gltf/three.js\r\n        // Should we fix this on export?\r\n        if (cameraRot.length == 3) {\r\n            // Assume euler angles in degrees\r\n            cameraRot[0] += 0;\r\n            cameraRot[1] += 180;\r\n            cameraRot[2] += 0;\r\n\r\n            cameraRot[0] = THREE.MathUtils.degToRad(cameraRot[0]);\r\n            cameraRot[1] = THREE.MathUtils.degToRad(cameraRot[1]);\r\n            cameraRot[2] = THREE.MathUtils.degToRad(cameraRot[2]);\r\n        }\r\n\r\n        const fov = (cameraOverrides?.perspective?.yfov / (Math.PI / 180)) || 75;\r\n        const aspect = 2;\r\n        const near = cameraOverrides?.perspective?.znear || 0.1;\r\n        const far = 6000;\r\n\r\n        this.flatCamera = new THREE.PerspectiveCamera(fov, aspect, near, far);\r\n        this.flatCamera.position.set(cameraPos[0], cameraPos[1], cameraPos[2]);\r\n        if (cameraRot.length == 3) { // euler angles\r\n            this.flatCamera.rotation.setFromVector3(new THREE.Vector3(cameraRot[0], cameraRot[1], cameraRot[2]));\r\n        } else { // quaternion\r\n            this.flatCamera.quaternion.set(cameraRot[0], cameraRot[1], cameraRot[2], cameraRot[3]);\r\n        }\r\n        this.flatCamera.updateProjectionMatrix();\r\n\r\n        this.xrCamera = new THREE.PerspectiveCamera(fov, aspect, near, far);\r\n        this.cameraRig = new THREE.Group();\r\n        this.scene.add(this.cameraRig);\r\n        this.cameraRig.rotation.y = this.flatCamera.rotation.y;\r\n        this.cameraRig.rotation.setFromQuaternion(this.flatCamera.quaternion);\r\n        this.cameraRig.add(this.xrCamera);\r\n        this.xrCamera.updateProjectionMatrix();\r\n\r\n        this.activeCamera = this.flatCamera;\r\n\r\n        let cameraTarget;\r\n        let pivot = cameraOverrides?.GOOGLE_camera_settings?.pivot\r\n        if (pivot) {\r\n            cameraTarget = new THREE.Vector3(pivot[0], pivot[1], pivot[2]);\r\n        } else {\r\n            let vp =  this.overrides?.geometryData?.visualCenterPoint;\r\n            if (!vp) {\r\n                const box = this.modelBoundingBox;\r\n                if (box != undefined) {\r\n                    const boxCenter = box.getCenter(new THREE.Vector3());\r\n                    vp = [boxCenter.x, boxCenter.y, boxCenter.z];\r\n                }\r\n            }\r\n            let visualCenterPoint = new THREE.Vector3(vp[0], vp[1], vp[2]);\r\n            cameraTarget = this.calculatePivot(this.flatCamera, visualCenterPoint);\r\n            cameraTarget = cameraTarget || visualCenterPoint;\r\n        }\r\n\r\n        CameraControls.install({THREE: THREE});\r\n        this.cameraControls = new CameraControls(this.flatCamera, viewer.canvas);\r\n        this.cameraControls.smoothTime = 1;\r\n        this.cameraControls.polarRotateSpeed = this.cameraControls.azimuthRotateSpeed = 0.5;\r\n        this.cameraControls.setPosition(cameraPos[0], cameraPos[1], cameraPos[2], false);\r\n        this.cameraControls.setTarget(cameraTarget.x, cameraTarget.y, cameraTarget.z, false);\r\n        setupNavigation(this.cameraControls);\r\n\r\n        // this.trackballControls = new TrackballControls(this.activeCamera, this.canvas);\r\n        // this.trackballControls.target = cameraTarget;\r\n        // this.trackballControls.rotateSpeed = 1.0;\r\n        // this.trackballControls.zoomSpeed = 1.2;\r\n        // this.trackballControls.panSpeed = 0.8;\r\n\r\n        // let noOverrides = !cameraOverrides || !cameraOverrides?.perspective;\r\n        // if (noOverrides) {\r\n        //     this.frameScene();\r\n        // }\r\n    }\r\n\r\n    private calculatePivot(camera : THREE.Camera, centroid : THREE.Vector3) {\r\n        // 1. Get the camera's forward vector\r\n        const forward = new THREE.Vector3();\r\n        camera.getWorldDirection(forward); // This gives the forward vector in world space.\r\n\r\n        // 2. Define a plane based on the centroid and facing the camera\r\n        const planeNormal = forward.clone().negate(); // Plane facing the camera\r\n        const plane = new THREE.Plane().setFromNormalAndCoplanarPoint(planeNormal, centroid);\r\n\r\n        // 3. Calculate the intersection point of the forward vector with the plane\r\n        const cameraPosition = camera.position.clone();\r\n        const ray = new THREE.Ray(cameraPosition, forward);\r\n        const intersectionPoint = new THREE.Vector3();\r\n\r\n        if (ray.intersectPlane(plane, intersectionPoint)) {\r\n            return intersectionPoint; // This is your calculated pivot point.\r\n        } else {\r\n            console.error(\"No intersection between camera forward vector and plane.\");\r\n            return null; // Handle the error case gracefully.\r\n        }\r\n    }\r\n\r\n    private initLights() {\r\n        // Logic for scene light creation:\r\n        // 1. Are there explicit GLTF scene lights? If so use them and skip the rest\r\n        // 2. Are there dummy transforms in the GLTF that represent scene lights? If so use them in preference.\r\n        // 3. Does the GLTF have custom metadata for light transform and color?\r\n        // 4. Does the GLTF have an environment preset guid? If so use the light transform and colors from that\r\n        // 5. If there's neither custom metadata, an environment guid or explicit GLTF lights - create some default lighting.\r\n\r\n        function convertTBEuler(rot: THREE.Vector3) : THREE.Euler {\r\n            const deg2rad = Math.PI / 180;\r\n            return new THREE.Euler(\r\n                THREE.MathUtils.degToRad(rot.x),\r\n                THREE.MathUtils.degToRad(rot.y),\r\n                THREE.MathUtils.degToRad(rot.z)\r\n            );\r\n        }\r\n\r\n        if (this.sketchMetadata == undefined || this.sketchMetadata == null) {\r\n            const light = new THREE.DirectionalLight(0xffffff, 1);\r\n            light.position.set(10, 10, 10).normalize();\r\n            this.loadedModel.add(light);\r\n            return;\r\n        }\r\n\r\n        let l0 = new THREE.DirectionalLight(this.sketchMetadata.SceneLight0Color, 1.0);\r\n        let l1 = new THREE.DirectionalLight(this.sketchMetadata.SceneLight1Color, 1.0);\r\n        l0.setRotationFromEuler(convertTBEuler(this.sketchMetadata.SceneLight0Rotation))\r\n        l1.setRotationFromEuler(convertTBEuler(this.sketchMetadata.SceneLight1Rotation))\r\n        l0.castShadow = true;\r\n        l1.castShadow = false;\r\n        this.loadedModel?.add(l0);\r\n        this.loadedModel?.add(l1);\r\n\r\n        const ambientLight = new THREE.AmbientLight();\r\n        ambientLight.color = this.sketchMetadata.AmbientLightColor;\r\n        this.scene.add(ambientLight);\r\n    }\r\n\r\n    private initFog() {\r\n        if (this.sketchMetadata == undefined || this.sketchMetadata == null) {\r\n            return;\r\n        }\r\n        this.scene.fog = new THREE.FogExp2(\r\n            this.sketchMetadata.FogColor,\r\n            this.sketchMetadata.FogDensity\r\n        );\r\n    }\r\n\r\n\r\n    private initSceneBackground() {\r\n\r\n        // OBJ and FBX models don't have metadata\r\n        if (!this.sketchMetadata == undefined) {\r\n            this.scene.background = this.defaultBackgroundColor;\r\n            return;\r\n        }\r\n        let sky : Object3D<THREE.Object3DEventMap> | null = null;\r\n        if (this.sketchMetadata.UseGradient) {\r\n            sky = this.generateGradientSky(\r\n                this.sketchMetadata.SkyColorA,\r\n                this.sketchMetadata.SkyColorB,\r\n                this.sketchMetadata.SkyGradientDirection\r\n            );\r\n        } else if (this.sketchMetadata.SkyTexture) {\r\n            sky = this.generateTextureSky(\r\n                this.sketchMetadata.SkyTexture\r\n            );\r\n        }\r\n\r\n        if (sky !== null) {\r\n            this.scene?.add(sky as Object3D<THREE.Object3DEventMap>);\r\n            this.skyObject = sky;\r\n        } else {\r\n            // Use the default background color if there's no sky\r\n            this.scene.background = this.defaultBackgroundColor;\r\n        }\r\n    }\r\n\r\n    public frameScene() {\r\n        if (this.selectedNode != null) {\r\n            // If a node is selected in the treeview, frame that\r\n            this.frameNode(this.selectedNode);\r\n        } else if (this.modelBoundingBox != null) {\r\n            // This should be the bounding box of the loaded model itself\r\n            this.frameBox(this.modelBoundingBox);\r\n        } else {\r\n            // Fall back to framing the whole scene\r\n            let box = new THREE.Box3().setFromObject(this.scene);\r\n            this.frameBox(box);\r\n        }\r\n    }\r\n\r\n    private frameNode(node: THREE.Object3D) {\r\n        this.frameBox(new THREE.Box3().setFromObject(node));\r\n    }\r\n\r\n    private frameBox(box: THREE.Box3) {\r\n\r\n        const boxSize = box.getSize(new THREE.Vector3()).length();\r\n        const boxCenter = box.getCenter(new THREE.Vector3());\r\n\r\n        this.cameraControls.minDistance = boxSize * 0.01;\r\n        this.cameraControls.maxDistance = boxSize * 10;\r\n\r\n        const midDistance = this.cameraControls.minDistance + (boxSize - this.cameraControls.minDistance) / 2;\r\n        this.cameraControls.setTarget(boxCenter.x, boxCenter.y, boxCenter.z);\r\n        let sphere = new THREE.Sphere();\r\n        box.getBoundingSphere(sphere);\r\n        let fullDistance = sphere.radius * 1.75;\r\n        this.cameraControls.dollyTo(fullDistance, true);\r\n        this.cameraControls.saveState();\r\n    }\r\n\r\n    public levelCamera() {\r\n        // Sets the camera target so that the camera is looking forward and level\r\n        let cameraPos = new THREE.Vector3();\r\n        this.cameraControls.getPosition(cameraPos);\r\n        let cameraDir = new THREE.Vector3();\r\n        this.cameraControls.camera.getWorldDirection(cameraDir);\r\n        cameraDir.y = 0; // Ensure the direction is level\r\n        cameraDir.normalize();\r\n        let newTarget = cameraPos.clone().add(cameraDir);\r\n        this.cameraControls.setTarget(newTarget.x, newTarget.y, newTarget.z, true);\r\n    }\r\n\r\n    public createTreeView(model : Object3D<THREE.Object3DEventMap>, root: HTMLElement) {\r\n        const treeView = root;\r\n        if (!treeView) {\r\n            console.error('Tree view container not found');\r\n            return;\r\n        }\r\n        treeView.innerHTML = '';\r\n        if (model) {\r\n            this.createTreeViewNode(model, treeView);\r\n        } else {\r\n            console.error('Model not loaded');\r\n        }\r\n    }\r\n\r\n    public createTreeViewNode(object : THREE.Object3D, parentElement : HTMLElement) {\r\n        const nodeElement = document.createElement('div');\r\n        nodeElement.classList.add('tree-node');\r\n        nodeElement.style.marginLeft = '5px';\r\n\r\n        const contentElement = document.createElement('div');\r\n        contentElement.classList.add('tree-content');\r\n\r\n        const toggleButton = document.createElement('span');\r\n        toggleButton.classList.add('toggle-btn');\r\n        toggleButton.textContent = object.children && object.children.length > 0 ? '▶' : ' ';\r\n        toggleButton.addEventListener('click', () => {\r\n            nodeElement.classList.toggle('expanded');\r\n            toggleButton.textContent = nodeElement.classList.contains('expanded') ? '▼' : '▶';\r\n        });\r\n\r\n        const visibilityCheckbox = document.createElement('input');\r\n        visibilityCheckbox.type = 'checkbox';\r\n        visibilityCheckbox.checked = object.visible;\r\n        visibilityCheckbox.addEventListener('change', () => {\r\n            object.visible = visibilityCheckbox.checked;\r\n        });\r\n\r\n        const label = document.createElement('span');\r\n        label.classList.add('label');\r\n        label.textContent = object.name || object.type;\r\n        label.style.marginLeft = '5px';\r\n\r\n        contentElement.appendChild(toggleButton);\r\n        contentElement.appendChild(visibilityCheckbox);\r\n        contentElement.appendChild(label);\r\n        label.addEventListener('click', () => {\r\n\r\n            let wasSelected : boolean = label.classList.contains('selected');\r\n\r\n            document.querySelectorAll('.tree-node').forEach(node => {\r\n                const label = node.querySelector('.label');\r\n                if (label) {\r\n                    label.classList.remove('selected');\r\n                }\r\n            });\r\n\r\n            if (wasSelected)\r\n            {\r\n                label.classList.remove('selected');\r\n                this.selectedNode = null;\r\n            } else {\r\n                label.classList.add('selected');\r\n                this.selectedNode = object;\r\n            }\r\n            console.log(object);\r\n        });\r\n\r\n        nodeElement.appendChild(contentElement);\r\n\r\n        if (object.children && object.children.length > 0) {\r\n            const childrenContainer = document.createElement('div');\r\n            childrenContainer.classList.add('children');\r\n            nodeElement.appendChild(childrenContainer);\r\n\r\n            object.children.forEach(child => {\r\n                this.createTreeViewNode(child, childrenContainer);\r\n            });\r\n        }\r\n\r\n        parentElement.appendChild(nodeElement);\r\n    }\r\n}\r\n","/*!\n * camera-controls\n * https://github.com/yomotsu/camera-controls\n * (c) 2017 @yomotsu\n * Released under the MIT License.\n */\n// see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#value\nconst MOUSE_BUTTON = {\n    LEFT: 1,\n    RIGHT: 2,\n    MIDDLE: 4,\n};\nconst ACTION = Object.freeze({\n    NONE: 0b0,\n    ROTATE: 0b1,\n    TRUCK: 0b10,\n    SCREEN_PAN: 0b100,\n    OFFSET: 0b1000,\n    DOLLY: 0b10000,\n    ZOOM: 0b100000,\n    TOUCH_ROTATE: 0b1000000,\n    TOUCH_TRUCK: 0b10000000,\n    TOUCH_SCREEN_PAN: 0b100000000,\n    TOUCH_OFFSET: 0b1000000000,\n    TOUCH_DOLLY: 0b10000000000,\n    TOUCH_ZOOM: 0b100000000000,\n    TOUCH_DOLLY_TRUCK: 0b1000000000000,\n    TOUCH_DOLLY_SCREEN_PAN: 0b10000000000000,\n    TOUCH_DOLLY_OFFSET: 0b100000000000000,\n    TOUCH_DOLLY_ROTATE: 0b1000000000000000,\n    TOUCH_ZOOM_TRUCK: 0b10000000000000000,\n    TOUCH_ZOOM_OFFSET: 0b100000000000000000,\n    TOUCH_ZOOM_SCREEN_PAN: 0b1000000000000000000,\n    TOUCH_ZOOM_ROTATE: 0b10000000000000000000,\n});\nconst DOLLY_DIRECTION = {\n    NONE: 0,\n    IN: 1,\n    OUT: -1,\n};\nfunction isPerspectiveCamera(camera) {\n    return camera.isPerspectiveCamera;\n}\nfunction isOrthographicCamera(camera) {\n    return camera.isOrthographicCamera;\n}\n\nconst PI_2 = Math.PI * 2;\nconst PI_HALF = Math.PI / 2;\n\nconst EPSILON = 1e-5;\nconst DEG2RAD = Math.PI / 180;\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\nfunction approxZero(number, error = EPSILON) {\n    return Math.abs(number) < error;\n}\nfunction approxEquals(a, b, error = EPSILON) {\n    return approxZero(a - b, error);\n}\nfunction roundToStep(value, step) {\n    return Math.round(value / step) * step;\n}\nfunction infinityToMaxNumber(value) {\n    if (isFinite(value))\n        return value;\n    if (value < 0)\n        return -Number.MAX_VALUE;\n    return Number.MAX_VALUE;\n}\nfunction maxNumberToInfinity(value) {\n    if (Math.abs(value) < Number.MAX_VALUE)\n        return value;\n    return value * Infinity;\n}\n// https://docs.unity3d.com/ScriptReference/Mathf.SmoothDamp.html\n// https://github.com/Unity-Technologies/UnityCsReference/blob/a2bdfe9b3c4cd4476f44bf52f848063bfaf7b6b9/Runtime/Export/Math/Mathf.cs#L308\nfunction smoothDamp(current, target, currentVelocityRef, smoothTime, maxSpeed = Infinity, deltaTime) {\n    // Based on Game Programming Gems 4 Chapter 1.10\n    smoothTime = Math.max(0.0001, smoothTime);\n    const omega = 2 / smoothTime;\n    const x = omega * deltaTime;\n    const exp = 1 / (1 + x + 0.48 * x * x + 0.235 * x * x * x);\n    let change = current - target;\n    const originalTo = target;\n    // Clamp maximum speed\n    const maxChange = maxSpeed * smoothTime;\n    change = clamp(change, -maxChange, maxChange);\n    target = current - change;\n    const temp = (currentVelocityRef.value + omega * change) * deltaTime;\n    currentVelocityRef.value = (currentVelocityRef.value - omega * temp) * exp;\n    let output = target + (change + temp) * exp;\n    // Prevent overshooting\n    if (originalTo - current > 0.0 === output > originalTo) {\n        output = originalTo;\n        currentVelocityRef.value = (output - originalTo) / deltaTime;\n    }\n    return output;\n}\n// https://docs.unity3d.com/ScriptReference/Vector3.SmoothDamp.html\n// https://github.com/Unity-Technologies/UnityCsReference/blob/a2bdfe9b3c4cd4476f44bf52f848063bfaf7b6b9/Runtime/Export/Math/Vector3.cs#L97\nfunction smoothDampVec3(current, target, currentVelocityRef, smoothTime, maxSpeed = Infinity, deltaTime, out) {\n    // Based on Game Programming Gems 4 Chapter 1.10\n    smoothTime = Math.max(0.0001, smoothTime);\n    const omega = 2 / smoothTime;\n    const x = omega * deltaTime;\n    const exp = 1 / (1 + x + 0.48 * x * x + 0.235 * x * x * x);\n    let targetX = target.x;\n    let targetY = target.y;\n    let targetZ = target.z;\n    let changeX = current.x - targetX;\n    let changeY = current.y - targetY;\n    let changeZ = current.z - targetZ;\n    const originalToX = targetX;\n    const originalToY = targetY;\n    const originalToZ = targetZ;\n    // Clamp maximum speed\n    const maxChange = maxSpeed * smoothTime;\n    const maxChangeSq = maxChange * maxChange;\n    const magnitudeSq = changeX * changeX + changeY * changeY + changeZ * changeZ;\n    if (magnitudeSq > maxChangeSq) {\n        const magnitude = Math.sqrt(magnitudeSq);\n        changeX = changeX / magnitude * maxChange;\n        changeY = changeY / magnitude * maxChange;\n        changeZ = changeZ / magnitude * maxChange;\n    }\n    targetX = current.x - changeX;\n    targetY = current.y - changeY;\n    targetZ = current.z - changeZ;\n    const tempX = (currentVelocityRef.x + omega * changeX) * deltaTime;\n    const tempY = (currentVelocityRef.y + omega * changeY) * deltaTime;\n    const tempZ = (currentVelocityRef.z + omega * changeZ) * deltaTime;\n    currentVelocityRef.x = (currentVelocityRef.x - omega * tempX) * exp;\n    currentVelocityRef.y = (currentVelocityRef.y - omega * tempY) * exp;\n    currentVelocityRef.z = (currentVelocityRef.z - omega * tempZ) * exp;\n    out.x = targetX + (changeX + tempX) * exp;\n    out.y = targetY + (changeY + tempY) * exp;\n    out.z = targetZ + (changeZ + tempZ) * exp;\n    // Prevent overshooting\n    const origMinusCurrentX = originalToX - current.x;\n    const origMinusCurrentY = originalToY - current.y;\n    const origMinusCurrentZ = originalToZ - current.z;\n    const outMinusOrigX = out.x - originalToX;\n    const outMinusOrigY = out.y - originalToY;\n    const outMinusOrigZ = out.z - originalToZ;\n    if (origMinusCurrentX * outMinusOrigX + origMinusCurrentY * outMinusOrigY + origMinusCurrentZ * outMinusOrigZ > 0) {\n        out.x = originalToX;\n        out.y = originalToY;\n        out.z = originalToZ;\n        currentVelocityRef.x = (out.x - originalToX) / deltaTime;\n        currentVelocityRef.y = (out.y - originalToY) / deltaTime;\n        currentVelocityRef.z = (out.z - originalToZ) / deltaTime;\n    }\n    return out;\n}\n\nfunction extractClientCoordFromEvent(pointers, out) {\n    out.set(0, 0);\n    pointers.forEach((pointer) => {\n        out.x += pointer.clientX;\n        out.y += pointer.clientY;\n    });\n    out.x /= pointers.length;\n    out.y /= pointers.length;\n}\n\nfunction notSupportedInOrthographicCamera(camera, message) {\n    if (isOrthographicCamera(camera)) {\n        console.warn(`${message} is not supported in OrthographicCamera`);\n        return true;\n    }\n    return false;\n}\n\nclass EventDispatcher {\n    constructor() {\n        this._listeners = {};\n    }\n    /**\n     * Adds the specified event listener.\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    addEventListener(type, listener) {\n        const listeners = this._listeners;\n        if (listeners[type] === undefined)\n            listeners[type] = [];\n        if (listeners[type].indexOf(listener) === -1)\n            listeners[type].push(listener);\n    }\n    /**\n     * Presence of the specified event listener.\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    hasEventListener(type, listener) {\n        const listeners = this._listeners;\n        return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n    }\n    /**\n     * Removes the specified event listener\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    removeEventListener(type, listener) {\n        const listeners = this._listeners;\n        const listenerArray = listeners[type];\n        if (listenerArray !== undefined) {\n            const index = listenerArray.indexOf(listener);\n            if (index !== -1)\n                listenerArray.splice(index, 1);\n        }\n    }\n    /**\n     * Removes all event listeners\n     * @param type event name\n     * @category Methods\n     */\n    removeAllEventListeners(type) {\n        if (!type) {\n            this._listeners = {};\n            return;\n        }\n        if (Array.isArray(this._listeners[type]))\n            this._listeners[type].length = 0;\n    }\n    /**\n     * Fire an event type.\n     * @param event DispatcherEvent\n     * @category Methods\n     */\n    dispatchEvent(event) {\n        const listeners = this._listeners;\n        const listenerArray = listeners[event.type];\n        if (listenerArray !== undefined) {\n            event.target = this;\n            const array = listenerArray.slice(0);\n            for (let i = 0, l = array.length; i < l; i++) {\n                array[i].call(this, event);\n            }\n        }\n    }\n}\n\nvar _a;\nconst VERSION = '2.10.1'; // will be replaced with `version` in package.json during the build process.\nconst TOUCH_DOLLY_FACTOR = 1 / 8;\nconst isMac = /Mac/.test((_a = globalThis === null || globalThis === void 0 ? void 0 : globalThis.navigator) === null || _a === void 0 ? void 0 : _a.platform);\nlet THREE;\nlet _ORIGIN;\nlet _AXIS_Y;\nlet _AXIS_Z;\nlet _v2;\nlet _v3A;\nlet _v3B;\nlet _v3C;\nlet _cameraDirection;\nlet _xColumn;\nlet _yColumn;\nlet _zColumn;\nlet _deltaTarget;\nlet _deltaOffset;\nlet _sphericalA;\nlet _sphericalB;\nlet _box3A;\nlet _box3B;\nlet _sphere;\nlet _quaternionA;\nlet _quaternionB;\nlet _rotationMatrix;\nlet _raycaster;\nclass CameraControls extends EventDispatcher {\n    /**\n     * Injects THREE as the dependency. You can then proceed to use CameraControls.\n     *\n     * e.g\n     * ```javascript\n     * CameraControls.install( { THREE: THREE } );\n     * ```\n     *\n     * Note: If you do not wish to use enter three.js to reduce file size(tree-shaking for example), make a subset to install.\n     *\n     * ```js\n     * import {\n     * \tVector2,\n     * \tVector3,\n     * \tVector4,\n     * \tQuaternion,\n     * \tMatrix4,\n     * \tSpherical,\n     * \tBox3,\n     * \tSphere,\n     * \tRaycaster,\n     * \tMathUtils,\n     * } from 'three';\n     *\n     * const subsetOfTHREE = {\n     * \tVector2   : Vector2,\n     * \tVector3   : Vector3,\n     * \tVector4   : Vector4,\n     * \tQuaternion: Quaternion,\n     * \tMatrix4   : Matrix4,\n     * \tSpherical : Spherical,\n     * \tBox3      : Box3,\n     * \tSphere    : Sphere,\n     * \tRaycaster : Raycaster,\n     * };\n\n     * CameraControls.install( { THREE: subsetOfTHREE } );\n     * ```\n     * @category Statics\n     */\n    static install(libs) {\n        THREE = libs.THREE;\n        _ORIGIN = Object.freeze(new THREE.Vector3(0, 0, 0));\n        _AXIS_Y = Object.freeze(new THREE.Vector3(0, 1, 0));\n        _AXIS_Z = Object.freeze(new THREE.Vector3(0, 0, 1));\n        _v2 = new THREE.Vector2();\n        _v3A = new THREE.Vector3();\n        _v3B = new THREE.Vector3();\n        _v3C = new THREE.Vector3();\n        _cameraDirection = new THREE.Vector3();\n        _xColumn = new THREE.Vector3();\n        _yColumn = new THREE.Vector3();\n        _zColumn = new THREE.Vector3();\n        _deltaTarget = new THREE.Vector3();\n        _deltaOffset = new THREE.Vector3();\n        _sphericalA = new THREE.Spherical();\n        _sphericalB = new THREE.Spherical();\n        _box3A = new THREE.Box3();\n        _box3B = new THREE.Box3();\n        _sphere = new THREE.Sphere();\n        _quaternionA = new THREE.Quaternion();\n        _quaternionB = new THREE.Quaternion();\n        _rotationMatrix = new THREE.Matrix4();\n        _raycaster = new THREE.Raycaster();\n    }\n    /**\n     * list all ACTIONs\n     * @category Statics\n     */\n    static get ACTION() {\n        return ACTION;\n    }\n    /**\n     * @deprecated Use `cameraControls.mouseButtons.left = CameraControls.ACTION.SCREEN_PAN` instead.\n     */\n    set verticalDragToForward(_) {\n        console.warn('camera-controls: `verticalDragToForward` was removed. Use `mouseButtons.left = CameraControls.ACTION.SCREEN_PAN` instead.');\n    }\n    /**\n     * Creates a `CameraControls` instance.\n     *\n     * Note:\n     * You **must install** three.js before using camera-controls. see [#install](#install)\n     * Not doing so will lead to runtime errors (`undefined` references to THREE).\n     *\n     * e.g.\n     * ```\n     * CameraControls.install( { THREE } );\n     * const cameraControls = new CameraControls( camera, domElement );\n     * ```\n     *\n     * @param camera A `THREE.PerspectiveCamera` or `THREE.OrthographicCamera` to be controlled.\n     * @param domElement A `HTMLElement` for the draggable area, usually `renderer.domElement`.\n     * @category Constructor\n     */\n    constructor(camera, domElement) {\n        super();\n        /**\n         * Minimum vertical angle in radians.\n         * The angle has to be between `0` and `.maxPolarAngle` inclusive.\n         * The default value is `0`.\n         *\n         * e.g.\n         * ```\n         * cameraControls.maxPolarAngle = 0;\n         * ```\n         * @category Properties\n         */\n        this.minPolarAngle = 0; // radians\n        /**\n         * Maximum vertical angle in radians.\n         * The angle has to be between `.maxPolarAngle` and `Math.PI` inclusive.\n         * The default value is `Math.PI`.\n         *\n         * e.g.\n         * ```\n         * cameraControls.maxPolarAngle = Math.PI;\n         * ```\n         * @category Properties\n         */\n        this.maxPolarAngle = Math.PI; // radians\n        /**\n         * Minimum horizontal angle in radians.\n         * The angle has to be less than `.maxAzimuthAngle`.\n         * The default value is `- Infinity`.\n         *\n         * e.g.\n         * ```\n         * cameraControls.minAzimuthAngle = - Infinity;\n         * ```\n         * @category Properties\n         */\n        this.minAzimuthAngle = -Infinity; // radians\n        /**\n         * Maximum horizontal angle in radians.\n         * The angle has to be greater than `.minAzimuthAngle`.\n         * The default value is `Infinity`.\n         *\n         * e.g.\n         * ```\n         * cameraControls.maxAzimuthAngle = Infinity;\n         * ```\n         * @category Properties\n         */\n        this.maxAzimuthAngle = Infinity; // radians\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        /**\n         * Minimum distance for dolly. The value must be higher than `0`. Default is `Number.EPSILON`.\n         * PerspectiveCamera only.\n         * @category Properties\n         */\n        this.minDistance = Number.EPSILON;\n        /**\n         * Maximum distance for dolly. The value must be higher than `minDistance`. Default is `Infinity`.\n         * PerspectiveCamera only.\n         * @category Properties\n         */\n        this.maxDistance = Infinity;\n        /**\n         * `true` to enable Infinity Dolly for wheel and pinch. Use this with `minDistance` and `maxDistance`\n         * If the Dolly distance is less (or over) than the `minDistance` (or `maxDistance`), `infinityDolly` will keep the distance and pushes the target position instead.\n         * @category Properties\n         */\n        this.infinityDolly = false;\n        /**\n         * Minimum camera zoom.\n         * @category Properties\n         */\n        this.minZoom = 0.01;\n        /**\n         * Maximum camera zoom.\n         * @category Properties\n         */\n        this.maxZoom = Infinity;\n        /**\n         * Approximate time in seconds to reach the target. A smaller value will reach the target faster.\n         * @category Properties\n         */\n        this.smoothTime = 0.25;\n        /**\n         * the smoothTime while dragging\n         * @category Properties\n         */\n        this.draggingSmoothTime = 0.125;\n        /**\n         * Max transition speed in unit-per-seconds\n         * @category Properties\n         */\n        this.maxSpeed = Infinity;\n        /**\n         * Speed of azimuth (horizontal) rotation.\n         * @category Properties\n         */\n        this.azimuthRotateSpeed = 1.0;\n        /**\n         * Speed of polar (vertical) rotation.\n         * @category Properties\n         */\n        this.polarRotateSpeed = 1.0;\n        /**\n         * Speed of mouse-wheel dollying.\n         * @category Properties\n         */\n        this.dollySpeed = 1.0;\n        /**\n         * `true` to invert direction when dollying or zooming via drag\n         * @category Properties\n         */\n        this.dollyDragInverted = false;\n        /**\n         * Speed of drag for truck and pedestal.\n         * @category Properties\n         */\n        this.truckSpeed = 2.0;\n        /**\n         * `true` to enable Dolly-in to the mouse cursor coords.\n         * @category Properties\n         */\n        this.dollyToCursor = false;\n        /**\n         * @category Properties\n         */\n        this.dragToOffset = false;\n        /**\n         * Friction ratio of the boundary.\n         * @category Properties\n         */\n        this.boundaryFriction = 0.0;\n        /**\n         * Controls how soon the `rest` event fires as the camera slows.\n         * @category Properties\n         */\n        this.restThreshold = 0.01;\n        /**\n         * An array of Meshes to collide with camera.\n         * Be aware colliderMeshes may decrease performance. The collision test uses 4 raycasters from the camera since the near plane has 4 corners.\n         * @category Properties\n         */\n        this.colliderMeshes = [];\n        /**\n         * Force cancel user dragging.\n         * @category Methods\n         */\n        // cancel will be overwritten in the constructor.\n        this.cancel = () => { };\n        this._enabled = true;\n        this._state = ACTION.NONE;\n        this._viewport = null;\n        this._changedDolly = 0;\n        this._changedZoom = 0;\n        this._hasRested = true;\n        this._boundaryEnclosesCamera = false;\n        this._needsUpdate = true;\n        this._updatedLastTime = false;\n        this._elementRect = new DOMRect();\n        this._isDragging = false;\n        this._dragNeedsUpdate = true;\n        this._activePointers = [];\n        this._lockedPointer = null;\n        this._interactiveArea = new DOMRect(0, 0, 1, 1);\n        // Use draggingSmoothTime over smoothTime while true.\n        // set automatically true on user-dragging start.\n        // set automatically false on programmable methods call.\n        this._isUserControllingRotate = false;\n        this._isUserControllingDolly = false;\n        this._isUserControllingTruck = false;\n        this._isUserControllingOffset = false;\n        this._isUserControllingZoom = false;\n        this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n        // velocities for smoothDamp\n        this._thetaVelocity = { value: 0 };\n        this._phiVelocity = { value: 0 };\n        this._radiusVelocity = { value: 0 };\n        this._targetVelocity = new THREE.Vector3();\n        this._focalOffsetVelocity = new THREE.Vector3();\n        this._zoomVelocity = { value: 0 };\n        this._truckInternal = (deltaX, deltaY, dragToOffset, screenSpacePanning) => {\n            let truckX;\n            let pedestalY;\n            if (isPerspectiveCamera(this._camera)) {\n                const offset = _v3A.copy(this._camera.position).sub(this._target);\n                // half of the fov is center to top of screen\n                const fov = this._camera.getEffectiveFOV() * DEG2RAD;\n                const targetDistance = offset.length() * Math.tan(fov * 0.5);\n                truckX = (this.truckSpeed * deltaX * targetDistance / this._elementRect.height);\n                pedestalY = (this.truckSpeed * deltaY * targetDistance / this._elementRect.height);\n            }\n            else if (isOrthographicCamera(this._camera)) {\n                const camera = this._camera;\n                truckX = this.truckSpeed * deltaX * (camera.right - camera.left) / camera.zoom / this._elementRect.width;\n                pedestalY = this.truckSpeed * deltaY * (camera.top - camera.bottom) / camera.zoom / this._elementRect.height;\n            }\n            else {\n                return;\n            }\n            if (screenSpacePanning) {\n                dragToOffset ?\n                    this.setFocalOffset(this._focalOffsetEnd.x + truckX, this._focalOffsetEnd.y, this._focalOffsetEnd.z, true) :\n                    this.truck(truckX, 0, true);\n                this.forward(-pedestalY, true);\n            }\n            else {\n                dragToOffset ?\n                    this.setFocalOffset(this._focalOffsetEnd.x + truckX, this._focalOffsetEnd.y + pedestalY, this._focalOffsetEnd.z, true) :\n                    this.truck(truckX, pedestalY, true);\n            }\n        };\n        this._rotateInternal = (deltaX, deltaY) => {\n            const theta = PI_2 * this.azimuthRotateSpeed * deltaX / this._elementRect.height; // divide by *height* to refer the resolution\n            const phi = PI_2 * this.polarRotateSpeed * deltaY / this._elementRect.height;\n            this.rotate(theta, phi, true);\n        };\n        this._dollyInternal = (delta, x, y) => {\n            const dollyScale = Math.pow(0.95, -delta * this.dollySpeed);\n            const lastDistance = this._sphericalEnd.radius;\n            const distance = this._sphericalEnd.radius * dollyScale;\n            const clampedDistance = clamp(distance, this.minDistance, this.maxDistance);\n            const overflowedDistance = clampedDistance - distance;\n            if (this.infinityDolly && this.dollyToCursor) {\n                this._dollyToNoClamp(distance, true);\n            }\n            else if (this.infinityDolly && !this.dollyToCursor) {\n                this.dollyInFixed(overflowedDistance, true);\n                this._dollyToNoClamp(clampedDistance, true);\n            }\n            else {\n                this._dollyToNoClamp(clampedDistance, true);\n            }\n            if (this.dollyToCursor) {\n                this._changedDolly += (this.infinityDolly ? distance : clampedDistance) - lastDistance;\n                this._dollyControlCoord.set(x, y);\n            }\n            this._lastDollyDirection = Math.sign(-delta);\n        };\n        this._zoomInternal = (delta, x, y) => {\n            const zoomScale = Math.pow(0.95, delta * this.dollySpeed);\n            const lastZoom = this._zoom;\n            const zoom = this._zoom * zoomScale;\n            // for both PerspectiveCamera and OrthographicCamera\n            this.zoomTo(zoom, true);\n            if (this.dollyToCursor) {\n                this._changedZoom += zoom - lastZoom;\n                this._dollyControlCoord.set(x, y);\n            }\n        };\n        // Check if the user has installed THREE\n        if (typeof THREE === 'undefined') {\n            console.error('camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information.');\n        }\n        this._camera = camera;\n        this._yAxisUpSpace = new THREE.Quaternion().setFromUnitVectors(this._camera.up, _AXIS_Y);\n        this._yAxisUpSpaceInverse = this._yAxisUpSpace.clone().invert();\n        this._state = ACTION.NONE;\n        // the location\n        this._target = new THREE.Vector3();\n        this._targetEnd = this._target.clone();\n        this._focalOffset = new THREE.Vector3();\n        this._focalOffsetEnd = this._focalOffset.clone();\n        // rotation\n        this._spherical = new THREE.Spherical().setFromVector3(_v3A.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace));\n        this._sphericalEnd = this._spherical.clone();\n        this._lastDistance = this._spherical.radius;\n        this._zoom = this._camera.zoom;\n        this._zoomEnd = this._zoom;\n        this._lastZoom = this._zoom;\n        // collisionTest uses nearPlane.s\n        this._nearPlaneCorners = [\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n            new THREE.Vector3(),\n        ];\n        this._updateNearPlaneCorners();\n        // Target cannot move outside of this box\n        this._boundary = new THREE.Box3(new THREE.Vector3(-Infinity, -Infinity, -Infinity), new THREE.Vector3(Infinity, Infinity, Infinity));\n        // reset\n        this._cameraUp0 = this._camera.up.clone();\n        this._target0 = this._target.clone();\n        this._position0 = this._camera.position.clone();\n        this._zoom0 = this._zoom;\n        this._focalOffset0 = this._focalOffset.clone();\n        this._dollyControlCoord = new THREE.Vector2();\n        // configs\n        this.mouseButtons = {\n            left: ACTION.ROTATE,\n            middle: ACTION.DOLLY,\n            right: ACTION.TRUCK,\n            wheel: isPerspectiveCamera(this._camera) ? ACTION.DOLLY :\n                isOrthographicCamera(this._camera) ? ACTION.ZOOM :\n                    ACTION.NONE,\n        };\n        this.touches = {\n            one: ACTION.TOUCH_ROTATE,\n            two: isPerspectiveCamera(this._camera) ? ACTION.TOUCH_DOLLY_TRUCK :\n                isOrthographicCamera(this._camera) ? ACTION.TOUCH_ZOOM_TRUCK :\n                    ACTION.NONE,\n            three: ACTION.TOUCH_TRUCK,\n        };\n        const dragStartPosition = new THREE.Vector2();\n        const lastDragPosition = new THREE.Vector2();\n        const dollyStart = new THREE.Vector2();\n        const onPointerDown = (event) => {\n            if (!this._enabled || !this._domElement)\n                return;\n            if (this._interactiveArea.left !== 0 ||\n                this._interactiveArea.top !== 0 ||\n                this._interactiveArea.width !== 1 ||\n                this._interactiveArea.height !== 1) {\n                const elRect = this._domElement.getBoundingClientRect();\n                const left = event.clientX / elRect.width;\n                const top = event.clientY / elRect.height;\n                // check if the interactiveArea contains the drag start position.\n                if (left < this._interactiveArea.left ||\n                    left > this._interactiveArea.right ||\n                    top < this._interactiveArea.top ||\n                    top > this._interactiveArea.bottom)\n                    return;\n            }\n            // Don't call `event.preventDefault()` on the pointerdown event\n            // to keep receiving pointermove evens outside dragging iframe\n            // https://taye.me/blog/tips/2015/11/16/mouse-drag-outside-iframe/\n            const mouseButton = event.pointerType !== 'mouse' ? null :\n                (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT ? MOUSE_BUTTON.LEFT :\n                    (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE ? MOUSE_BUTTON.MIDDLE :\n                        (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT ? MOUSE_BUTTON.RIGHT :\n                            null;\n            if (mouseButton !== null) {\n                const zombiePointer = this._findPointerByMouseButton(mouseButton);\n                zombiePointer && this._disposePointer(zombiePointer);\n            }\n            if ((event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT && this._lockedPointer)\n                return;\n            const pointer = {\n                pointerId: event.pointerId,\n                clientX: event.clientX,\n                clientY: event.clientY,\n                deltaX: 0,\n                deltaY: 0,\n                mouseButton,\n            };\n            this._activePointers.push(pointer);\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n            this._domElement.ownerDocument.addEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n            this._isDragging = true;\n            startDragging(event);\n        };\n        const onPointerMove = (event) => {\n            if (event.cancelable)\n                event.preventDefault();\n            const pointerId = event.pointerId;\n            const pointer = this._lockedPointer || this._findPointerById(pointerId);\n            if (!pointer)\n                return;\n            pointer.clientX = event.clientX;\n            pointer.clientY = event.clientY;\n            pointer.deltaX = event.movementX;\n            pointer.deltaY = event.movementY;\n            this._state = 0;\n            if (event.pointerType === 'touch') {\n                switch (this._activePointers.length) {\n                    case 1:\n                        this._state = this.touches.one;\n                        break;\n                    case 2:\n                        this._state = this.touches.two;\n                        break;\n                    case 3:\n                        this._state = this.touches.three;\n                        break;\n                }\n            }\n            else {\n                if ((!this._isDragging && this._lockedPointer) ||\n                    this._isDragging && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n                    this._state = this._state | this.mouseButtons.left;\n                }\n                if (this._isDragging && (event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n                    this._state = this._state | this.mouseButtons.middle;\n                }\n                if (this._isDragging && (event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n                    this._state = this._state | this.mouseButtons.right;\n                }\n            }\n            dragging();\n        };\n        const onPointerUp = (event) => {\n            const pointer = this._findPointerById(event.pointerId);\n            if (pointer && pointer === this._lockedPointer)\n                return;\n            pointer && this._disposePointer(pointer);\n            if (event.pointerType === 'touch') {\n                switch (this._activePointers.length) {\n                    case 0:\n                        this._state = ACTION.NONE;\n                        break;\n                    case 1:\n                        this._state = this.touches.one;\n                        break;\n                    case 2:\n                        this._state = this.touches.two;\n                        break;\n                    case 3:\n                        this._state = this.touches.three;\n                        break;\n                }\n            }\n            else {\n                this._state = ACTION.NONE;\n            }\n            endDragging();\n        };\n        let lastScrollTimeStamp = -1;\n        const onMouseWheel = (event) => {\n            if (!this._domElement)\n                return;\n            if (!this._enabled || this.mouseButtons.wheel === ACTION.NONE)\n                return;\n            if (this._interactiveArea.left !== 0 ||\n                this._interactiveArea.top !== 0 ||\n                this._interactiveArea.width !== 1 ||\n                this._interactiveArea.height !== 1) {\n                const elRect = this._domElement.getBoundingClientRect();\n                const left = event.clientX / elRect.width;\n                const top = event.clientY / elRect.height;\n                // check if the interactiveArea contains the drag start position.\n                if (left < this._interactiveArea.left ||\n                    left > this._interactiveArea.right ||\n                    top < this._interactiveArea.top ||\n                    top > this._interactiveArea.bottom)\n                    return;\n            }\n            event.preventDefault();\n            if (this.dollyToCursor ||\n                this.mouseButtons.wheel === ACTION.ROTATE ||\n                this.mouseButtons.wheel === ACTION.TRUCK) {\n                const now = performance.now();\n                // only need to fire this at scroll start.\n                if (lastScrollTimeStamp - now < 1000)\n                    this._getClientRect(this._elementRect);\n                lastScrollTimeStamp = now;\n            }\n            // Ref: https://github.com/cedricpinson/osgjs/blob/00e5a7e9d9206c06fdde0436e1d62ab7cb5ce853/sources/osgViewer/input/source/InputSourceMouse.js#L89-L103\n            const deltaYFactor = isMac ? -1 : -3;\n            // Checks event.ctrlKey to detect multi-touch gestures on a trackpad.\n            const delta = (event.deltaMode === 1 || event.ctrlKey) ? event.deltaY / deltaYFactor : event.deltaY / (deltaYFactor * 10);\n            const x = this.dollyToCursor ? (event.clientX - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n            const y = this.dollyToCursor ? (event.clientY - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n            switch (this.mouseButtons.wheel) {\n                case ACTION.ROTATE: {\n                    this._rotateInternal(event.deltaX, event.deltaY);\n                    this._isUserControllingRotate = true;\n                    break;\n                }\n                case ACTION.TRUCK: {\n                    this._truckInternal(event.deltaX, event.deltaY, false, false);\n                    this._isUserControllingTruck = true;\n                    break;\n                }\n                case ACTION.SCREEN_PAN: {\n                    this._truckInternal(event.deltaX, event.deltaY, false, true);\n                    this._isUserControllingTruck = true;\n                    break;\n                }\n                case ACTION.OFFSET: {\n                    this._truckInternal(event.deltaX, event.deltaY, true, false);\n                    this._isUserControllingOffset = true;\n                    break;\n                }\n                case ACTION.DOLLY: {\n                    this._dollyInternal(-delta, x, y);\n                    this._isUserControllingDolly = true;\n                    break;\n                }\n                case ACTION.ZOOM: {\n                    this._zoomInternal(-delta, x, y);\n                    this._isUserControllingZoom = true;\n                    break;\n                }\n            }\n            this.dispatchEvent({ type: 'control' });\n        };\n        const onContextMenu = (event) => {\n            if (!this._domElement || !this._enabled)\n                return;\n            // contextmenu event is fired right after pointerdown\n            // remove attached handlers and active pointer, if interrupted by contextmenu.\n            if (this.mouseButtons.right === CameraControls.ACTION.NONE) {\n                const pointerId = event instanceof PointerEvent ? event.pointerId : 0;\n                const pointer = this._findPointerById(pointerId);\n                pointer && this._disposePointer(pointer);\n                // eslint-disable-next-line no-undef\n                this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n                this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n                return;\n            }\n            event.preventDefault();\n        };\n        const startDragging = (event) => {\n            if (!this._enabled)\n                return;\n            extractClientCoordFromEvent(this._activePointers, _v2);\n            this._getClientRect(this._elementRect);\n            dragStartPosition.copy(_v2);\n            lastDragPosition.copy(_v2);\n            const isMultiTouch = this._activePointers.length >= 2;\n            if (isMultiTouch) {\n                // 2 finger pinch\n                const dx = _v2.x - this._activePointers[1].clientX;\n                const dy = _v2.y - this._activePointers[1].clientY;\n                const distance = Math.sqrt(dx * dx + dy * dy);\n                dollyStart.set(0, distance);\n                // center coords of 2 finger truck\n                const x = (this._activePointers[0].clientX + this._activePointers[1].clientX) * 0.5;\n                const y = (this._activePointers[0].clientY + this._activePointers[1].clientY) * 0.5;\n                lastDragPosition.set(x, y);\n            }\n            this._state = 0;\n            if (!event) {\n                if (this._lockedPointer)\n                    this._state = this._state | this.mouseButtons.left;\n            }\n            else if ('pointerType' in event && event.pointerType === 'touch') {\n                switch (this._activePointers.length) {\n                    case 1:\n                        this._state = this.touches.one;\n                        break;\n                    case 2:\n                        this._state = this.touches.two;\n                        break;\n                    case 3:\n                        this._state = this.touches.three;\n                        break;\n                }\n            }\n            else {\n                if (!this._lockedPointer && (event.buttons & MOUSE_BUTTON.LEFT) === MOUSE_BUTTON.LEFT) {\n                    this._state = this._state | this.mouseButtons.left;\n                }\n                if ((event.buttons & MOUSE_BUTTON.MIDDLE) === MOUSE_BUTTON.MIDDLE) {\n                    this._state = this._state | this.mouseButtons.middle;\n                }\n                if ((event.buttons & MOUSE_BUTTON.RIGHT) === MOUSE_BUTTON.RIGHT) {\n                    this._state = this._state | this.mouseButtons.right;\n                }\n            }\n            // stop current movement on drag start\n            // - rotate\n            if ((this._state & ACTION.ROTATE) === ACTION.ROTATE ||\n                (this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                this._sphericalEnd.theta = this._spherical.theta;\n                this._sphericalEnd.phi = this._spherical.phi;\n                this._thetaVelocity.value = 0;\n                this._phiVelocity.value = 0;\n            }\n            // - truck and screen-pan\n            if ((this._state & ACTION.TRUCK) === ACTION.TRUCK ||\n                (this._state & ACTION.SCREEN_PAN) === ACTION.SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK ||\n                (this._state & ACTION.TOUCH_SCREEN_PAN) === ACTION.TOUCH_SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN) {\n                this._targetEnd.copy(this._target);\n                this._targetVelocity.set(0, 0, 0);\n            }\n            // - dolly\n            if ((this._state & ACTION.DOLLY) === ACTION.DOLLY ||\n                (this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE) {\n                this._sphericalEnd.radius = this._spherical.radius;\n                this._radiusVelocity.value = 0;\n            }\n            // - zoom\n            if ((this._state & ACTION.ZOOM) === ACTION.ZOOM ||\n                (this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_SCREEN_PAN) === ACTION.TOUCH_ZOOM_SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                this._zoomEnd = this._zoom;\n                this._zoomVelocity.value = 0;\n            }\n            // - offset\n            if ((this._state & ACTION.OFFSET) === ACTION.OFFSET ||\n                (this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET) {\n                this._focalOffsetEnd.copy(this._focalOffset);\n                this._focalOffsetVelocity.set(0, 0, 0);\n            }\n            this.dispatchEvent({ type: 'controlstart' });\n        };\n        const dragging = () => {\n            if (!this._enabled || !this._dragNeedsUpdate)\n                return;\n            this._dragNeedsUpdate = false;\n            extractClientCoordFromEvent(this._activePointers, _v2);\n            // When pointer lock is enabled clientX, clientY, screenX, and screenY remain 0.\n            // If pointer lock is enabled, use the Delta directory, and assume active-pointer is not multiple.\n            const isPointerLockActive = this._domElement && this._domElement.ownerDocument.pointerLockElement === this._domElement;\n            const lockedPointer = isPointerLockActive ? this._lockedPointer || this._activePointers[0] : null;\n            const deltaX = lockedPointer ? -lockedPointer.deltaX : lastDragPosition.x - _v2.x;\n            const deltaY = lockedPointer ? -lockedPointer.deltaY : lastDragPosition.y - _v2.y;\n            lastDragPosition.copy(_v2);\n            // rotate\n            if ((this._state & ACTION.ROTATE) === ACTION.ROTATE ||\n                (this._state & ACTION.TOUCH_ROTATE) === ACTION.TOUCH_ROTATE ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                this._rotateInternal(deltaX, deltaY);\n                this._isUserControllingRotate = true;\n            }\n            // mouse dolly or zoom\n            if ((this._state & ACTION.DOLLY) === ACTION.DOLLY ||\n                (this._state & ACTION.ZOOM) === ACTION.ZOOM) {\n                const dollyX = this.dollyToCursor ? (dragStartPosition.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n                const dollyY = this.dollyToCursor ? (dragStartPosition.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n                const dollyDirection = this.dollyDragInverted ? -1 : 1;\n                if ((this._state & ACTION.DOLLY) === ACTION.DOLLY) {\n                    this._dollyInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingDolly = true;\n                }\n                else {\n                    this._zoomInternal(dollyDirection * deltaY * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingZoom = true;\n                }\n            }\n            // touch dolly or zoom\n            if ((this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\n                (this._state & ACTION.TOUCH_ZOOM) === ACTION.TOUCH_ZOOM ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_ZOOM_SCREEN_PAN) === ACTION.TOUCH_ZOOM_SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                (this._state & ACTION.TOUCH_ZOOM_ROTATE) === ACTION.TOUCH_ZOOM_ROTATE) {\n                const dx = _v2.x - this._activePointers[1].clientX;\n                const dy = _v2.y - this._activePointers[1].clientY;\n                const distance = Math.sqrt(dx * dx + dy * dy);\n                const dollyDelta = dollyStart.y - distance;\n                dollyStart.set(0, distance);\n                const dollyX = this.dollyToCursor ? (lastDragPosition.x - this._elementRect.x) / this._elementRect.width * 2 - 1 : 0;\n                const dollyY = this.dollyToCursor ? (lastDragPosition.y - this._elementRect.y) / this._elementRect.height * -2 + 1 : 0;\n                if ((this._state & ACTION.TOUCH_DOLLY) === ACTION.TOUCH_DOLLY ||\n                    (this._state & ACTION.TOUCH_DOLLY_ROTATE) === ACTION.TOUCH_DOLLY_ROTATE ||\n                    (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                    (this._state & ACTION.TOUCH_DOLLY_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN ||\n                    (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET) {\n                    this._dollyInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingDolly = true;\n                }\n                else {\n                    this._zoomInternal(dollyDelta * TOUCH_DOLLY_FACTOR, dollyX, dollyY);\n                    this._isUserControllingZoom = true;\n                }\n            }\n            // truck\n            if ((this._state & ACTION.TRUCK) === ACTION.TRUCK ||\n                (this._state & ACTION.TOUCH_TRUCK) === ACTION.TOUCH_TRUCK ||\n                (this._state & ACTION.TOUCH_DOLLY_TRUCK) === ACTION.TOUCH_DOLLY_TRUCK ||\n                (this._state & ACTION.TOUCH_ZOOM_TRUCK) === ACTION.TOUCH_ZOOM_TRUCK) {\n                this._truckInternal(deltaX, deltaY, false, false);\n                this._isUserControllingTruck = true;\n            }\n            // screen-pan\n            if ((this._state & ACTION.SCREEN_PAN) === ACTION.SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_SCREEN_PAN) === ACTION.TOUCH_SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_DOLLY_SCREEN_PAN) === ACTION.TOUCH_DOLLY_SCREEN_PAN ||\n                (this._state & ACTION.TOUCH_ZOOM_SCREEN_PAN) === ACTION.TOUCH_ZOOM_SCREEN_PAN) {\n                this._truckInternal(deltaX, deltaY, false, true);\n                this._isUserControllingTruck = true;\n            }\n            // offset\n            if ((this._state & ACTION.OFFSET) === ACTION.OFFSET ||\n                (this._state & ACTION.TOUCH_OFFSET) === ACTION.TOUCH_OFFSET ||\n                (this._state & ACTION.TOUCH_DOLLY_OFFSET) === ACTION.TOUCH_DOLLY_OFFSET ||\n                (this._state & ACTION.TOUCH_ZOOM_OFFSET) === ACTION.TOUCH_ZOOM_OFFSET) {\n                this._truckInternal(deltaX, deltaY, true, false);\n                this._isUserControllingOffset = true;\n            }\n            this.dispatchEvent({ type: 'control' });\n        };\n        const endDragging = () => {\n            extractClientCoordFromEvent(this._activePointers, _v2);\n            lastDragPosition.copy(_v2);\n            this._dragNeedsUpdate = false;\n            if (this._activePointers.length === 0 ||\n                (this._activePointers.length === 1 && this._activePointers[0] === this._lockedPointer)) {\n                this._isDragging = false;\n            }\n            if (this._activePointers.length === 0 && this._domElement) {\n                // eslint-disable-next-line no-undef\n                this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n                this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n                this.dispatchEvent({ type: 'controlend' });\n            }\n        };\n        this.lockPointer = () => {\n            if (!this._enabled || !this._domElement)\n                return;\n            this.cancel();\n            // Element.requestPointerLock is allowed to happen without any pointer active - create a faux one for compatibility with controls\n            this._lockedPointer = {\n                pointerId: -1,\n                clientX: 0,\n                clientY: 0,\n                deltaX: 0,\n                deltaY: 0,\n                mouseButton: null,\n            };\n            this._activePointers.push(this._lockedPointer);\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n            this._domElement.requestPointerLock();\n            this._domElement.ownerDocument.addEventListener('pointerlockchange', onPointerLockChange);\n            this._domElement.ownerDocument.addEventListener('pointerlockerror', onPointerLockError);\n            this._domElement.ownerDocument.addEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.addEventListener('pointerup', onPointerUp);\n            startDragging();\n        };\n        this.unlockPointer = () => {\n            var _a, _b, _c;\n            if (this._lockedPointer !== null) {\n                this._disposePointer(this._lockedPointer);\n                this._lockedPointer = null;\n            }\n            (_a = this._domElement) === null || _a === void 0 ? void 0 : _a.ownerDocument.exitPointerLock();\n            (_b = this._domElement) === null || _b === void 0 ? void 0 : _b.ownerDocument.removeEventListener('pointerlockchange', onPointerLockChange);\n            (_c = this._domElement) === null || _c === void 0 ? void 0 : _c.ownerDocument.removeEventListener('pointerlockerror', onPointerLockError);\n            this.cancel();\n        };\n        const onPointerLockChange = () => {\n            const isPointerLockActive = this._domElement && this._domElement.ownerDocument.pointerLockElement === this._domElement;\n            if (!isPointerLockActive)\n                this.unlockPointer();\n        };\n        const onPointerLockError = () => {\n            this.unlockPointer();\n        };\n        this._addAllEventListeners = (domElement) => {\n            this._domElement = domElement;\n            this._domElement.style.touchAction = 'none';\n            this._domElement.style.userSelect = 'none';\n            this._domElement.style.webkitUserSelect = 'none';\n            this._domElement.addEventListener('pointerdown', onPointerDown);\n            this._domElement.addEventListener('pointercancel', onPointerUp);\n            this._domElement.addEventListener('wheel', onMouseWheel, { passive: false });\n            this._domElement.addEventListener('contextmenu', onContextMenu);\n        };\n        this._removeAllEventListeners = () => {\n            if (!this._domElement)\n                return;\n            this._domElement.style.touchAction = '';\n            this._domElement.style.userSelect = '';\n            this._domElement.style.webkitUserSelect = '';\n            this._domElement.removeEventListener('pointerdown', onPointerDown);\n            this._domElement.removeEventListener('pointercancel', onPointerUp);\n            // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener#matching_event_listeners_for_removal\n            // > it's probably wise to use the same values used for the call to `addEventListener()` when calling `removeEventListener()`\n            // see https://github.com/microsoft/TypeScript/issues/32912#issuecomment-522142969\n            // eslint-disable-next-line no-undef\n            this._domElement.removeEventListener('wheel', onMouseWheel, { passive: false });\n            this._domElement.removeEventListener('contextmenu', onContextMenu);\n            // eslint-disable-next-line no-undef\n            this._domElement.ownerDocument.removeEventListener('pointermove', onPointerMove, { passive: false });\n            this._domElement.ownerDocument.removeEventListener('pointerup', onPointerUp);\n            this._domElement.ownerDocument.removeEventListener('pointerlockchange', onPointerLockChange);\n            this._domElement.ownerDocument.removeEventListener('pointerlockerror', onPointerLockError);\n        };\n        this.cancel = () => {\n            if (this._state === ACTION.NONE)\n                return;\n            this._state = ACTION.NONE;\n            this._activePointers.length = 0;\n            endDragging();\n        };\n        if (domElement)\n            this.connect(domElement);\n        this.update(0);\n    }\n    /**\n     * The camera to be controlled\n     * @category Properties\n     */\n    get camera() {\n        return this._camera;\n    }\n    set camera(camera) {\n        this._camera = camera;\n        this.updateCameraUp();\n        this._camera.updateProjectionMatrix();\n        this._updateNearPlaneCorners();\n        this._needsUpdate = true;\n    }\n    /**\n     * Whether or not the controls are enabled.\n     * `false` to disable user dragging/touch-move, but all methods works.\n     * @category Properties\n     */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(enabled) {\n        this._enabled = enabled;\n        if (!this._domElement)\n            return;\n        if (enabled) {\n            this._domElement.style.touchAction = 'none';\n            this._domElement.style.userSelect = 'none';\n            this._domElement.style.webkitUserSelect = 'none';\n        }\n        else {\n            this.cancel();\n            this._domElement.style.touchAction = '';\n            this._domElement.style.userSelect = '';\n            this._domElement.style.webkitUserSelect = '';\n        }\n    }\n    /**\n     * Returns `true` if the controls are active updating.\n     * readonly value.\n     * @category Properties\n     */\n    get active() {\n        return !this._hasRested;\n    }\n    /**\n     * Getter for the current `ACTION`.\n     * readonly value.\n     * @category Properties\n     */\n    get currentAction() {\n        return this._state;\n    }\n    /**\n     * get/set Current distance.\n     * @category Properties\n     */\n    get distance() {\n        return this._spherical.radius;\n    }\n    set distance(distance) {\n        if (this._spherical.radius === distance &&\n            this._sphericalEnd.radius === distance)\n            return;\n        this._spherical.radius = distance;\n        this._sphericalEnd.radius = distance;\n        this._needsUpdate = true;\n    }\n    // horizontal angle\n    /**\n     * get/set the azimuth angle (horizontal) in radians.\n     * Every 360 degrees turn is added to `.azimuthAngle` value, which is accumulative.\n     * @category Properties\n     */\n    get azimuthAngle() {\n        return this._spherical.theta;\n    }\n    set azimuthAngle(azimuthAngle) {\n        if (this._spherical.theta === azimuthAngle &&\n            this._sphericalEnd.theta === azimuthAngle)\n            return;\n        this._spherical.theta = azimuthAngle;\n        this._sphericalEnd.theta = azimuthAngle;\n        this._needsUpdate = true;\n    }\n    // vertical angle\n    /**\n     * get/set the polar angle (vertical) in radians.\n     * @category Properties\n     */\n    get polarAngle() {\n        return this._spherical.phi;\n    }\n    set polarAngle(polarAngle) {\n        if (this._spherical.phi === polarAngle &&\n            this._sphericalEnd.phi === polarAngle)\n            return;\n        this._spherical.phi = polarAngle;\n        this._sphericalEnd.phi = polarAngle;\n        this._needsUpdate = true;\n    }\n    /**\n     * Whether camera position should be enclosed in the boundary or not.\n     * @category Properties\n     */\n    get boundaryEnclosesCamera() {\n        return this._boundaryEnclosesCamera;\n    }\n    set boundaryEnclosesCamera(boundaryEnclosesCamera) {\n        this._boundaryEnclosesCamera = boundaryEnclosesCamera;\n        this._needsUpdate = true;\n    }\n    /**\n     * Set drag-start, touches and wheel enable area in the domElement.\n     * each values are between `0` and `1` inclusive, where `0` is left/top and `1` is right/bottom of the screen.\n     * e.g. `{ x: 0, y: 0, width: 1, height: 1 }` for entire area.\n     * @category Properties\n     */\n    set interactiveArea(interactiveArea) {\n        this._interactiveArea.width = clamp(interactiveArea.width, 0, 1);\n        this._interactiveArea.height = clamp(interactiveArea.height, 0, 1);\n        this._interactiveArea.x = clamp(interactiveArea.x, 0, 1 - this._interactiveArea.width);\n        this._interactiveArea.y = clamp(interactiveArea.y, 0, 1 - this._interactiveArea.height);\n    }\n    /**\n     * Adds the specified event listener.\n     * Applicable event types (which is `K`) are:\n     * | Event name          | Timing |\n     * | ------------------- | ------ |\n     * | `'controlstart'`    | When the user starts to control the camera via mouse / touches. ¹ |\n     * | `'control'`         | When the user controls the camera (dragging). |\n     * | `'controlend'`      | When the user ends to control the camera. ¹ |\n     * | `'transitionstart'` | When any kind of transition starts, either user control or using a method with `enableTransition = true` |\n     * | `'update'`          | When the camera position is updated. |\n     * | `'wake'`            | When the camera starts moving. |\n     * | `'rest'`            | When the camera movement is below `.restThreshold` ². |\n     * | `'sleep'`           | When the camera end moving. |\n     *\n     * 1. `mouseButtons.wheel` (Mouse wheel control) does not emit `'controlstart'` and `'controlend'`. `mouseButtons.wheel` uses scroll-event internally, and scroll-event happens intermittently. That means \"start\" and \"end\" cannot be detected.\n     * 2. Due to damping, `sleep` will usually fire a few seconds after the camera _appears_ to have stopped moving. If you want to do something (e.g. enable UI, perform another transition) at the point when the camera has stopped, you probably want the `rest` event. This can be fine tuned using the `.restThreshold` parameter. See the [Rest and Sleep Example](https://yomotsu.github.io/camera-controls/examples/rest-and-sleep.html).\n     *\n     * e.g.\n     * ```\n     * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\n     * ```\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    addEventListener(type, listener) {\n        super.addEventListener(type, listener);\n    }\n    /**\n     * Removes the specified event listener\n     * e.g.\n     * ```\n     * cameraControl.addEventListener( 'controlstart', myCallbackFunction );\n     * ```\n     * @param type event name\n     * @param listener handler function\n     * @category Methods\n     */\n    removeEventListener(type, listener) {\n        super.removeEventListener(type, listener);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) and polar angle(vertical).\n     * Every value is added to the current value.\n     * @param azimuthAngle Azimuth rotate angle. In radian.\n     * @param polarAngle Polar rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotate(azimuthAngle, polarAngle, enableTransition = false) {\n        return this.rotateTo(this._sphericalEnd.theta + azimuthAngle, this._sphericalEnd.phi + polarAngle, enableTransition);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) to the given angle and keep the same polar angle(vertical) target.\n     *\n     * e.g.\n     * ```\n     * cameraControls.rotateAzimuthTo( 30 * THREE.MathUtils.DEG2RAD, true );\n     * ```\n     * @param azimuthAngle Azimuth rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotateAzimuthTo(azimuthAngle, enableTransition = false) {\n        return this.rotateTo(azimuthAngle, this._sphericalEnd.phi, enableTransition);\n    }\n    /**\n     * Rotate polar angle(vertical) to the given angle and keep the same azimuthal angle(horizontal) target.\n     *\n     * e.g.\n     * ```\n     * cameraControls.rotatePolarTo( 30 * THREE.MathUtils.DEG2RAD, true );\n     * ```\n     * @param polarAngle Polar rotate angle. In radian.\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotatePolarTo(polarAngle, enableTransition = false) {\n        return this.rotateTo(this._sphericalEnd.theta, polarAngle, enableTransition);\n    }\n    /**\n     * Rotate azimuthal angle(horizontal) and polar angle(vertical) to the given angle.\n     * Camera view will rotate over the orbit pivot absolutely:\n     *\n     * azimuthAngle\n     * ```\n     *       0º\n     *         \\\n     * 90º -----+----- -90º\n     *           \\\n     *           180º\n     * ```\n     * | direction | angle                  |\n     * | --------- | ---------------------- |\n     * | front     | 0º                     |\n     * | left      | 90º (`Math.PI / 2`)    |\n     * | right     | -90º (`- Math.PI / 2`) |\n     * | back      | 180º (`Math.PI`)       |\n     *\n     * polarAngle\n     * ```\n     *     180º\n     *      |\n     *      90º\n     *      |\n     *      0º\n     * ```\n     * | direction            | angle                  |\n     * | -------------------- | ---------------------- |\n     * | top/sky              | 180º (`Math.PI`)       |\n     * | horizontal from view | 90º (`Math.PI / 2`)    |\n     * | bottom/floor         | 0º                     |\n     *\n     * @param azimuthAngle Azimuth rotate angle to. In radian.\n     * @param polarAngle Polar rotate angle to. In radian.\n     * @param enableTransition  Whether to move smoothly or immediately\n     * @category Methods\n     */\n    rotateTo(azimuthAngle, polarAngle, enableTransition = false) {\n        this._isUserControllingRotate = false;\n        const theta = clamp(azimuthAngle, this.minAzimuthAngle, this.maxAzimuthAngle);\n        const phi = clamp(polarAngle, this.minPolarAngle, this.maxPolarAngle);\n        this._sphericalEnd.theta = theta;\n        this._sphericalEnd.phi = phi;\n        this._sphericalEnd.makeSafe();\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._spherical.theta = this._sphericalEnd.theta;\n            this._spherical.phi = this._sphericalEnd.phi;\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) &&\n                approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Dolly in/out camera position.\n     * @param distance Distance of dollyIn. Negative number for dollyOut.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @category Methods\n     */\n    dolly(distance, enableTransition = false) {\n        return this.dollyTo(this._sphericalEnd.radius - distance, enableTransition);\n    }\n    /**\n     * Dolly in/out camera position to given distance.\n     * @param distance Distance of dolly.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @category Methods\n     */\n    dollyTo(distance, enableTransition = false) {\n        this._isUserControllingDolly = false;\n        this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n        this._changedDolly = 0;\n        return this._dollyToNoClamp(clamp(distance, this.minDistance, this.maxDistance), enableTransition);\n    }\n    _dollyToNoClamp(distance, enableTransition = false) {\n        const lastRadius = this._sphericalEnd.radius;\n        const hasCollider = this.colliderMeshes.length >= 1;\n        if (hasCollider) {\n            const maxDistanceByCollisionTest = this._collisionTest();\n            const isCollided = approxEquals(maxDistanceByCollisionTest, this._spherical.radius);\n            const isDollyIn = lastRadius > distance;\n            if (!isDollyIn && isCollided)\n                return Promise.resolve();\n            this._sphericalEnd.radius = Math.min(distance, maxDistanceByCollisionTest);\n        }\n        else {\n            this._sphericalEnd.radius = distance;\n        }\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._spherical.radius = this._sphericalEnd.radius;\n        }\n        const resolveImmediately = !enableTransition || approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Dolly in, but does not change the distance between the target and the camera, and moves the target position instead.\n     * Specify a negative value for dolly out.\n     * @param distance Distance of dolly.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @category Methods\n     */\n    dollyInFixed(distance, enableTransition = false) {\n        this._targetEnd.add(this._getCameraDirection(_cameraDirection).multiplyScalar(distance));\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Zoom in/out camera. The value is added to camera zoom.\n     * Limits set with `.minZoom` and `.maxZoom`\n     * @param zoomStep zoom scale\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    zoom(zoomStep, enableTransition = false) {\n        return this.zoomTo(this._zoomEnd + zoomStep, enableTransition);\n    }\n    /**\n     * Zoom in/out camera to given scale. The value overwrites camera zoom.\n     * Limits set with .minZoom and .maxZoom\n     * @param zoom\n     * @param enableTransition\n     * @category Methods\n     */\n    zoomTo(zoom, enableTransition = false) {\n        this._isUserControllingZoom = false;\n        this._zoomEnd = clamp(zoom, this.minZoom, this.maxZoom);\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._zoom = this._zoomEnd;\n        }\n        const resolveImmediately = !enableTransition || approxEquals(this._zoom, this._zoomEnd, this.restThreshold);\n        this._changedZoom = 0;\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * @deprecated `pan()` has been renamed to `truck()`\n     * @category Methods\n     */\n    pan(x, y, enableTransition = false) {\n        console.warn('`pan` has been renamed to `truck`');\n        return this.truck(x, y, enableTransition);\n    }\n    /**\n     * Truck and pedestal camera using current azimuthal angle\n     * @param x Horizontal translate amount\n     * @param y Vertical translate amount\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    truck(x, y, enableTransition = false) {\n        this._camera.updateMatrix();\n        _xColumn.setFromMatrixColumn(this._camera.matrix, 0);\n        _yColumn.setFromMatrixColumn(this._camera.matrix, 1);\n        _xColumn.multiplyScalar(x);\n        _yColumn.multiplyScalar(-y);\n        const offset = _v3A.copy(_xColumn).add(_yColumn);\n        const to = _v3B.copy(this._targetEnd).add(offset);\n        return this.moveTo(to.x, to.y, to.z, enableTransition);\n    }\n    /**\n     * Move forward / backward.\n     * @param distance Amount to move forward / backward. Negative value to move backward\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    forward(distance, enableTransition = false) {\n        _v3A.setFromMatrixColumn(this._camera.matrix, 0);\n        _v3A.crossVectors(this._camera.up, _v3A);\n        _v3A.multiplyScalar(distance);\n        const to = _v3B.copy(this._targetEnd).add(_v3A);\n        return this.moveTo(to.x, to.y, to.z, enableTransition);\n    }\n    /**\n     * Move up / down.\n     * @param height Amount to move up / down. Negative value to move down\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    elevate(height, enableTransition = false) {\n        _v3A.copy(this._camera.up).multiplyScalar(height);\n        return this.moveTo(this._targetEnd.x + _v3A.x, this._targetEnd.y + _v3A.y, this._targetEnd.z + _v3A.z, enableTransition);\n    }\n    /**\n     * Move target position to given point.\n     * @param x x coord to move center position\n     * @param y y coord to move center position\n     * @param z z coord to move center position\n     * @param enableTransition Whether to move smoothly or immediately\n     * @category Methods\n     */\n    moveTo(x, y, z, enableTransition = false) {\n        this._isUserControllingTruck = false;\n        const offset = _v3A.set(x, y, z).sub(this._targetEnd);\n        this._encloseToBoundary(this._targetEnd, offset, this.boundaryFriction);\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Look in the given point direction.\n     * @param x point x.\n     * @param y point y.\n     * @param z point z.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @returns Transition end promise\n     * @category Methods\n     */\n    lookInDirectionOf(x, y, z, enableTransition = false) {\n        const point = _v3A.set(x, y, z);\n        const direction = point.sub(this._targetEnd).normalize();\n        const position = direction.multiplyScalar(-this._sphericalEnd.radius).add(this._targetEnd);\n        return this.setPosition(position.x, position.y, position.z, enableTransition);\n    }\n    /**\n     * Fit the viewport to the box or the bounding box of the object, using the nearest axis. paddings are in unit.\n     * set `cover: true` to fill enter screen.\n     * e.g.\n     * ```\n     * cameraControls.fitToBox( myMesh );\n     * ```\n     * @param box3OrObject Axis aligned bounding box to fit the view.\n     * @param enableTransition Whether to move smoothly or immediately.\n     * @param options | `<object>` { cover: boolean, paddingTop: number, paddingLeft: number, paddingBottom: number, paddingRight: number }\n     * @returns Transition end promise\n     * @category Methods\n     */\n    fitToBox(box3OrObject, enableTransition, { cover = false, paddingLeft = 0, paddingRight = 0, paddingBottom = 0, paddingTop = 0 } = {}) {\n        const promises = [];\n        const aabb = box3OrObject.isBox3\n            ? _box3A.copy(box3OrObject)\n            : _box3A.setFromObject(box3OrObject);\n        if (aabb.isEmpty()) {\n            console.warn('camera-controls: fitTo() cannot be used with an empty box. Aborting');\n            Promise.resolve();\n        }\n        // round to closest axis ( forward | backward | right | left | top | bottom )\n        const theta = roundToStep(this._sphericalEnd.theta, PI_HALF);\n        const phi = roundToStep(this._sphericalEnd.phi, PI_HALF);\n        promises.push(this.rotateTo(theta, phi, enableTransition));\n        const normal = _v3A.setFromSpherical(this._sphericalEnd).normalize();\n        const rotation = _quaternionA.setFromUnitVectors(normal, _AXIS_Z);\n        const viewFromPolar = approxEquals(Math.abs(normal.y), 1);\n        if (viewFromPolar) {\n            rotation.multiply(_quaternionB.setFromAxisAngle(_AXIS_Y, theta));\n        }\n        rotation.multiply(this._yAxisUpSpaceInverse);\n        // make oriented bounding box\n        const bb = _box3B.makeEmpty();\n        // left bottom back corner\n        _v3B.copy(aabb.min).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right bottom back corner\n        _v3B.copy(aabb.min).setX(aabb.max.x).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // left top back corner\n        _v3B.copy(aabb.min).setY(aabb.max.y).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right top back corner\n        _v3B.copy(aabb.max).setZ(aabb.min.z).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // left bottom front corner\n        _v3B.copy(aabb.min).setZ(aabb.max.z).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right bottom front corner\n        _v3B.copy(aabb.max).setY(aabb.min.y).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // left top front corner\n        _v3B.copy(aabb.max).setX(aabb.min.x).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // right top front corner\n        _v3B.copy(aabb.max).applyQuaternion(rotation);\n        bb.expandByPoint(_v3B);\n        // add padding\n        bb.min.x -= paddingLeft;\n        bb.min.y -= paddingBottom;\n        bb.max.x += paddingRight;\n        bb.max.y += paddingTop;\n        rotation.setFromUnitVectors(_AXIS_Z, normal);\n        if (viewFromPolar) {\n            rotation.premultiply(_quaternionB.invert());\n        }\n        rotation.premultiply(this._yAxisUpSpace);\n        const bbSize = bb.getSize(_v3A);\n        const center = bb.getCenter(_v3B).applyQuaternion(rotation);\n        if (isPerspectiveCamera(this._camera)) {\n            const distance = this.getDistanceToFitBox(bbSize.x, bbSize.y, bbSize.z, cover);\n            promises.push(this.moveTo(center.x, center.y, center.z, enableTransition));\n            promises.push(this.dollyTo(distance, enableTransition));\n            promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n        }\n        else if (isOrthographicCamera(this._camera)) {\n            const camera = this._camera;\n            const width = camera.right - camera.left;\n            const height = camera.top - camera.bottom;\n            const zoom = cover ? Math.max(width / bbSize.x, height / bbSize.y) : Math.min(width / bbSize.x, height / bbSize.y);\n            promises.push(this.moveTo(center.x, center.y, center.z, enableTransition));\n            promises.push(this.zoomTo(zoom, enableTransition));\n            promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n        }\n        return Promise.all(promises);\n    }\n    /**\n     * Fit the viewport to the sphere or the bounding sphere of the object.\n     * @param sphereOrMesh\n     * @param enableTransition\n     * @category Methods\n     */\n    fitToSphere(sphereOrMesh, enableTransition) {\n        const promises = [];\n        const isObject3D = 'isObject3D' in sphereOrMesh;\n        const boundingSphere = isObject3D ?\n            CameraControls.createBoundingSphere(sphereOrMesh, _sphere) :\n            _sphere.copy(sphereOrMesh);\n        promises.push(this.moveTo(boundingSphere.center.x, boundingSphere.center.y, boundingSphere.center.z, enableTransition));\n        if (isPerspectiveCamera(this._camera)) {\n            const distanceToFit = this.getDistanceToFitSphere(boundingSphere.radius);\n            promises.push(this.dollyTo(distanceToFit, enableTransition));\n        }\n        else if (isOrthographicCamera(this._camera)) {\n            const width = this._camera.right - this._camera.left;\n            const height = this._camera.top - this._camera.bottom;\n            const diameter = 2 * boundingSphere.radius;\n            const zoom = Math.min(width / diameter, height / diameter);\n            promises.push(this.zoomTo(zoom, enableTransition));\n        }\n        promises.push(this.setFocalOffset(0, 0, 0, enableTransition));\n        return Promise.all(promises);\n    }\n    /**\n     * Look at the `target` from the `position`.\n     * @param positionX\n     * @param positionY\n     * @param positionZ\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @param enableTransition\n     * @category Methods\n     */\n    setLookAt(positionX, positionY, positionZ, targetX, targetY, targetZ, enableTransition = false) {\n        this._isUserControllingRotate = false;\n        this._isUserControllingDolly = false;\n        this._isUserControllingTruck = false;\n        this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n        this._changedDolly = 0;\n        const target = _v3B.set(targetX, targetY, targetZ);\n        const position = _v3A.set(positionX, positionY, positionZ);\n        this._targetEnd.copy(target);\n        this._sphericalEnd.setFromVector3(position.sub(target).applyQuaternion(this._yAxisUpSpace));\n        this.normalizeRotations();\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n            this._spherical.copy(this._sphericalEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold) &&\n                approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) &&\n                approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) &&\n                approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Similar to setLookAt, but it interpolates between two states.\n     * @param positionAX\n     * @param positionAY\n     * @param positionAZ\n     * @param targetAX\n     * @param targetAY\n     * @param targetAZ\n     * @param positionBX\n     * @param positionBY\n     * @param positionBZ\n     * @param targetBX\n     * @param targetBY\n     * @param targetBZ\n     * @param t\n     * @param enableTransition\n     * @category Methods\n     */\n    lerpLookAt(positionAX, positionAY, positionAZ, targetAX, targetAY, targetAZ, positionBX, positionBY, positionBZ, targetBX, targetBY, targetBZ, t, enableTransition = false) {\n        this._isUserControllingRotate = false;\n        this._isUserControllingDolly = false;\n        this._isUserControllingTruck = false;\n        this._lastDollyDirection = DOLLY_DIRECTION.NONE;\n        this._changedDolly = 0;\n        const targetA = _v3A.set(targetAX, targetAY, targetAZ);\n        const positionA = _v3B.set(positionAX, positionAY, positionAZ);\n        _sphericalA.setFromVector3(positionA.sub(targetA).applyQuaternion(this._yAxisUpSpace));\n        const targetB = _v3C.set(targetBX, targetBY, targetBZ);\n        const positionB = _v3B.set(positionBX, positionBY, positionBZ);\n        _sphericalB.setFromVector3(positionB.sub(targetB).applyQuaternion(this._yAxisUpSpace));\n        this._targetEnd.copy(targetA.lerp(targetB, t)); // tricky\n        const deltaTheta = _sphericalB.theta - _sphericalA.theta;\n        const deltaPhi = _sphericalB.phi - _sphericalA.phi;\n        const deltaRadius = _sphericalB.radius - _sphericalA.radius;\n        this._sphericalEnd.set(_sphericalA.radius + deltaRadius * t, _sphericalA.phi + deltaPhi * t, _sphericalA.theta + deltaTheta * t);\n        this.normalizeRotations();\n        this._needsUpdate = true;\n        if (!enableTransition) {\n            this._target.copy(this._targetEnd);\n            this._spherical.copy(this._sphericalEnd);\n        }\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._target.x, this._targetEnd.x, this.restThreshold) &&\n                approxEquals(this._target.y, this._targetEnd.y, this.restThreshold) &&\n                approxEquals(this._target.z, this._targetEnd.z, this.restThreshold) &&\n                approxEquals(this._spherical.theta, this._sphericalEnd.theta, this.restThreshold) &&\n                approxEquals(this._spherical.phi, this._sphericalEnd.phi, this.restThreshold) &&\n                approxEquals(this._spherical.radius, this._sphericalEnd.radius, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Set angle and distance by given position.\n     * An alias of `setLookAt()`, without target change. Thus keep gazing at the current target\n     * @param positionX\n     * @param positionY\n     * @param positionZ\n     * @param enableTransition\n     * @category Methods\n     */\n    setPosition(positionX, positionY, positionZ, enableTransition = false) {\n        return this.setLookAt(positionX, positionY, positionZ, this._targetEnd.x, this._targetEnd.y, this._targetEnd.z, enableTransition);\n    }\n    /**\n     * Set the target position where gaze at.\n     * An alias of `setLookAt()`, without position change. Thus keep the same position.\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @param enableTransition\n     * @category Methods\n     */\n    setTarget(targetX, targetY, targetZ, enableTransition = false) {\n        const pos = this.getPosition(_v3A);\n        const promise = this.setLookAt(pos.x, pos.y, pos.z, targetX, targetY, targetZ, enableTransition);\n        // see https://github.com/yomotsu/camera-controls/issues/335\n        this._sphericalEnd.phi = clamp(this._sphericalEnd.phi, this.minPolarAngle, this.maxPolarAngle);\n        return promise;\n    }\n    /**\n     * Set focal offset using the screen parallel coordinates. z doesn't affect in Orthographic as with Dolly.\n     * @param x\n     * @param y\n     * @param z\n     * @param enableTransition\n     * @category Methods\n     */\n    setFocalOffset(x, y, z, enableTransition = false) {\n        this._isUserControllingOffset = false;\n        this._focalOffsetEnd.set(x, y, z);\n        this._needsUpdate = true;\n        if (!enableTransition)\n            this._focalOffset.copy(this._focalOffsetEnd);\n        const resolveImmediately = !enableTransition ||\n            approxEquals(this._focalOffset.x, this._focalOffsetEnd.x, this.restThreshold) &&\n                approxEquals(this._focalOffset.y, this._focalOffsetEnd.y, this.restThreshold) &&\n                approxEquals(this._focalOffset.z, this._focalOffsetEnd.z, this.restThreshold);\n        return this._createOnRestPromise(resolveImmediately);\n    }\n    /**\n     * Set orbit point without moving the camera.\n     * SHOULD NOT RUN DURING ANIMATIONS. `setOrbitPoint()` will immediately fix the positions.\n     * @param targetX\n     * @param targetY\n     * @param targetZ\n     * @category Methods\n     */\n    setOrbitPoint(targetX, targetY, targetZ) {\n        this._camera.updateMatrixWorld();\n        _xColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 0);\n        _yColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 1);\n        _zColumn.setFromMatrixColumn(this._camera.matrixWorldInverse, 2);\n        const position = _v3A.set(targetX, targetY, targetZ);\n        const distance = position.distanceTo(this._camera.position);\n        const cameraToPoint = position.sub(this._camera.position);\n        _xColumn.multiplyScalar(cameraToPoint.x);\n        _yColumn.multiplyScalar(cameraToPoint.y);\n        _zColumn.multiplyScalar(cameraToPoint.z);\n        _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);\n        _v3A.z = _v3A.z + distance;\n        this.dollyTo(distance, false);\n        this.setFocalOffset(-_v3A.x, _v3A.y, -_v3A.z, false);\n        this.moveTo(targetX, targetY, targetZ, false);\n    }\n    /**\n     * Set the boundary box that encloses the target of the camera. box3 is in THREE.Box3\n     * @param box3\n     * @category Methods\n     */\n    setBoundary(box3) {\n        if (!box3) {\n            this._boundary.min.set(-Infinity, -Infinity, -Infinity);\n            this._boundary.max.set(Infinity, Infinity, Infinity);\n            this._needsUpdate = true;\n            return;\n        }\n        this._boundary.copy(box3);\n        this._boundary.clampPoint(this._targetEnd, this._targetEnd);\n        this._needsUpdate = true;\n    }\n    /**\n     * Set (or unset) the current viewport.\n     * Set this when you want to use renderer viewport and .dollyToCursor feature at the same time.\n     * @param viewportOrX\n     * @param y\n     * @param width\n     * @param height\n     * @category Methods\n     */\n    setViewport(viewportOrX, y, width, height) {\n        if (viewportOrX === null) { // null\n            this._viewport = null;\n            return;\n        }\n        this._viewport = this._viewport || new THREE.Vector4();\n        if (typeof viewportOrX === 'number') { // number\n            this._viewport.set(viewportOrX, y, width, height);\n        }\n        else { // Vector4\n            this._viewport.copy(viewportOrX);\n        }\n    }\n    /**\n     * Calculate the distance to fit the box.\n     * @param width box width\n     * @param height box height\n     * @param depth box depth\n     * @returns distance\n     * @category Methods\n     */\n    getDistanceToFitBox(width, height, depth, cover = false) {\n        if (notSupportedInOrthographicCamera(this._camera, 'getDistanceToFitBox'))\n            return this._spherical.radius;\n        const boundingRectAspect = width / height;\n        const fov = this._camera.getEffectiveFOV() * DEG2RAD;\n        const aspect = this._camera.aspect;\n        const heightToFit = (cover ? boundingRectAspect > aspect : boundingRectAspect < aspect) ? height : width / aspect;\n        return heightToFit * 0.5 / Math.tan(fov * 0.5) + depth * 0.5;\n    }\n    /**\n     * Calculate the distance to fit the sphere.\n     * @param radius sphere radius\n     * @returns distance\n     * @category Methods\n     */\n    getDistanceToFitSphere(radius) {\n        if (notSupportedInOrthographicCamera(this._camera, 'getDistanceToFitSphere'))\n            return this._spherical.radius;\n        // https://stackoverflow.com/a/44849975\n        const vFOV = this._camera.getEffectiveFOV() * DEG2RAD;\n        const hFOV = Math.atan(Math.tan(vFOV * 0.5) * this._camera.aspect) * 2;\n        const fov = 1 < this._camera.aspect ? vFOV : hFOV;\n        return radius / (Math.sin(fov * 0.5));\n    }\n    /**\n     * Returns the orbit center position, where the camera looking at.\n     * @param out The receiving Vector3 instance to copy the result\n     * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n     * @category Methods\n     */\n    getTarget(out, receiveEndValue = true) {\n        const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n        return _out.copy(receiveEndValue ? this._targetEnd : this._target);\n    }\n    /**\n     * Returns the camera position.\n     * @param out The receiving Vector3 instance to copy the result\n     * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n     * @category Methods\n     */\n    getPosition(out, receiveEndValue = true) {\n        const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n        return _out.setFromSpherical(receiveEndValue ? this._sphericalEnd : this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(receiveEndValue ? this._targetEnd : this._target);\n    }\n    /**\n     * Returns the spherical coordinates of the orbit.\n     * @param out The receiving Spherical instance to copy the result\n     * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n     * @category Methods\n     */\n    getSpherical(out, receiveEndValue = true) {\n        const _out = out || new THREE.Spherical();\n        return _out.copy(receiveEndValue ? this._sphericalEnd : this._spherical);\n    }\n    /**\n     * Returns the focal offset, which is how much the camera appears to be translated in screen parallel coordinates.\n     * @param out The receiving Vector3 instance to copy the result\n     * @param receiveEndValue Whether receive the transition end coords or current. default is `true`\n     * @category Methods\n     */\n    getFocalOffset(out, receiveEndValue = true) {\n        const _out = !!out && out.isVector3 ? out : new THREE.Vector3();\n        return _out.copy(receiveEndValue ? this._focalOffsetEnd : this._focalOffset);\n    }\n    /**\n     * Normalize camera azimuth angle rotation between 0 and 360 degrees.\n     * @category Methods\n     */\n    normalizeRotations() {\n        this._sphericalEnd.theta = this._sphericalEnd.theta % PI_2;\n        if (this._sphericalEnd.theta < 0)\n            this._sphericalEnd.theta += PI_2;\n        this._spherical.theta += PI_2 * Math.round((this._sphericalEnd.theta - this._spherical.theta) / PI_2);\n    }\n    /**\n     * stop all transitions.\n     */\n    stop() {\n        this._focalOffset.copy(this._focalOffsetEnd);\n        this._target.copy(this._targetEnd);\n        this._spherical.copy(this._sphericalEnd);\n        this._zoom = this._zoomEnd;\n    }\n    /**\n     * Reset all rotation and position to defaults.\n     * @param enableTransition\n     * @category Methods\n     */\n    reset(enableTransition = false) {\n        if (!approxEquals(this._camera.up.x, this._cameraUp0.x) ||\n            !approxEquals(this._camera.up.y, this._cameraUp0.y) ||\n            !approxEquals(this._camera.up.z, this._cameraUp0.z)) {\n            this._camera.up.copy(this._cameraUp0);\n            const position = this.getPosition(_v3A);\n            this.updateCameraUp();\n            this.setPosition(position.x, position.y, position.z);\n        }\n        const promises = [\n            this.setLookAt(this._position0.x, this._position0.y, this._position0.z, this._target0.x, this._target0.y, this._target0.z, enableTransition),\n            this.setFocalOffset(this._focalOffset0.x, this._focalOffset0.y, this._focalOffset0.z, enableTransition),\n            this.zoomTo(this._zoom0, enableTransition),\n        ];\n        return Promise.all(promises);\n    }\n    /**\n     * Set current camera position as the default position.\n     * @category Methods\n     */\n    saveState() {\n        this._cameraUp0.copy(this._camera.up);\n        this.getTarget(this._target0);\n        this.getPosition(this._position0);\n        this._zoom0 = this._zoom;\n        this._focalOffset0.copy(this._focalOffset);\n    }\n    /**\n     * Sync camera-up direction.\n     * When camera-up vector is changed, `.updateCameraUp()` must be called.\n     * @category Methods\n     */\n    updateCameraUp() {\n        this._yAxisUpSpace.setFromUnitVectors(this._camera.up, _AXIS_Y);\n        this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert();\n    }\n    /**\n     * Apply current camera-up direction to the camera.\n     * The orbit system will be re-initialized with the current position.\n     * @category Methods\n     */\n    applyCameraUp() {\n        const cameraDirection = _v3A.subVectors(this._target, this._camera.position).normalize();\n        // So first find the vector off to the side, orthogonal to both this.object.up and\n        // the \"view\" vector.\n        const side = _v3B.crossVectors(cameraDirection, this._camera.up);\n        // Then find the vector orthogonal to both this \"side\" vector and the \"view\" vector.\n        // This vector will be the new \"up\" vector.\n        this._camera.up.crossVectors(side, cameraDirection).normalize();\n        this._camera.updateMatrixWorld();\n        const position = this.getPosition(_v3A);\n        this.updateCameraUp();\n        this.setPosition(position.x, position.y, position.z);\n    }\n    /**\n     * Update camera position and directions.\n     * This should be called in your tick loop every time, and returns true if re-rendering is needed.\n     * @param delta\n     * @returns updated\n     * @category Methods\n     */\n    update(delta) {\n        const deltaTheta = this._sphericalEnd.theta - this._spherical.theta;\n        const deltaPhi = this._sphericalEnd.phi - this._spherical.phi;\n        const deltaRadius = this._sphericalEnd.radius - this._spherical.radius;\n        const deltaTarget = _deltaTarget.subVectors(this._targetEnd, this._target);\n        const deltaOffset = _deltaOffset.subVectors(this._focalOffsetEnd, this._focalOffset);\n        const deltaZoom = this._zoomEnd - this._zoom;\n        // update theta\n        if (approxZero(deltaTheta)) {\n            this._thetaVelocity.value = 0;\n            this._spherical.theta = this._sphericalEnd.theta;\n        }\n        else {\n            const smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\n            this._spherical.theta = smoothDamp(this._spherical.theta, this._sphericalEnd.theta, this._thetaVelocity, smoothTime, Infinity, delta);\n            this._needsUpdate = true;\n        }\n        // update phi\n        if (approxZero(deltaPhi)) {\n            this._phiVelocity.value = 0;\n            this._spherical.phi = this._sphericalEnd.phi;\n        }\n        else {\n            const smoothTime = this._isUserControllingRotate ? this.draggingSmoothTime : this.smoothTime;\n            this._spherical.phi = smoothDamp(this._spherical.phi, this._sphericalEnd.phi, this._phiVelocity, smoothTime, Infinity, delta);\n            this._needsUpdate = true;\n        }\n        // update distance\n        if (approxZero(deltaRadius)) {\n            this._radiusVelocity.value = 0;\n            this._spherical.radius = this._sphericalEnd.radius;\n        }\n        else {\n            const smoothTime = this._isUserControllingDolly ? this.draggingSmoothTime : this.smoothTime;\n            this._spherical.radius = smoothDamp(this._spherical.radius, this._sphericalEnd.radius, this._radiusVelocity, smoothTime, this.maxSpeed, delta);\n            this._needsUpdate = true;\n        }\n        // update target position\n        if (approxZero(deltaTarget.x) && approxZero(deltaTarget.y) && approxZero(deltaTarget.z)) {\n            this._targetVelocity.set(0, 0, 0);\n            this._target.copy(this._targetEnd);\n        }\n        else {\n            const smoothTime = this._isUserControllingTruck ? this.draggingSmoothTime : this.smoothTime;\n            smoothDampVec3(this._target, this._targetEnd, this._targetVelocity, smoothTime, this.maxSpeed, delta, this._target);\n            this._needsUpdate = true;\n        }\n        // update focalOffset\n        if (approxZero(deltaOffset.x) && approxZero(deltaOffset.y) && approxZero(deltaOffset.z)) {\n            this._focalOffsetVelocity.set(0, 0, 0);\n            this._focalOffset.copy(this._focalOffsetEnd);\n        }\n        else {\n            const smoothTime = this._isUserControllingOffset ? this.draggingSmoothTime : this.smoothTime;\n            smoothDampVec3(this._focalOffset, this._focalOffsetEnd, this._focalOffsetVelocity, smoothTime, this.maxSpeed, delta, this._focalOffset);\n            this._needsUpdate = true;\n        }\n        // update zoom\n        if (approxZero(deltaZoom)) {\n            this._zoomVelocity.value = 0;\n            this._zoom = this._zoomEnd;\n        }\n        else {\n            const smoothTime = this._isUserControllingZoom ? this.draggingSmoothTime : this.smoothTime;\n            this._zoom = smoothDamp(this._zoom, this._zoomEnd, this._zoomVelocity, smoothTime, Infinity, delta);\n        }\n        if (this.dollyToCursor) {\n            if (isPerspectiveCamera(this._camera) && this._changedDolly !== 0) {\n                const dollyControlAmount = this._spherical.radius - this._lastDistance;\n                const camera = this._camera;\n                const cameraDirection = this._getCameraDirection(_cameraDirection);\n                const planeX = _v3A.copy(cameraDirection).cross(camera.up).normalize();\n                if (planeX.lengthSq() === 0)\n                    planeX.x = 1.0;\n                const planeY = _v3B.crossVectors(planeX, cameraDirection);\n                const worldToScreen = this._sphericalEnd.radius * Math.tan(camera.getEffectiveFOV() * DEG2RAD * 0.5);\n                const prevRadius = this._sphericalEnd.radius - dollyControlAmount;\n                const lerpRatio = (prevRadius - this._sphericalEnd.radius) / this._sphericalEnd.radius;\n                const cursor = _v3C.copy(this._targetEnd)\n                    .add(planeX.multiplyScalar(this._dollyControlCoord.x * worldToScreen * camera.aspect))\n                    .add(planeY.multiplyScalar(this._dollyControlCoord.y * worldToScreen));\n                const newTargetEnd = _v3A.copy(this._targetEnd).lerp(cursor, lerpRatio);\n                const isMin = this._lastDollyDirection === DOLLY_DIRECTION.IN && this._spherical.radius <= this.minDistance;\n                const isMax = this._lastDollyDirection === DOLLY_DIRECTION.OUT && this.maxDistance <= this._spherical.radius;\n                if (this.infinityDolly && (isMin || isMax)) {\n                    this._sphericalEnd.radius -= dollyControlAmount;\n                    this._spherical.radius -= dollyControlAmount;\n                    const dollyAmount = _v3B.copy(cameraDirection).multiplyScalar(-dollyControlAmount);\n                    newTargetEnd.add(dollyAmount);\n                }\n                // target position may be moved beyond boundary.\n                this._boundary.clampPoint(newTargetEnd, newTargetEnd);\n                const targetEndDiff = _v3B.subVectors(newTargetEnd, this._targetEnd);\n                this._targetEnd.copy(newTargetEnd);\n                this._target.add(targetEndDiff);\n                this._changedDolly -= dollyControlAmount;\n                if (approxZero(this._changedDolly))\n                    this._changedDolly = 0;\n            }\n            else if (isOrthographicCamera(this._camera) && this._changedZoom !== 0) {\n                const dollyControlAmount = this._zoom - this._lastZoom;\n                const camera = this._camera;\n                const worldCursorPosition = _v3A.set(this._dollyControlCoord.x, this._dollyControlCoord.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera);\n                const quaternion = _v3B.set(0, 0, -1).applyQuaternion(camera.quaternion);\n                const cursor = _v3C.copy(worldCursorPosition).add(quaternion.multiplyScalar(-worldCursorPosition.dot(camera.up)));\n                const prevZoom = this._zoom - dollyControlAmount;\n                const lerpRatio = -(prevZoom - this._zoom) / this._zoom;\n                // find the \"distance\" (aka plane constant in three.js) of Plane\n                // from a given position (this._targetEnd) and normal vector (cameraDirection)\n                // https://www.maplesoft.com/support/help/maple/view.aspx?path=MathApps%2FEquationOfAPlaneNormal#bkmrk0\n                const cameraDirection = this._getCameraDirection(_cameraDirection);\n                const prevPlaneConstant = this._targetEnd.dot(cameraDirection);\n                const newTargetEnd = _v3A.copy(this._targetEnd).lerp(cursor, lerpRatio);\n                const newPlaneConstant = newTargetEnd.dot(cameraDirection);\n                // Pull back the camera depth that has moved, to be the camera stationary as zoom\n                const pullBack = cameraDirection.multiplyScalar(newPlaneConstant - prevPlaneConstant);\n                newTargetEnd.sub(pullBack);\n                // target position may be moved beyond boundary.\n                this._boundary.clampPoint(newTargetEnd, newTargetEnd);\n                const targetEndDiff = _v3B.subVectors(newTargetEnd, this._targetEnd);\n                this._targetEnd.copy(newTargetEnd);\n                this._target.add(targetEndDiff);\n                // this._target.copy( this._targetEnd );\n                this._changedZoom -= dollyControlAmount;\n                if (approxZero(this._changedZoom))\n                    this._changedZoom = 0;\n            }\n        }\n        if (this._camera.zoom !== this._zoom) {\n            this._camera.zoom = this._zoom;\n            this._camera.updateProjectionMatrix();\n            this._updateNearPlaneCorners();\n            this._needsUpdate = true;\n        }\n        this._dragNeedsUpdate = true;\n        // collision detection\n        const maxDistance = this._collisionTest();\n        this._spherical.radius = Math.min(this._spherical.radius, maxDistance);\n        // decompose spherical to the camera position\n        this._spherical.makeSafe();\n        this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target);\n        this._camera.lookAt(this._target);\n        // set offset after the orbit movement\n        const affectOffset = !approxZero(this._focalOffset.x) ||\n            !approxZero(this._focalOffset.y) ||\n            !approxZero(this._focalOffset.z);\n        if (affectOffset) {\n            _xColumn.setFromMatrixColumn(this._camera.matrix, 0);\n            _yColumn.setFromMatrixColumn(this._camera.matrix, 1);\n            _zColumn.setFromMatrixColumn(this._camera.matrix, 2);\n            _xColumn.multiplyScalar(this._focalOffset.x);\n            _yColumn.multiplyScalar(-this._focalOffset.y);\n            _zColumn.multiplyScalar(this._focalOffset.z); // notice: z-offset will not affect in Orthographic.\n            _v3A.copy(_xColumn).add(_yColumn).add(_zColumn);\n            this._camera.position.add(_v3A);\n            this._camera.updateMatrixWorld();\n        }\n        if (this._boundaryEnclosesCamera) {\n            this._encloseToBoundary(this._camera.position.copy(this._target), _v3A.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse), 1.0);\n        }\n        const updated = this._needsUpdate;\n        if (updated && !this._updatedLastTime) {\n            this._hasRested = false;\n            this.dispatchEvent({ type: 'wake' });\n            this.dispatchEvent({ type: 'update' });\n        }\n        else if (updated) {\n            this.dispatchEvent({ type: 'update' });\n            if (approxZero(deltaTheta, this.restThreshold) &&\n                approxZero(deltaPhi, this.restThreshold) &&\n                approxZero(deltaRadius, this.restThreshold) &&\n                approxZero(deltaTarget.x, this.restThreshold) &&\n                approxZero(deltaTarget.y, this.restThreshold) &&\n                approxZero(deltaTarget.z, this.restThreshold) &&\n                approxZero(deltaOffset.x, this.restThreshold) &&\n                approxZero(deltaOffset.y, this.restThreshold) &&\n                approxZero(deltaOffset.z, this.restThreshold) &&\n                approxZero(deltaZoom, this.restThreshold) &&\n                !this._hasRested) {\n                this._hasRested = true;\n                this.dispatchEvent({ type: 'rest' });\n            }\n        }\n        else if (!updated && this._updatedLastTime) {\n            this.dispatchEvent({ type: 'sleep' });\n        }\n        this._lastDistance = this._spherical.radius;\n        this._lastZoom = this._zoom;\n        this._updatedLastTime = updated;\n        this._needsUpdate = false;\n        return updated;\n    }\n    /**\n     * Get all state in JSON string\n     * @category Methods\n     */\n    toJSON() {\n        return JSON.stringify({\n            enabled: this._enabled,\n            minDistance: this.minDistance,\n            maxDistance: infinityToMaxNumber(this.maxDistance),\n            minZoom: this.minZoom,\n            maxZoom: infinityToMaxNumber(this.maxZoom),\n            minPolarAngle: this.minPolarAngle,\n            maxPolarAngle: infinityToMaxNumber(this.maxPolarAngle),\n            minAzimuthAngle: infinityToMaxNumber(this.minAzimuthAngle),\n            maxAzimuthAngle: infinityToMaxNumber(this.maxAzimuthAngle),\n            smoothTime: this.smoothTime,\n            draggingSmoothTime: this.draggingSmoothTime,\n            dollySpeed: this.dollySpeed,\n            truckSpeed: this.truckSpeed,\n            dollyToCursor: this.dollyToCursor,\n            target: this._targetEnd.toArray(),\n            position: _v3A.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),\n            zoom: this._zoomEnd,\n            focalOffset: this._focalOffsetEnd.toArray(),\n            target0: this._target0.toArray(),\n            position0: this._position0.toArray(),\n            zoom0: this._zoom0,\n            focalOffset0: this._focalOffset0.toArray(),\n        });\n    }\n    /**\n     * Reproduce the control state with JSON. enableTransition is where anim or not in a boolean.\n     * @param json\n     * @param enableTransition\n     * @category Methods\n     */\n    fromJSON(json, enableTransition = false) {\n        const obj = JSON.parse(json);\n        this.enabled = obj.enabled;\n        this.minDistance = obj.minDistance;\n        this.maxDistance = maxNumberToInfinity(obj.maxDistance);\n        this.minZoom = obj.minZoom;\n        this.maxZoom = maxNumberToInfinity(obj.maxZoom);\n        this.minPolarAngle = obj.minPolarAngle;\n        this.maxPolarAngle = maxNumberToInfinity(obj.maxPolarAngle);\n        this.minAzimuthAngle = maxNumberToInfinity(obj.minAzimuthAngle);\n        this.maxAzimuthAngle = maxNumberToInfinity(obj.maxAzimuthAngle);\n        this.smoothTime = obj.smoothTime;\n        this.draggingSmoothTime = obj.draggingSmoothTime;\n        this.dollySpeed = obj.dollySpeed;\n        this.truckSpeed = obj.truckSpeed;\n        this.dollyToCursor = obj.dollyToCursor;\n        this._target0.fromArray(obj.target0);\n        this._position0.fromArray(obj.position0);\n        this._zoom0 = obj.zoom0;\n        this._focalOffset0.fromArray(obj.focalOffset0);\n        this.moveTo(obj.target[0], obj.target[1], obj.target[2], enableTransition);\n        _sphericalA.setFromVector3(_v3A.fromArray(obj.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace));\n        this.rotateTo(_sphericalA.theta, _sphericalA.phi, enableTransition);\n        this.dollyTo(_sphericalA.radius, enableTransition);\n        this.zoomTo(obj.zoom, enableTransition);\n        this.setFocalOffset(obj.focalOffset[0], obj.focalOffset[1], obj.focalOffset[2], enableTransition);\n        this._needsUpdate = true;\n    }\n    /**\n     * Attach all internal event handlers to enable drag control.\n     * @category Methods\n     */\n    connect(domElement) {\n        if (this._domElement) {\n            console.warn('camera-controls is already connected.');\n            return;\n        }\n        domElement.setAttribute('data-camera-controls-version', VERSION);\n        this._addAllEventListeners(domElement);\n        this._getClientRect(this._elementRect);\n    }\n    /**\n     * Detach all internal event handlers to disable drag control.\n     */\n    disconnect() {\n        this.cancel();\n        this._removeAllEventListeners();\n        if (this._domElement) {\n            this._domElement.removeAttribute('data-camera-controls-version');\n            this._domElement = undefined;\n        }\n    }\n    /**\n     * Dispose the cameraControls instance itself, remove all eventListeners.\n     * @category Methods\n     */\n    dispose() {\n        // remove all user event listeners\n        this.removeAllEventListeners();\n        // remove all internal event listeners\n        this.disconnect();\n    }\n    // it's okay to expose public though\n    _getTargetDirection(out) {\n        // divide by distance to normalize, lighter than `Vector3.prototype.normalize()`\n        return out.setFromSpherical(this._spherical).divideScalar(this._spherical.radius).applyQuaternion(this._yAxisUpSpaceInverse);\n    }\n    // it's okay to expose public though\n    _getCameraDirection(out) {\n        return this._getTargetDirection(out).negate();\n    }\n    _findPointerById(pointerId) {\n        return this._activePointers.find((activePointer) => activePointer.pointerId === pointerId);\n    }\n    _findPointerByMouseButton(mouseButton) {\n        return this._activePointers.find((activePointer) => activePointer.mouseButton === mouseButton);\n    }\n    _disposePointer(pointer) {\n        this._activePointers.splice(this._activePointers.indexOf(pointer), 1);\n    }\n    _encloseToBoundary(position, offset, friction) {\n        const offsetLength2 = offset.lengthSq();\n        if (offsetLength2 === 0.0) { // sanity check\n            return position;\n        }\n        // See: https://twitter.com/FMS_Cat/status/1106508958640988161\n        const newTarget = _v3B.copy(offset).add(position); // target\n        const clampedTarget = this._boundary.clampPoint(newTarget, _v3C); // clamped target\n        const deltaClampedTarget = clampedTarget.sub(newTarget); // newTarget -> clampedTarget\n        const deltaClampedTargetLength2 = deltaClampedTarget.lengthSq(); // squared length of deltaClampedTarget\n        if (deltaClampedTargetLength2 === 0.0) { // when the position doesn't have to be clamped\n            return position.add(offset);\n        }\n        else if (deltaClampedTargetLength2 === offsetLength2) { // when the position is completely stuck\n            return position;\n        }\n        else if (friction === 0.0) {\n            return position.add(offset).add(deltaClampedTarget);\n        }\n        else {\n            const offsetFactor = 1.0 + friction * deltaClampedTargetLength2 / offset.dot(deltaClampedTarget);\n            return position\n                .add(_v3B.copy(offset).multiplyScalar(offsetFactor))\n                .add(deltaClampedTarget.multiplyScalar(1.0 - friction));\n        }\n    }\n    _updateNearPlaneCorners() {\n        if (isPerspectiveCamera(this._camera)) {\n            const camera = this._camera;\n            const near = camera.near;\n            const fov = camera.getEffectiveFOV() * DEG2RAD;\n            const heightHalf = Math.tan(fov * 0.5) * near; // near plain half height\n            const widthHalf = heightHalf * camera.aspect; // near plain half width\n            this._nearPlaneCorners[0].set(-widthHalf, -heightHalf, 0);\n            this._nearPlaneCorners[1].set(widthHalf, -heightHalf, 0);\n            this._nearPlaneCorners[2].set(widthHalf, heightHalf, 0);\n            this._nearPlaneCorners[3].set(-widthHalf, heightHalf, 0);\n        }\n        else if (isOrthographicCamera(this._camera)) {\n            const camera = this._camera;\n            const zoomInv = 1 / camera.zoom;\n            const left = camera.left * zoomInv;\n            const right = camera.right * zoomInv;\n            const top = camera.top * zoomInv;\n            const bottom = camera.bottom * zoomInv;\n            this._nearPlaneCorners[0].set(left, top, 0);\n            this._nearPlaneCorners[1].set(right, top, 0);\n            this._nearPlaneCorners[2].set(right, bottom, 0);\n            this._nearPlaneCorners[3].set(left, bottom, 0);\n        }\n    }\n    // lateUpdate\n    _collisionTest() {\n        let distance = Infinity;\n        const hasCollider = this.colliderMeshes.length >= 1;\n        if (!hasCollider)\n            return distance;\n        if (notSupportedInOrthographicCamera(this._camera, '_collisionTest'))\n            return distance;\n        const rayDirection = this._getTargetDirection(_cameraDirection);\n        _rotationMatrix.lookAt(_ORIGIN, rayDirection, this._camera.up);\n        for (let i = 0; i < 4; i++) {\n            const nearPlaneCorner = _v3B.copy(this._nearPlaneCorners[i]);\n            nearPlaneCorner.applyMatrix4(_rotationMatrix);\n            const origin = _v3C.addVectors(this._target, nearPlaneCorner);\n            _raycaster.set(origin, rayDirection);\n            _raycaster.far = this._spherical.radius + 1;\n            const intersects = _raycaster.intersectObjects(this.colliderMeshes);\n            if (intersects.length !== 0 && intersects[0].distance < distance) {\n                distance = intersects[0].distance;\n            }\n        }\n        return distance;\n    }\n    /**\n     * Get its client rect and package into given `DOMRect` .\n     */\n    _getClientRect(target) {\n        if (!this._domElement)\n            return;\n        const rect = this._domElement.getBoundingClientRect();\n        target.x = rect.left;\n        target.y = rect.top;\n        if (this._viewport) {\n            target.x += this._viewport.x;\n            target.y += rect.height - this._viewport.w - this._viewport.y;\n            target.width = this._viewport.z;\n            target.height = this._viewport.w;\n        }\n        else {\n            target.width = rect.width;\n            target.height = rect.height;\n        }\n        return target;\n    }\n    _createOnRestPromise(resolveImmediately) {\n        if (resolveImmediately)\n            return Promise.resolve();\n        this._hasRested = false;\n        this.dispatchEvent({ type: 'transitionstart' });\n        return new Promise((resolve) => {\n            const onResolve = () => {\n                this.removeEventListener('rest', onResolve);\n                resolve();\n            };\n            this.addEventListener('rest', onResolve);\n        });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _addAllEventListeners(_domElement) { }\n    _removeAllEventListeners() { }\n    /**\n     * backward compatible\n     * @deprecated use smoothTime (in seconds) instead\n     * @category Properties\n     */\n    get dampingFactor() {\n        console.warn('.dampingFactor has been deprecated. use smoothTime (in seconds) instead.');\n        return 0;\n    }\n    /**\n     * backward compatible\n     * @deprecated use smoothTime (in seconds) instead\n     * @category Properties\n     */\n    set dampingFactor(_) {\n        console.warn('.dampingFactor has been deprecated. use smoothTime (in seconds) instead.');\n    }\n    /**\n     * backward compatible\n     * @deprecated use draggingSmoothTime (in seconds) instead\n     * @category Properties\n     */\n    get draggingDampingFactor() {\n        console.warn('.draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.');\n        return 0;\n    }\n    /**\n     * backward compatible\n     * @deprecated use draggingSmoothTime (in seconds) instead\n     * @category Properties\n     */\n    set draggingDampingFactor(_) {\n        console.warn('.draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.');\n    }\n    static createBoundingSphere(object3d, out = new THREE.Sphere()) {\n        const boundingSphere = out;\n        const center = boundingSphere.center;\n        _box3A.makeEmpty();\n        // find the center\n        object3d.traverseVisible((object) => {\n            if (!object.isMesh)\n                return;\n            _box3A.expandByObject(object);\n        });\n        _box3A.getCenter(center);\n        // find the radius\n        let maxRadiusSq = 0;\n        object3d.traverseVisible((object) => {\n            if (!object.isMesh)\n                return;\n            const mesh = object;\n            if (!mesh.geometry)\n                return;\n            const geometry = mesh.geometry.clone();\n            geometry.applyMatrix4(mesh.matrixWorld);\n            const bufferGeometry = geometry;\n            const position = bufferGeometry.attributes.position;\n            for (let i = 0, l = position.count; i < l; i++) {\n                _v3A.fromBufferAttribute(position, i);\n                maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_v3A));\n            }\n        });\n        boundingSphere.radius = Math.sqrt(maxRadiusSq);\n        return boundingSphere;\n    }\n}\n\nexport { EventDispatcher, CameraControls as default };\n","class XRButton {\n\n    static createButton(renderer, sessionInit = {}) {\n\n        const button = document.createElement('button');\n\n        function showStartXR(mode) {\n            let currentSession = null;\n            async function onSessionStarted(session) {\n                session.addEventListener('end', onSessionEnded);\n                await renderer.xr.setSession(session);\n                button.textContent = 'STOP XR';\n                currentSession = session;\n            }\n\n            function onSessionEnded( /*event*/) {\n                currentSession.removeEventListener('end', onSessionEnded);\n                button.textContent = 'START XR';\n                currentSession = null;\n            }\n\n            //\n\n            button.style.display = '';\n\n            button.style.cursor = 'pointer';\n            button.style.left = 'calc(50% - 50px)';\n            button.style.width = '100px';\n\n            button.textContent = 'START XR';\n\n            const sessionOptions = {\n                ...sessionInit,\n                optionalFeatures: [\n                    'local-floor',\n                    'bounded-floor',\n                    ...(sessionInit.optionalFeatures || [])\n                ],\n            };\n\n            button.onmouseenter = function () {\n                button.style.opacity = '1.0';\n            };\n\n            button.onmouseleave = function () {\n                button.style.opacity = '0.5';\n            };\n\n            button.onclick = function () {\n                if (currentSession === null) {\n                    navigator.xr.requestSession(mode, sessionOptions)\n                        .then(onSessionStarted);\n                } else {\n                    currentSession.end();\n                    if (navigator.xr.offerSession !== undefined) {\n                        navigator.xr.offerSession(mode, sessionOptions)\n                            .then(onSessionStarted)\n                            .catch((err) => {\n                                console.warn(err);\n                            });\n                    }\n                }\n            };\n\n            if (navigator.xr.offerSession !== undefined) {\n                navigator.xr.offerSession(mode, sessionOptions)\n                    .then(onSessionStarted)\n                    .catch((err) => {\n                        console.warn(err);\n                    });\n            }\n        }\n\n        function disableButton() {\n\n            button.style.display = '';\n\n            button.style.cursor = 'auto';\n            button.style.left = 'calc(50% - 75px)';\n            button.style.width = '150px';\n\n            button.onmouseenter = null;\n            button.onmouseleave = null;\n\n            button.onclick = null;\n\n        }\n\n        function showXRNotSupported() {\n\n            disableButton();\n\n            button.textContent = 'No headset found';\n            button.style.display = 'none';\n\n        }\n\n        function showXRNotAllowed(exception) {\n            disableButton();\n            console.warn('Exception when trying to call xr.isSessionSupported', exception);\n            button.textContent = 'XR NOT ALLOWED';\n        }\n\n        function stylizeElement(element) {\n\n            element.style.position = 'absolute';\n            element.style.bottom = '20px';\n            element.style.padding = '12px 6px';\n            element.style.border = '1px solid #fff';\n            element.style.borderRadius = '4px';\n            element.style.background = 'rgba(0,0,0,0.1)';\n            element.style.color = '#fff';\n            element.style.font = 'normal 13px sans-serif';\n            element.style.textAlign = 'center';\n            element.style.opacity = '0.5';\n            element.style.outline = 'none';\n            element.style.zIndex = '999';\n\n        }\n\n        if ('xr' in navigator) {\n\n            button.id = 'XRButton';\n            button.style.display = 'none';\n\n            stylizeElement(button);\n\n            navigator.xr.isSessionSupported('immersive-ar')\n                .then(function (supported) {\n\n                    if (supported) {\n                        showStartXR('immersive-ar');\n                    } else {\n                        navigator.xr.isSessionSupported('immersive-vr')\n                            .then(function (supported) {\n                                if (supported) {\n                                    showStartXR('immersive-vr');\n                                } else {\n\n                                    showXRNotSupported();\n                                }\n                            }).catch(showXRNotAllowed);\n                    }\n\n                }).catch(showXRNotAllowed);\n\n            return button;\n\n        } else {\n\n            const message = document.createElement('a');\n\n            if (window.isSecureContext === false) {\n\n                message.href = document.location.href.replace(/^http:/, 'https:');\n                message.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n\n            } else {\n\n                // message.href = 'https://immersiveweb.dev/';\n                // message.innerHTML = 'WEBXR NOT AVAILABLE';\n                message.style = 'display: none';\n            }\n\n            message.style.left = 'calc(50% - 90px)';\n            message.style.width = '180px';\n            message.style.textDecoration = 'none';\n\n            stylizeElement(message);\n\n            return message;\n        }\n    }\n}\n\nexport {XRButton};\n","// Copyright 2021-2022 Icosa Gallery\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//      http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { MathUtils } from 'three'\r\nimport CameraControls from \"camera-controls\";\r\nimport * as holdEvent from 'hold-event';\r\n\r\nexport function setupNavigation(cameraControls : CameraControls): void {\r\n    const KEYCODE = {\r\n        W: 87,\r\n        A: 65,\r\n        S: 83,\r\n        D: 68,\r\n        Q: 81,\r\n        E: 69,\r\n        ARROW_LEFT : 37,\r\n        ARROW_UP   : 38,\r\n        ARROW_RIGHT: 39,\r\n        ARROW_DOWN : 40,\r\n    };\r\n    \r\n    const wKey = new holdEvent.KeyboardKeyHold( KEYCODE.W, 1);\r\n    const aKey = new holdEvent.KeyboardKeyHold( KEYCODE.A, 1);\r\n    const sKey = new holdEvent.KeyboardKeyHold( KEYCODE.S, 1);\r\n    const dKey = new holdEvent.KeyboardKeyHold( KEYCODE.D, 1);\r\n    const qKey = new holdEvent.KeyboardKeyHold( KEYCODE.Q, 1);\r\n    const eKey = new holdEvent.KeyboardKeyHold( KEYCODE.E, 1);\r\n    aKey.addEventListener( 'holding', function( event ) { cameraControls.truck(- 0.01 * event?.deltaTime, 0, true ) } );\r\n    dKey.addEventListener( 'holding', function( event ) { cameraControls.truck(  0.01 * event?.deltaTime, 0, true ) } );\r\n    wKey.addEventListener( 'holding', function( event ) { cameraControls.forward(   0.01 * event?.deltaTime, true ) } );\r\n    sKey.addEventListener( 'holding', function( event ) { cameraControls.forward( - 0.01 * event?.deltaTime, true ) } );\r\n    qKey.addEventListener( 'holding', function( event ) { cameraControls.truck( 0,  0.01 * event?.deltaTime, true ) } );\r\n    eKey.addEventListener( 'holding', function( event ) { cameraControls.truck( 0,- 0.01 * event?.deltaTime, true ) } );\r\n    // Leaving this here because I hope I can use it later somehow.\r\n    // cameraControls.mouseButtons.wheel = CameraControls.ACTION.ZOOM;\r\n    \r\n    const leftKey  = new holdEvent.KeyboardKeyHold( KEYCODE.ARROW_LEFT,  1);\r\n    const rightKey = new holdEvent.KeyboardKeyHold( KEYCODE.ARROW_RIGHT, 1);\r\n    const upKey    = new holdEvent.KeyboardKeyHold( KEYCODE.ARROW_UP,    1);\r\n    const downKey  = new holdEvent.KeyboardKeyHold( KEYCODE.ARROW_DOWN,  1);\r\n    leftKey.addEventListener ( 'holding', function( event ) { cameraControls.rotate(   0.1 * MathUtils.DEG2RAD * event?.deltaTime, 0, true ) } );\r\n    rightKey.addEventListener( 'holding', function( event ) { cameraControls.rotate( - 0.1 * MathUtils.DEG2RAD * event?.deltaTime, 0, true ) } );\r\n    upKey.addEventListener   ( 'holding', function( event ) { cameraControls.rotate( 0, - 0.05 * MathUtils.DEG2RAD * event?.deltaTime, true ) } );\r\n    downKey.addEventListener ( 'holding', function( event ) { cameraControls.rotate( 0,   0.05 * MathUtils.DEG2RAD * event?.deltaTime, true ) } );\r\n}","/*!\n * hold-event\n * https://github.com/yomotsu/hold-event\n * (c) 2020 @yomotsu\n * Released under the MIT License.\n */\nvar HOLD_EVENT_TYPE;\r\n(function (HOLD_EVENT_TYPE) {\r\n    HOLD_EVENT_TYPE[\"HOLD_START\"] = \"holdStart\";\r\n    HOLD_EVENT_TYPE[\"HOLD_END\"] = \"holdEnd\";\r\n    HOLD_EVENT_TYPE[\"HOLDING\"] = \"holding\";\r\n})(HOLD_EVENT_TYPE || (HOLD_EVENT_TYPE = {}));\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\n\nvar EventDispatcher = (function () {\r\n    function EventDispatcher() {\r\n        this._listeners = {};\r\n    }\r\n    EventDispatcher.prototype.addEventListener = function (type, listener) {\r\n        var listeners = this._listeners;\r\n        if (listeners[type] === undefined)\r\n            listeners[type] = [];\r\n        if (listeners[type].indexOf(listener) === -1)\r\n            listeners[type].push(listener);\r\n    };\r\n    EventDispatcher.prototype.removeEventListener = function (type, listener) {\r\n        var listeners = this._listeners;\r\n        var listenerArray = listeners[type];\r\n        if (listenerArray !== undefined) {\r\n            var index = listenerArray.indexOf(listener);\r\n            if (index !== -1)\r\n                listenerArray.splice(index, 1);\r\n        }\r\n    };\r\n    EventDispatcher.prototype.dispatchEvent = function (event) {\r\n        var listeners = this._listeners;\r\n        var listenerArray = listeners[event.type];\r\n        if (listenerArray !== undefined) {\r\n            event.target = this;\r\n            var array = listenerArray.slice(0);\r\n            for (var i = 0, l = array.length; i < l; i++) {\r\n                array[i].call(this, event);\r\n            }\r\n        }\r\n    };\r\n    return EventDispatcher;\r\n}());\n\nvar Hold = (function (_super) {\r\n    __extends(Hold, _super);\r\n    function Hold(holdIntervalDelay) {\r\n        if (holdIntervalDelay === void 0) { holdIntervalDelay = 100; }\r\n        var _this = _super.call(this) || this;\r\n        _this.holdIntervalDelay = 100;\r\n        _this._enabled = true;\r\n        _this._holding = false;\r\n        _this._intervalId = -1;\r\n        _this._deltaTime = 0;\r\n        _this._elapsedTime = 0;\r\n        _this._lastTime = 0;\r\n        _this._holdStart = function (event) {\r\n            if (!_this._enabled)\r\n                return;\r\n            if (_this._holding)\r\n                return;\r\n            _this._deltaTime = 0;\r\n            _this._elapsedTime = 0;\r\n            _this._lastTime = performance.now();\r\n            _this.dispatchEvent({\r\n                type: HOLD_EVENT_TYPE.HOLD_START,\r\n                deltaTime: _this._deltaTime,\r\n                elapsedTime: _this._elapsedTime,\r\n                originalEvent: event,\r\n            });\r\n            _this._holding = true;\r\n            _this._intervalId = window.setInterval(function () {\r\n                var now = performance.now();\r\n                _this._deltaTime = now - _this._lastTime;\r\n                _this._elapsedTime += _this._deltaTime;\r\n                _this._lastTime = performance.now();\r\n                _this.dispatchEvent({\r\n                    type: HOLD_EVENT_TYPE.HOLDING,\r\n                    deltaTime: _this._deltaTime,\r\n                    elapsedTime: _this._elapsedTime,\r\n                });\r\n            }, _this.holdIntervalDelay);\r\n        };\r\n        _this._holdEnd = function (event) {\r\n            if (!_this._enabled)\r\n                return;\r\n            if (!_this._holding)\r\n                return;\r\n            var now = performance.now();\r\n            _this._deltaTime = now - _this._lastTime;\r\n            _this._elapsedTime += _this._deltaTime;\r\n            _this._lastTime = performance.now();\r\n            _this.dispatchEvent({\r\n                type: HOLD_EVENT_TYPE.HOLD_END,\r\n                deltaTime: _this._deltaTime,\r\n                elapsedTime: _this._elapsedTime,\r\n                originalEvent: event,\r\n            });\r\n            window.clearInterval(_this._intervalId);\r\n            _this._holding = false;\r\n        };\r\n        _this.holdIntervalDelay = holdIntervalDelay;\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Hold.prototype, \"enabled\", {\r\n        get: function () {\r\n            return this._enabled;\r\n        },\r\n        set: function (enabled) {\r\n            if (this._enabled === enabled)\r\n                return;\r\n            this._enabled = enabled;\r\n            if (!this._enabled)\r\n                this._holdEnd();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return Hold;\r\n}(EventDispatcher));\n\nvar ElementHold = (function (_super) {\r\n    __extends(ElementHold, _super);\r\n    function ElementHold(element, holdIntervalDelay) {\r\n        if (holdIntervalDelay === void 0) { holdIntervalDelay = 100; }\r\n        var _this = _super.call(this, holdIntervalDelay) || this;\r\n        _this._holdStart = _this._holdStart.bind(_this);\r\n        _this._holdEnd = _this._holdEnd.bind(_this);\r\n        var onPointerDown = _this._holdStart;\r\n        var onPointerUp = _this._holdEnd;\r\n        element.addEventListener('mousedown', onPointerDown);\r\n        document.addEventListener('mouseup', onPointerUp);\r\n        window.addEventListener('blur', _this._holdEnd);\r\n        return _this;\r\n    }\r\n    return ElementHold;\r\n}(Hold));\n\nvar KeyboardKeyHold = (function (_super) {\r\n    __extends(KeyboardKeyHold, _super);\r\n    function KeyboardKeyHold(keyCode, holdIntervalDelay) {\r\n        if (holdIntervalDelay === void 0) { holdIntervalDelay = 100; }\r\n        var _this = _super.call(this, holdIntervalDelay) || this;\r\n        _this._holdStart = _this._holdStart.bind(_this);\r\n        _this._holdEnd = _this._holdEnd.bind(_this);\r\n        var onKeydown = function (event) {\r\n            if (isInputEvent(event))\r\n                return;\r\n            if (event.keyCode !== keyCode)\r\n                return;\r\n            _this._holdStart(event);\r\n        };\r\n        var onKeyup = function (event) {\r\n            if (event.keyCode !== keyCode)\r\n                return;\r\n            _this._holdEnd(event);\r\n        };\r\n        document.addEventListener('keydown', onKeydown);\r\n        document.addEventListener('keyup', onKeyup);\r\n        window.addEventListener('blur', _this._holdEnd);\r\n        return _this;\r\n    }\r\n    return KeyboardKeyHold;\r\n}(Hold));\r\nfunction isInputEvent(event) {\r\n    var target = event.target;\r\n    return (target.tagName === 'INPUT' ||\r\n        target.tagName === 'SELECT' ||\r\n        target.tagName === 'TEXTAREA' ||\r\n        target.isContentEditable);\r\n}\n\nexport { ElementHold, HOLD_EVENT_TYPE, KeyboardKeyHold };\n","// Adapted from original GLTF 1.0 Loader in three.js r86\r\n// https://github.com/mrdoob/three.js/blob/r86/examples/js/loaders/GLTFLoader.js\r\n\r\nimport * as THREE from 'three';\r\n\r\n\r\nconst FS_GLSL = \"precision highp float; const float INV_PI = 0.31830988618; const float PI = 3.141592654; const float _RefractiveIndex = 1.2; const float environmentStrength = 1.5; varying vec3 v_normal; varying vec3 v_position; varying vec3 v_binormal; varying vec3 v_tangent; uniform vec3 u_color; uniform float u_metallic; uniform float u_roughness; uniform vec3 u_light0Pos; uniform vec3 u_light0Color; uniform vec3 u_light1Pos; uniform vec3 u_light1Color; uniform mat4 u_modelMatrix; uniform sampler2D u_reflectionCube; uniform sampler2D u_reflectionCubeBlur; const float u_noiseIntensity = 0.015; const float colorNoiseAmount = 0.015; const float noiseScale = 700.0; uniform vec3 cameraPosition; // Noise functions from https://github.com/ashima/webgl-noise // Used under the MIT license - license text in MITLICENSE // Copyright (C) 2011 by Ashima Arts (Simplex noise) // Copyright (C) 2011-2016 by Stefan Gustavson (Classic noise and others) vec3 mod289(vec3 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; } vec4 mod289(vec4 x) { return x - floor(x * (1.0 / 289.0)) * 289.0; } vec4 permute(vec4 x) { return mod289(((x*34.0)+1.0)*x); } vec4 taylorInvSqrt(vec4 r) { return 1.79284291400159 - 0.85373472095314 * r; } float snoise(vec3 v, out vec3 gradient) { const vec2 C = vec2(1.0/6.0, 1.0/3.0) ; const vec4 D = vec4(0.0, 0.5, 1.0, 2.0); // First corner vec3 i = floor(v + dot(v, C.yyy) ); vec3 x0 = v - i + dot(i, C.xxx) ; // Other corners vec3 g = step(x0.yzx, x0.xyz); vec3 l = 1.0 - g; vec3 i1 = min( g.xyz, l.zxy ); vec3 i2 = max( g.xyz, l.zxy ); // x0 = x0 - 0.0 + 0.0 * C.xxx; // x1 = x0 - i1 + 1.0 * C.xxx; // x2 = x0 - i2 + 2.0 * C.xxx; // x3 = x0 - 1.0 + 3.0 * C.xxx; vec3 x1 = x0 - i1 + C.xxx; vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y vec3 x3 = x0 - D.yyy; // -1.0+3.0*C.x = -0.5 = -D.y // Permutations i = mod289(i); vec4 p = permute( permute( permute( i.z + vec4(0.0, i1.z, i2.z, 1.0 )) + i.y + vec4(0.0, i1.y, i2.y, 1.0 )) + i.x + vec4(0.0, i1.x, i2.x, 1.0 )); // Gradients: 7x7 points over a square, mapped onto an octahedron. // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294) float n_ = 0.142857142857; // 1.0/7.0 vec3 ns = n_ * D.wyz - D.xzx; vec4 j = p - 49.0 * floor(p * ns.z * ns.z); // mod(p,7*7) vec4 x_ = floor(j * ns.z); vec4 y_ = floor(j - 7.0 * x_ ); // mod(j,N) vec4 x = x_ *ns.x + ns.yyyy; vec4 y = y_ *ns.x + ns.yyyy; vec4 h = 1.0 - abs(x) - abs(y); vec4 b0 = vec4( x.xy, y.xy ); vec4 b1 = vec4( x.zw, y.zw ); //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0; //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0; vec4 s0 = floor(b0)*2.0 + 1.0; vec4 s1 = floor(b1)*2.0 + 1.0; vec4 sh = -step(h, vec4(0.0)); vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ; vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ; vec3 p0 = vec3(a0.xy,h.x); vec3 p1 = vec3(a0.zw,h.y); vec3 p2 = vec3(a1.xy,h.z); vec3 p3 = vec3(a1.zw,h.w); //Normalise gradients vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3))); p0 *= norm.x; p1 *= norm.y; p2 *= norm.z; p3 *= norm.w; // Mix final noise value vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0); vec4 m2 = m * m; vec4 m4 = m2 * m2; vec4 pdotx = vec4(dot(p0,x0), dot(p1,x1), dot(p2,x2), dot(p3,x3)); // Determine noise gradient vec4 temp = m2 * m * pdotx; gradient = -8.0 * (temp.x * x0 + temp.y * x1 + temp.z * x2 + temp.w * x3); gradient += m4.x * p0 + m4.y * p1 + m4.z * p2 + m4.w * p3; gradient *= 42.0; return 42.0 * dot(m4, pdotx); } // End of noise code float GGX(float nDotH, float roughness2) { float nDotH2 = nDotH * nDotH; float alpha = nDotH2 * roughness2 + 1.0 - nDotH2; float denominator = PI * alpha * alpha; return (nDotH2 > 0.0 ? 1.0 : 0.0) * roughness2 / denominator; } float BlinnPhongNDF(float nDotH) { float exponent = (2.0 / (u_roughness * u_roughness) - 2.0); float coeff = 1.0 / (PI * u_roughness * u_roughness); return coeff * pow(nDotH, exponent); } float CT_GeoAtten(float nDotV, float nDotH, float vDotH, float nDotL, float lDotH) { float a = (2.0 * nDotH * nDotV) / vDotH; float b = (2.0 * nDotH * nDotL) / lDotH; return min(1.0, min(a, b)); } float GeoAtten(float nDotV) { float c = nDotV / (u_roughness * sqrt(1.0 - nDotV * nDotV)); return c >= 1.6 ? 1.0 : (3.535 * c + 2.181 * c * c) / (1.0 + 2.276 * c + 2.577 * c * c); } vec3 evaluateFresnelSchlick(float vDotH, vec3 f0) { return f0 + (1.0 - f0) * pow(1.0 - vDotH, 5.0); } float saturate(float value) { return clamp(value, 0.0, 1.0); } vec3 saturate(vec3 value) { return clamp(value, 0.0, 1.0); } mat3 transpose(mat3 inMat) { return mat3(inMat[0][0], inMat[0][1], inMat[0][2], inMat[1][0], inMat[1][1], inMat[1][2], inMat[2][0], inMat[2][1], inMat[2][2]); } void generatePapercraftColorNormal(vec3 normal, vec3 tangent, vec3 binormal, vec3 noisePos, inout vec4 outColorMult, inout vec3 outNormal) { mat3 tangentToObject; tangentToObject[0] = vec3(tangent.x, tangent.y, tangent.z); tangentToObject[1] = vec3(binormal.x, binormal.y, binormal.z); tangentToObject[2] = vec3(normal.x, normal.y, normal.z); mat3 objectToTangent = transpose(tangentToObject); vec3 intensificator = vec3(u_noiseIntensity, u_noiseIntensity, 1.0); vec3 tangentPos = objectToTangent * noisePos; vec3 gradient = vec3(0.0); float noiseOut = snoise(tangentPos * noiseScale, gradient); vec3 tangentSpaceNormal = normalize(intensificator * vec3(gradient.xy, 1.0)); outNormal = tangentToObject * tangentSpaceNormal; outColorMult = vec4(vec3(1.0 + noiseOut * colorNoiseAmount), 1.0); } void evaluatePBRLight( vec3 materialColor, vec3 lightColor, float nDotL, float nDotV, float nDotH, float vDotH, float lDotH, inout vec3 diffuseOut, inout vec3 specularOut, inout vec3 debug, float specAmount) { vec3 diffuse = INV_PI * nDotL * lightColor; vec3 d = vec3(GGX(nDotH, u_roughness * u_roughness)); vec3 g = vec3(CT_GeoAtten(nDotV, nDotH, vDotH, nDotL, lDotH)); vec3 f0 = vec3(abs((1.0 - _RefractiveIndex) / (1.0 + _RefractiveIndex))); f0 = f0 * f0; f0 = mix(f0, materialColor, u_metallic); vec3 f = evaluateFresnelSchlick(vDotH, f0); diffuseOut = diffuseOut + (1.0 - saturate(f)) * (1.0 - u_metallic) * lightColor * diffuse; specularOut = specularOut + specAmount * lightColor * saturate((d * g * f) / saturate(4.0 * saturate(nDotH) * nDotV)); debug = saturate(g); } void setParams(vec3 worldPosition, inout vec3 normal, inout vec3 view, inout float nDotV) { normal = normalize(normal); view = normalize(cameraPosition - worldPosition); nDotV = saturate(dot(normal, view)); } void setLightParams(vec3 lightPosition, vec3 worldPosition, vec3 V, vec3 N, inout vec3 L, inout vec3 H, inout float nDotL, inout float nDotH, inout float vDotH, inout float lDotH) { L = normalize(lightPosition - worldPosition); H = normalize(L + V); nDotL = saturate(dot(N, L)); nDotH = saturate(dot(N, H)); vDotH = saturate(dot(V, H)); lDotH = saturate(dot(L, H)); } void main() { vec3 materialColor = u_color; vec4 outColorMult; vec3 normalisedNormal = v_normal; vec3 normalisedView; float nDotV; generatePapercraftColorNormal(v_normal, v_tangent, v_binormal, v_position, outColorMult, normalisedNormal); setParams(v_position, normalisedNormal, normalisedView, nDotV); vec3 normalisedLight; vec3 normalisedHalf; float nDotL; float nDotH; float vDotH; float lDotH; setLightParams(u_light0Pos, v_position, normalisedView, normalisedNormal, normalisedLight, normalisedHalf, nDotL, nDotH, vDotH, lDotH); vec3 diffuse = vec3(0.0, 0.0, 0.0); vec3 specular = vec3(0.0, 0.0, 0.0); vec3 debug = vec3(0.0, 0.0, 0.0); evaluatePBRLight(materialColor * outColorMult.rgb, u_light0Color, nDotL, nDotV, nDotH, vDotH, lDotH, diffuse, specular, debug, 1.0); vec3 ambient = (1.0 - u_metallic) * materialColor * outColorMult.rgb * 0.0; setLightParams(u_light1Pos, v_position, normalisedView, normalisedNormal, normalisedLight, normalisedHalf, nDotL, nDotH, vDotH, lDotH); evaluatePBRLight(materialColor * outColorMult.rgb, u_light1Color, nDotL, nDotV, nDotH, vDotH, lDotH, diffuse, specular, debug, 1.0); vec3 R = -reflect(normalisedView, normalisedNormal); setLightParams(v_position + R, v_position, normalisedView, normalisedNormal, normalisedLight, normalisedHalf, nDotL, nDotH, vDotH, lDotH); vec3 envColor = mix(materialColor, vec3(1.0, 1.0, 1.0), 0.7); evaluatePBRLight(materialColor * outColorMult.rgb, envColor * environmentStrength, nDotL, nDotV, nDotH, vDotH, lDotH, diffuse, specular, debug, 0.25); gl_FragColor = vec4(specular + diffuse * materialColor, 1.0); }\";\r\nconst VS_GLSL = \"uniform mat4 u_modelViewMatrix; uniform mat4 u_projectionMatrix; uniform mat3 u_normalMatrix; attribute vec3 a_position; attribute vec3 a_normal; varying vec3 v_normal; varying vec3 v_position; varying vec3 v_binormal; varying vec3 v_tangent; void main() { vec3 objPosition = a_position; vec4 worldPosition = vec4(objPosition, 1.0); // Our object space has no rotation and no scale, so this is fine. v_normal = a_normal; v_position = worldPosition.xyz; // Looking for an arbitrary vector that isn't parallel to the normal. Avoiding axis directions should improve our chances. vec3 arbitraryVector = normalize(vec3(0.42, -0.21, 0.15)); vec3 alternateArbitraryVector = normalize(vec3(0.43, 1.5, 0.15)); // If arbitrary vector is parallel to the normal, choose a different one. v_tangent = normalize(abs(dot(v_normal, arbitraryVector)) < 1.0 ? cross(v_normal, arbitraryVector) : cross(v_normal, alternateArbitraryVector)); v_binormal = normalize(cross(v_normal, v_tangent)); gl_Position = u_projectionMatrix * u_modelViewMatrix * vec4(objPosition, 1.0); }\";\r\nconst GEMFS_GLSL = \"precision highp float; const float INV_PI = 0.31830988618; const float PI = 3.141592654; const float _RefractiveIndex = 1.2; const float _Metallic = 0.5; const float environmentStrength = 1.5; varying vec3 v_normal; varying vec3 v_position; varying float v_fresnel; uniform sampler2D u_gem; uniform vec4 u_color; uniform float u_metallic; uniform float u_roughness; uniform vec3 u_light0Pos; uniform vec3 u_light0Color; uniform vec3 u_light1Pos; uniform vec3 u_light1Color; uniform vec3 cameraPosition; float GGX(float nDotH, float roughness2) { float nDotH2 = nDotH * nDotH; float alpha = nDotH2 * roughness2 + 1.0 - nDotH2; float denominator = PI * alpha * alpha; return (nDotH2 > 0.0 ? 1.0 : 0.0) * roughness2 / denominator; } float BlinnPhongNDF(float nDotH) { float exponent = (2.0 / (u_roughness * u_roughness) - 2.0); float coeff = 1.0 / (PI * u_roughness * u_roughness); return coeff * pow(nDotH, exponent); } float CT_GeoAtten(float nDotV, float nDotH, float vDotH, float nDotL, float lDotH) { float a = (2.0 * nDotH * nDotV) / vDotH; float b = (2.0 * nDotH * nDotL) / lDotH; return min(1.0, min(a, b)); } float GeoAtten(float nDotV) { float c = nDotV / (u_roughness * sqrt(1.0 - nDotV * nDotV)); return c >= 1.6 ? 1.0 : (3.535 * c + 2.181 * c * c) / (1.0 + 2.276 * c + 2.577 * c * c); } vec3 evaluateFresnelSchlick(float vDotH, vec3 f0) { return f0 + (1.0 - f0) * pow(1.0 - vDotH, 5.0); } float saturate(float value) { return clamp(value, 0.0, 1.0); } vec3 saturate(vec3 value) { return clamp(value, 0.0, 1.0); } mat3 transpose(mat3 inMat) { return mat3(inMat[0][0], inMat[0][1], inMat[0][2], inMat[1][0], inMat[1][1], inMat[1][2], inMat[2][0], inMat[2][1], inMat[2][2]); } void evaluatePBRLight( vec3 materialColor, vec3 lightColor, float nDotL, float nDotV, float nDotH, float vDotH, float lDotH, inout vec3 diffuseOut, inout vec3 specularOut, inout vec3 debug, float specAmount) { vec3 diffuse = INV_PI * nDotL * lightColor; vec3 d = vec3(GGX(nDotH, u_roughness * u_roughness)); vec3 g = vec3(CT_GeoAtten(nDotV, nDotH, vDotH, nDotL, lDotH)); vec3 f0 = vec3(abs((1.0 - _RefractiveIndex) / (1.0 + _RefractiveIndex))); f0 = f0 * f0; f0 = mix(f0, materialColor, u_metallic); vec3 f = evaluateFresnelSchlick(vDotH, f0); diffuseOut = diffuseOut + (1.0 - saturate(f)) * (1.0 - u_metallic) * lightColor * diffuse; specularOut = specularOut + specAmount * lightColor * saturate((d * g * f) / saturate(4.0 * saturate(nDotH) * nDotV)); debug = saturate(g); } void setParams(vec3 worldPosition, inout vec3 normal, inout vec3 view, inout float nDotV) { normal = normalize(normal); view = normalize(cameraPosition - worldPosition); nDotV = saturate(dot(normal, view)); } void setLightParams(vec3 lightPosition, vec3 worldPosition, vec3 V, vec3 N, inout vec3 L, inout vec3 H, inout float nDotL, inout float nDotH, inout float vDotH, inout float lDotH) { L = normalize(lightPosition - worldPosition); H = normalize(L + V); nDotL = saturate(dot(N, L)); nDotH = saturate(dot(N, H)); vDotH = saturate(dot(V, H)); lDotH = saturate(dot(L, H)); } void main() { vec3 materialColor = u_color.rgb; vec3 normalisedNormal = v_normal; vec3 normalisedView = cameraPosition - v_position; float nDotV; setParams(v_position, normalisedNormal, normalisedView, nDotV); vec3 normalisedLight; vec3 normalisedHalf; float nDotL; float nDotH; float vDotH; float lDotH; setLightParams(u_light0Pos, v_position, normalisedView, normalisedNormal, normalisedLight, normalisedHalf, nDotL, nDotH, vDotH, lDotH); vec3 diffuse = vec3(0.0, 0.0, 0.0); vec3 specular = vec3(0.0, 0.0, 0.0); vec3 debug = vec3(0.0, 0.0, 0.0); evaluatePBRLight(materialColor, u_light0Color, nDotL, nDotV, nDotH, vDotH, lDotH, diffuse, specular, debug, 1.0); vec3 ambient = materialColor * 0.3; setLightParams(u_light1Pos, v_position, normalisedView, normalisedNormal, normalisedLight, normalisedHalf, nDotL, nDotH, vDotH, lDotH); evaluatePBRLight(materialColor, u_light1Color, nDotL, nDotV, nDotH, vDotH, lDotH, diffuse, specular, debug, 1.0); vec3 R = reflect(normalisedView, normalisedNormal); vec4 color = vec4(texture2D( u_gem, vec2(0.5*(INV_PI*atan(R.x, R.z)+1.0),0.5*(R.y+1.0)) ).rgb, u_color.a); setLightParams(v_position + R, v_position, normalisedView, normalisedNormal, normalisedLight, normalisedHalf, nDotL, nDotH, vDotH, lDotH); vec3 envColor = mix(materialColor, vec3(1.0, 1.0, 1.0), 0.5); evaluatePBRLight(materialColor, envColor * environmentStrength, nDotL, nDotV, nDotH, vDotH, lDotH, diffuse, specular, debug, 0.25); gl_FragColor = vec4(ambient + specular + diffuse * color.rgb, 1.0); } \"\r\nconst GEMVS_GLSL = \"uniform mat4 u_modelViewMatrix; uniform mat4 u_projectionMatrix; uniform mat3 u_normalMatrix; attribute vec3 a_position; attribute vec3 a_normal; varying vec3 v_normal; varying vec3 v_position; void main() { vec4 worldPosition = vec4(a_position, 1.0); v_normal = a_normal; v_position = worldPosition.xyz; gl_Position = u_projectionMatrix * u_modelViewMatrix * vec4(a_position, 1.0); } \"\r\nconst GLASSFS_GLSL = \"precision highp float; const float INV_PI = 0.31830988618; const float PI = 3.141592654; const float _RefractiveIndex = 1.2; // Always default to Olive Oil. const float _Metallic = 0.5; const float environmentStrength = 1.0; varying vec3 v_normal; varying vec3 v_position; uniform vec4 u_color; uniform float u_metallic; uniform float u_roughness; uniform vec3 u_light0Pos; uniform vec3 u_light0Color; uniform vec3 u_light1Pos; uniform vec3 u_light1Color; uniform vec3 cameraPosition; // camera position world float GGX(float nDotH, float roughness2) { float nDotH2 = nDotH * nDotH; float alpha = nDotH2 * roughness2 + 1.0 - nDotH2; float denominator = PI * alpha * alpha; return (nDotH2 > 0.0 ? 1.0 : 0.0) * roughness2 / denominator; } float BlinnPhongNDF(float nDotH) { float exponent = (2.0 / (u_roughness * u_roughness) - 2.0); float coeff = 1.0 / (PI * u_roughness * u_roughness); return coeff * pow(nDotH, exponent); } float CT_GeoAtten(float nDotV, float nDotH, float vDotH, float nDotL, float lDotH) { float a = (2.0 * nDotH * nDotV) / vDotH; float b = (2.0 * nDotH * nDotL) / lDotH; return min(1.0, min(a, b)); } float GeoAtten(float nDotV) { float c = nDotV / (u_roughness * sqrt(1.0 - nDotV * nDotV)); return c >= 1.6 ? 1.0 : (3.535 * c + 2.181 * c * c) / (1.0 + 2.276 * c + 2.577 * c * c); } vec3 evaluateFresnelSchlick(float vDotH, vec3 f0) { return f0 + (1.0 - f0) * pow(1.0 - vDotH, 5.0); } float saturate(float value) { return clamp(value, 0.0, 1.0); } vec3 saturate(vec3 value) { return clamp(value, 0.0, 1.0); } mat3 transpose(mat3 inMat) { return mat3(inMat[0][0], inMat[0][1], inMat[0][2], inMat[1][0], inMat[1][1], inMat[1][2], inMat[2][0], inMat[2][1], inMat[2][2]); } void evaluatePBRLight( vec3 materialColor, vec3 lightColor, float nDotL, float nDotV, float nDotH, float vDotH, float lDotH, inout vec3 diffuseOut, inout vec3 specularOut, inout vec3 debug, float specAmount) { vec3 diffuse = INV_PI * nDotL * lightColor; vec3 d = vec3(GGX(nDotH, u_roughness * u_roughness)); vec3 g = vec3(CT_GeoAtten(nDotV, nDotH, vDotH, nDotL, lDotH)); vec3 f0 = vec3(abs((1.0 - _RefractiveIndex) / (1.0 + _RefractiveIndex))); f0 = f0 * f0; f0 = mix(f0, materialColor, u_metallic); vec3 f = evaluateFresnelSchlick(vDotH, f0); diffuseOut = diffuseOut + (1.0 - saturate(f)) * (1.0 - u_metallic) * lightColor * diffuse; specularOut = specularOut + specAmount * lightColor * saturate((d * g * f) / saturate(4.0 * saturate(nDotH) * nDotV)); debug = saturate(g); } void setParams(vec3 worldPosition, inout vec3 normal, inout vec3 view, inout float nDotV) { normal = normalize(normal); view = normalize(cameraPosition - worldPosition); nDotV = saturate(dot(normal, view)); } void setLightParams(vec3 lightPosition, vec3 worldPosition, vec3 V, vec3 N, inout vec3 L, inout vec3 H, inout float nDotL, inout float nDotH, inout float vDotH, inout float lDotH) { L = normalize(lightPosition - worldPosition); H = normalize(L + V); nDotL = saturate(dot(N, L)); nDotH = saturate(dot(N, H)); vDotH = saturate(dot(V, H)); lDotH = saturate(dot(L, H)); } void main() { vec3 materialColor = u_color.rgb; vec4 outColorMult; vec3 normalisedNormal = v_normal; vec3 normalisedView; float nDotV; setParams(v_position, normalisedNormal, normalisedView, nDotV); vec3 normalisedLight; vec3 normalisedHalf; float nDotL; float nDotH; float vDotH; float lDotH; setLightParams(u_light0Pos, v_position, normalisedView, normalisedNormal, normalisedLight, normalisedHalf, nDotL, nDotH, vDotH, lDotH); vec3 diffuse = vec3(0.0, 0.0, 0.0); vec3 specular = vec3(0.0, 0.0, 0.0); vec3 debug = vec3(0.0, 0.0, 0.0); evaluatePBRLight(materialColor, u_light0Color, nDotL, nDotV, nDotH, vDotH, lDotH, diffuse, specular, debug, 1.0); vec3 ambient = materialColor * 0.3; setLightParams(u_light1Pos, v_position, normalisedView, normalisedNormal, normalisedLight, normalisedHalf, nDotL, nDotH, vDotH, lDotH); evaluatePBRLight(materialColor, u_light1Color, nDotL, nDotV, nDotH, vDotH, lDotH, diffuse, specular, debug, 1.0); vec3 R = -reflect(normalisedView, normalisedNormal); setLightParams(v_position + R, v_position, normalisedView, normalisedNormal, normalisedLight, normalisedHalf, nDotL, nDotH, vDotH, lDotH); vec3 envColor = mix(materialColor, vec3(1.0, 1.0, 1.0), 0.5); evaluatePBRLight(materialColor, envColor * environmentStrength, nDotL, nDotV, nDotH, vDotH, lDotH, diffuse, specular, debug, 0.2); gl_FragColor = vec4(ambient + specular + diffuse * materialColor, u_color.a); } \"\r\nconst GLASSVS_GLSL = \"uniform mat4 u_modelViewMatrix; uniform mat4 u_projectionMatrix; uniform mat3 u_normalMatrix; attribute vec3 a_position; attribute vec3 a_normal; varying vec3 v_normal; varying vec3 v_position; void main() { vec4 worldPosition = vec4(a_position, 1.0); // Our object space has no rotation and no scale, so this is fine. v_normal = a_normal; v_position = worldPosition.xyz; gl_Position = u_projectionMatrix * u_modelViewMatrix * vec4(a_position, 1.0); } \"\r\n\r\nconst { Loader: ThreeLoader } = THREE;\r\nexport class LegacyGLTFLoader extends ThreeLoader {\r\n    constructor(manager, assetBaseUrl) {\r\n        super(manager);\r\n        this.assetBaseUrl = assetBaseUrl;\r\n    }\r\n\r\n    load ( url, onLoad, onProgress, onError ) {\r\n\r\n        var scope = this;\r\n\r\n        var resourcePath;\r\n\r\n        if ( this.resourcePath !== '' ) {\r\n\r\n            resourcePath = this.resourcePath;\r\n\r\n        } else if ( this.path !== '' ) {\r\n\r\n            resourcePath = this.path;\r\n\r\n        } else {\r\n\r\n            resourcePath = THREE.LoaderUtils.extractUrlBase( url );\r\n\r\n        }\r\n        var loader = new THREE.FileLoader( scope.manager );\r\n\r\n        loader.setPath( this.path );\r\n        loader.setResponseType( 'arraybuffer' );\r\n\r\n        loader.load( url, function ( data ) {\r\n\r\n            scope.parse( data, resourcePath, onLoad );\r\n\r\n        }, onProgress, onError );\r\n\r\n    }\r\n\r\n    parse ( data, path, callback ) {\r\n\r\n        var content;\r\n        var extensions = {};\r\n\r\n        var magic = new TextDecoder( ).decode( new Uint8Array( data, 0, 4 ) );\r\n\r\n        if ( magic === BINARY_EXTENSION_HEADER_DEFAULTS.magic ) {\r\n\r\n            extensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\r\n            content = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\r\n\r\n        } else {\r\n\r\n            content = new TextDecoder( ).decode( new Uint8Array( data ) );\r\n\r\n        }\r\n\r\n        var json = JSON.parse( content );\r\n\r\n        if ( json.extensionsUsed && json.extensionsUsed.indexOf( EXTENSIONS.KHR_MATERIALS_COMMON ) >= 0 ) {\r\n\r\n            extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ] = new GLTFMaterialsCommonExtension( json );\r\n\r\n        }\r\n\r\n        var parser = new GLTFParser( json, extensions, {\r\n\r\n            crossOrigin: this.crossOrigin,\r\n            manager: this.manager,\r\n            path: path || this.resourcePath || '',\r\n            assetBaseUrl: this.assetBaseUrl\r\n        } );\r\n\r\n        parser.parse( function ( scene, scenes, cameras, animations ) {\r\n\r\n            var glTF = {\r\n                \"scene\": scene,\r\n                \"scenes\": scenes,\r\n                \"cameras\": cameras,\r\n                \"animations\": animations\r\n            };\r\n\r\n            callback( glTF );\r\n\r\n        } );\r\n    }\r\n}\r\n\r\nfunction GLTFRegistry() {\r\n\r\n    var objects = {};\r\n\r\n    return\t{\r\n\r\n        get: function ( key ) {\r\n\r\n            return objects[ key ];\r\n\r\n        },\r\n\r\n        add: function ( key, object ) {\r\n\r\n            objects[ key ] = object;\r\n\r\n        },\r\n\r\n        remove: function ( key ) {\r\n\r\n            delete objects[ key ];\r\n\r\n        },\r\n\r\n        removeAll: function () {\r\n\r\n            objects = {};\r\n\r\n        },\r\n\r\n        update: function ( scene, camera ) {\r\n\r\n            for ( var name in objects ) {\r\n\r\n                var object = objects[ name ];\r\n\r\n                if ( object.update ) {\r\n\r\n                    object.update( scene, camera );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    };\r\n\r\n}\r\n\r\nclass GLTFShader {\r\n    constructor ( targetNode, allNodes ) {\r\n\r\n        var boundUniforms = {};\r\n\r\n        // bind each uniform to its source node\r\n\r\n        var uniforms = targetNode.material.uniforms;\r\n\r\n        for ( var uniformId in uniforms ) {\r\n\r\n            var uniform = uniforms[ uniformId ];\r\n\r\n            if ( uniform.semantic ) {\r\n\r\n                var sourceNodeRef = uniform.node;\r\n\r\n                var sourceNode = targetNode;\r\n\r\n                if ( sourceNodeRef ) {\r\n\r\n                    sourceNode = allNodes[ sourceNodeRef ];\r\n\r\n                }\r\n\r\n                boundUniforms[ uniformId ] = {\r\n                    semantic: uniform.semantic,\r\n                    sourceNode: sourceNode,\r\n                    targetNode: targetNode,\r\n                    uniform: uniform\r\n                };\r\n\r\n            }\r\n\r\n        }\r\n\r\n        this.boundUniforms = boundUniforms;\r\n        this._m4 = new THREE.Matrix4();\r\n    }\r\n\r\n    update ( scene, camera ) {\r\n\r\n        var boundUniforms = this.boundUniforms;\r\n\r\n        for ( var name in boundUniforms ) {\r\n\r\n            var boundUniform = boundUniforms[ name ];\r\n\r\n            switch ( boundUniform.semantic ) {\r\n\r\n                case \"MODELVIEW\":\r\n\r\n                    var m4 = boundUniform.uniform.value;\r\n                    m4.multiplyMatrices( camera.matrixWorldInverse, boundUniform.sourceNode.matrixWorld );\r\n                    break;\r\n\r\n                case \"MODELVIEWINVERSETRANSPOSE\":\r\n\r\n                    var m3 = boundUniform.uniform.value;\r\n                    this._m4.multiplyMatrices( camera.matrixWorldInverse, boundUniform.sourceNode.matrixWorld );\r\n                    m3.getNormalMatrix( this._m4 );\r\n                    break;\r\n\r\n                case \"PROJECTION\":\r\n\r\n                    var m4 = boundUniform.uniform.value;\r\n                    m4.copy( camera.projectionMatrix );\r\n                    break;\r\n\r\n                case \"JOINTMATRIX\":\r\n\r\n                    var m4v = boundUniform.uniform.value;\r\n\r\n                    for ( var mi = 0; mi < m4v.length; mi ++ ) {\r\n\r\n                        // So it goes like this:\r\n                        // SkinnedMesh world matrix is already baked into MODELVIEW;\r\n                        // transform joints to local space,\r\n                        // then transform using joint's inverse\r\n                        m4v[ mi ]\r\n                            .getInverse( boundUniform.sourceNode.matrixWorld )\r\n                            .multiply( boundUniform.targetNode.skeleton.bones[ mi ].matrixWorld )\r\n                            .multiply( boundUniform.targetNode.skeleton.boneInverses[ mi ] )\r\n                            .multiply( boundUniform.targetNode.bindMatrix );\r\n\r\n                    }\r\n\r\n                    break;\r\n\r\n                default :\r\n\r\n                    console.warn( \"Unhandled shader semantic: \" + boundUniform.semantic );\r\n                    break;\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nvar EXTENSIONS = {\r\n    KHR_BINARY_GLTF: 'KHR_binary_glTF',\r\n    KHR_MATERIALS_COMMON: 'KHR_materials_common'\r\n};\r\n\r\nfunction GLTFMaterialsCommonExtension( json ) {\r\n\r\n    this.name = EXTENSIONS.KHR_MATERIALS_COMMON;\r\n\r\n    this.lights = {};\r\n\r\n    var extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ] ) || {};\r\n    var lights = extension.lights || {};\r\n\r\n    for ( var lightId in lights ) {\r\n\r\n        var light = lights[ lightId ];\r\n        var lightNode;\r\n\r\n        var lightParams = light[ light.type ];\r\n        var color = new THREE.Color().fromArray( lightParams.color );\r\n\r\n        switch ( light.type ) {\r\n\r\n            case \"directional\":\r\n                lightNode = new THREE.DirectionalLight( color );\r\n                lightNode.position.set( 0, 0, 1 );\r\n                break;\r\n\r\n            case \"point\":\r\n                lightNode = new THREE.PointLight( color );\r\n                break;\r\n\r\n            case \"spot\":\r\n                lightNode = new THREE.SpotLight( color );\r\n                lightNode.position.set( 0, 0, 1 );\r\n                break;\r\n\r\n            case \"ambient\":\r\n                lightNode = new THREE.AmbientLight( color );\r\n                break;\r\n\r\n        }\r\n\r\n        if ( lightNode ) {\r\n\r\n            this.lights[ lightId ] = lightNode;\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nvar BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\r\n\r\nvar BINARY_EXTENSION_HEADER_DEFAULTS = { magic: 'glTF', version: 1, contentFormat: 0 };\r\n\r\nvar BINARY_EXTENSION_HEADER_LENGTH = 20;\r\n\r\nclass GLTFBinaryExtension {\r\n    constructor( data ) {\r\n\r\n        this.name = EXTENSIONS.KHR_BINARY_GLTF;\r\n\r\n        var headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\r\n\r\n        var header = {\r\n            magic: new TextDecoder( ).decode( new Uint8Array( data.slice( 0, 4 ) ) ),\r\n            version: headerView.getUint32( 4, true ),\r\n            length: headerView.getUint32( 8, true ),\r\n            contentLength: headerView.getUint32( 12, true ),\r\n            contentFormat: headerView.getUint32( 16, true )\r\n        };\r\n\r\n        for ( var key in BINARY_EXTENSION_HEADER_DEFAULTS ) {\r\n\r\n            var value = BINARY_EXTENSION_HEADER_DEFAULTS[ key ];\r\n\r\n            if ( header[ key ] !== value ) {\r\n\r\n                throw new Error( 'Unsupported glTF-Binary header: Expected \"%s\" to be \"%s\".', key, value );\r\n\r\n            }\r\n\r\n        }\r\n\r\n        var contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH, header.contentLength );\r\n\r\n        this.header = header;\r\n        this.content = new TextDecoder( ).decode( contentArray );\r\n        this.body = data.slice( BINARY_EXTENSION_HEADER_LENGTH + header.contentLength, header.length );\r\n    }\r\n\r\n    loadShader ( shader, bufferViews ) {\r\n\r\n        var bufferView = bufferViews[ shader.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].bufferView ];\r\n        var array = new Uint8Array( bufferView );\r\n\r\n        return new TextDecoder( ).decode( array );\r\n\r\n    };\r\n}\r\n\r\nvar WEBGL_CONSTANTS = {\r\n    FLOAT: 5126,\r\n    //FLOAT_MAT2: 35674,\r\n    FLOAT_MAT3: 35675,\r\n    FLOAT_MAT4: 35676,\r\n    FLOAT_VEC2: 35664,\r\n    FLOAT_VEC3: 35665,\r\n    FLOAT_VEC4: 35666,\r\n    LINEAR: 9729,\r\n    REPEAT: 10497,\r\n    SAMPLER_2D: 35678,\r\n    TRIANGLES: 4,\r\n    LINES: 1,\r\n    UNSIGNED_BYTE: 5121,\r\n    UNSIGNED_SHORT: 5123,\r\n\r\n    VERTEX_SHADER: 35633,\r\n    FRAGMENT_SHADER: 35632\r\n};\r\n\r\nvar WEBGL_TYPE = {\r\n    5126: Number,\r\n    //35674: Matrix2,\r\n    35675: THREE.Matrix3,\r\n    35676: THREE.Matrix4,\r\n    35664: THREE.Vector2,\r\n    35665: THREE.Vector3,\r\n    35666: THREE.Vector4,\r\n    35678: THREE.Texture\r\n};\r\n\r\nvar WEBGL_COMPONENT_TYPES = {\r\n    5120: Int8Array,\r\n    5121: Uint8Array,\r\n    5122: Int16Array,\r\n    5123: Uint16Array,\r\n    5125: Uint32Array,\r\n    5126: Float32Array\r\n};\r\n\r\nvar WEBGL_FILTERS = {\r\n    9728: THREE.NearestFilter,\r\n    9729: THREE.LinearFilter,\r\n    9984: THREE.NearestMipmapNearestFilter,\r\n    9985: THREE.LinearMipmapNearestFilter,\r\n    9986: THREE.NearestMipmapLinearFilter,\r\n    9987: THREE.LinearMipmapLinearFilter\r\n};\r\n\r\nvar WEBGL_WRAPPINGS = {\r\n    33071: THREE.ClampToEdgeWrapping,\r\n    33648: THREE.MirroredRepeatWrapping,\r\n    10497: THREE.RepeatWrapping\r\n};\r\n\r\nvar WEBGL_TEXTURE_FORMATS = {\r\n    6406: THREE.AlphaFormat,\r\n    6407: THREE.RGBFormat,\r\n    6408: THREE.RGBAFormat\r\n};\r\n\r\nvar WEBGL_TEXTURE_DATATYPES = {\r\n    5121: THREE.UnsignedByteType,\r\n    32819: THREE.UnsignedShort4444Type,\r\n    32820: THREE.UnsignedShort5551Type\r\n};\r\n\r\nvar WEBGL_SIDES = {\r\n    1028: THREE.BackSide, // Culling front\r\n    1029: THREE.FrontSide // Culling back\r\n    //1032: NoSide   // Culling front and back, what to do?\r\n};\r\n\r\nvar WEBGL_DEPTH_FUNCS = {\r\n    512: THREE.NeverDepth,\r\n    513: THREE.LessDepth,\r\n    514: THREE.EqualDepth,\r\n    515: THREE.LessEqualDepth,\r\n    516: THREE.GreaterEqualDepth,\r\n    517: THREE.NotEqualDepth,\r\n    518: THREE.GreaterEqualDepth,\r\n    519: THREE.AlwaysDepth\r\n};\r\n\r\nvar WEBGL_BLEND_EQUATIONS = {\r\n    32774: THREE.AddEquation,\r\n    32778: THREE.SubtractEquation,\r\n    32779: THREE.ReverseSubtractEquation\r\n};\r\n\r\nvar WEBGL_BLEND_FUNCS = {\r\n    0: THREE.ZeroFactor,\r\n    1: THREE.OneFactor,\r\n    768: THREE.SrcColorFactor,\r\n    769: THREE.OneMinusSrcColorFactor,\r\n    770: THREE.SrcAlphaFactor,\r\n    771: THREE.OneMinusSrcAlphaFactor,\r\n    772: THREE.DstAlphaFactor,\r\n    773: THREE.OneMinusDstAlphaFactor,\r\n    774: THREE.DstColorFactor,\r\n    775: THREE.OneMinusDstColorFactor,\r\n    776: THREE.SrcAlphaSaturateFactor\r\n    // The followings are not supported by js yet\r\n    //32769: CONSTANT_COLOR,\r\n    //32770: ONE_MINUS_CONSTANT_COLOR,\r\n    //32771: CONSTANT_ALPHA,\r\n    //32772: ONE_MINUS_CONSTANT_COLOR\r\n};\r\n\r\nvar WEBGL_TYPE_SIZES = {\r\n    'SCALAR': 1,\r\n    'VEC2': 2,\r\n    'VEC3': 3,\r\n    'VEC4': 4,\r\n    'MAT2': 4,\r\n    'MAT3': 9,\r\n    'MAT4': 16\r\n};\r\n\r\nvar PATH_PROPERTIES = {\r\n    scale: 'scale',\r\n    translation: 'position',\r\n    rotation: 'quaternion'\r\n};\r\n\r\nvar INTERPOLATION = {\r\n    LINEAR: THREE.InterpolateLinear,\r\n    STEP: THREE.InterpolateDiscrete\r\n};\r\n\r\nvar STATES_ENABLES = {\r\n    2884: 'CULL_FACE',\r\n    2929: 'DEPTH_TEST',\r\n    3042: 'BLEND',\r\n    3089: 'SCISSOR_TEST',\r\n    32823: 'POLYGON_OFFSET_FILL',\r\n    32926: 'SAMPLE_ALPHA_TO_COVERAGE'\r\n};\r\n\r\nfunction _each( object, callback, thisObj ) {\r\n\r\n    if ( ! object ) {\r\n\r\n        return Promise.resolve();\r\n\r\n    }\r\n\r\n    var results;\r\n    var fns = [];\r\n\r\n    if ( Object.prototype.toString.call( object ) === '[object Array]' ) {\r\n\r\n        results = [];\r\n\r\n        var length = object.length;\r\n\r\n        for ( var idx = 0; idx < length; idx ++ ) {\r\n\r\n            var value = callback.call( thisObj || this, object[ idx ], idx );\r\n\r\n            if ( value ) {\r\n\r\n                fns.push( value );\r\n\r\n                if ( value instanceof Promise ) {\r\n\r\n                    value.then( function ( key, value ) {\r\n\r\n                        results[ key ] = value;\r\n\r\n                    }.bind( this, idx ) );\r\n\r\n                } else {\r\n\r\n                    results[ idx ] = value;\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    } else {\r\n\r\n        results = {};\r\n\r\n        for ( var key in object ) {\r\n\r\n            if ( object.hasOwnProperty( key ) ) {\r\n\r\n                var value = callback.call( thisObj || this, object[ key ], key );\r\n\r\n                if ( value ) {\r\n\r\n                    fns.push( value );\r\n\r\n                    if ( value instanceof Promise ) {\r\n\r\n                        value.then( function ( key, value ) {\r\n\r\n                            results[ key ] = value;\r\n\r\n                        }.bind( this, key ) );\r\n\r\n                    } else {\r\n\r\n                        results[ key ] = value;\r\n\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return Promise.all( fns ).then( function () {\r\n\r\n        return results;\r\n\r\n    } );\r\n\r\n}\r\n\r\nfunction resolveURL( url, path ) {\r\n\r\n    // Invalid URL\r\n    if ( typeof url !== 'string' || url === '' )\r\n        return '';\r\n\r\n    // Absolute URL http://,https://,//\r\n    if ( /^(https?:)?\\/\\//i.test( url ) ) {\r\n\r\n        return url;\r\n\r\n    }\r\n\r\n    // Data URI\r\n    if ( /^data:.*,.*$/i.test( url ) ) {\r\n\r\n        return url;\r\n\r\n    }\r\n\r\n    // Blob URL\r\n    if ( /^blob:.*$/i.test( url ) ) {\r\n\r\n        return url;\r\n\r\n    }\r\n\r\n    // Relative URL\r\n    return ( path || '' ) + url;\r\n\r\n}\r\n\r\n// js seems too dependent on attribute names so globally\r\n// replace those in the shader code\r\nfunction replaceTHREEShaderAttributes( shaderText, technique ) {\r\n\r\n    // Expected technique attributes\r\n    var attributes = {};\r\n\r\n    for ( var attributeId in technique.attributes ) {\r\n\r\n        var pname = technique.attributes[ attributeId ];\r\n\r\n        var param = technique.parameters[ pname ];\r\n        var atype = param.type;\r\n        var semantic = param.semantic;\r\n\r\n        attributes[ attributeId ] = {\r\n            type: atype,\r\n            semantic: semantic\r\n        };\r\n\r\n    }\r\n\r\n    // Figure out which attributes to change in technique\r\n\r\n    var shaderParams = technique.parameters;\r\n    var shaderAttributes = technique.attributes;\r\n    var params = {};\r\n\r\n    for ( var attributeId in attributes ) {\r\n\r\n        var pname = shaderAttributes[ attributeId ];\r\n        var shaderParam = shaderParams[ pname ];\r\n        var semantic = shaderParam.semantic;\r\n        if ( semantic ) {\r\n\r\n            params[ attributeId ] = shaderParam;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    for ( var pname in params ) {\r\n\r\n        var param = params[ pname ];\r\n        var semantic = param.semantic;\r\n\r\n        var regEx = new RegExp( \"\\\\b\" + pname + \"\\\\b\", \"g\" );\r\n\r\n        switch ( semantic ) {\r\n\r\n            case \"POSITION\":\r\n\r\n                shaderText = shaderText.replace( regEx, 'position' );\r\n                break;\r\n\r\n            case \"NORMAL\":\r\n\r\n                shaderText = shaderText.replace( regEx, 'normal' );\r\n                break;\r\n\r\n            case 'TEXCOORD_0':\r\n            case 'TEXCOORD0':\r\n            case 'TEXCOORD':\r\n\r\n                shaderText = shaderText.replace( regEx, 'uv' );\r\n                break;\r\n\r\n            case 'TEXCOORD_1':\r\n\r\n                shaderText = shaderText.replace( regEx, 'uv2' );\r\n                break;\r\n\r\n            case 'COLOR_0':\r\n            case 'COLOR0':\r\n            case 'COLOR':\r\n\r\n                shaderText = shaderText.replace( regEx, 'color' );\r\n                break;\r\n\r\n            case \"WEIGHT\":\r\n\r\n                shaderText = shaderText.replace( regEx, 'skinWeight' );\r\n                break;\r\n\r\n            case \"JOINT\":\r\n\r\n                shaderText = shaderText.replace( regEx, 'skinIndex' );\r\n                break;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return shaderText;\r\n\r\n}\r\n\r\nfunction createDefaultMaterial() {\r\n\r\n    return new THREE.MeshPhongMaterial( {\r\n        color: 0x00000,\r\n        emissive: 0x888888,\r\n        specular: 0x000000,\r\n        shininess: 0,\r\n        transparent: false,\r\n        depthTest: true,\r\n        side: THREE.FrontSide\r\n    } );\r\n\r\n}\r\n\r\nclass DeferredShaderMaterial {\r\n    constructor( params ) {\r\n        this.isDeferredShaderMaterial = true;\r\n\r\n        this.params = params;\r\n    }\r\n\r\n    create() {\r\n\r\n        var uniforms = THREE.UniformsUtils.clone( this.params.uniforms );\r\n\r\n        for ( var uniformId in this.params.uniforms ) {\r\n\r\n            var originalUniform = this.params.uniforms[ uniformId ];\r\n\r\n            if ( originalUniform.value instanceof THREE.Texture ) {\r\n\r\n                uniforms[ uniformId ].value = originalUniform.value;\r\n                uniforms[ uniformId ].value.needsUpdate = true;\r\n\r\n            }\r\n\r\n            uniforms[ uniformId ].semantic = originalUniform.semantic;\r\n            uniforms[ uniformId ].node = originalUniform.node;\r\n\r\n        }\r\n\r\n        this.params.uniforms = uniforms;\r\n\r\n        return new THREE.RawShaderMaterial( this.params );\r\n    }\r\n}\r\n\r\nclass GLTFParser {\r\n    constructor( json, extensions, options ) {\r\n        this.json = json || {};\r\n        this.extensions = extensions || {};\r\n        this.options = options || {};\r\n\r\n        // loader object cache\r\n        this.cache = new GLTFRegistry();\r\n    }\r\n\r\n    _withDependencies( dependencies ) {\r\n\r\n        var _dependencies = {};\r\n\r\n        for ( var i = 0; i < dependencies.length; i ++ ) {\r\n\r\n            var dependency = dependencies[ i ];\r\n            var fnName = \"load\" + dependency.charAt( 0 ).toUpperCase() + dependency.slice( 1 );\r\n\r\n            var cached = this.cache.get( dependency );\r\n\r\n            if ( cached !== undefined ) {\r\n\r\n                _dependencies[ dependency ] = cached;\r\n\r\n            } else if ( this[ fnName ] ) {\r\n\r\n                var fn = this[ fnName ]();\r\n                this.cache.add( dependency, fn );\r\n\r\n                _dependencies[ dependency ] = fn;\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return _each( _dependencies, function ( dependency ) {\r\n\r\n            return dependency;\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    parse( callback ) {\r\n\r\n        var json = this.json;\r\n\r\n        // Clear the loader cache\r\n        this.cache.removeAll();\r\n\r\n        // Fire the callback on complete\r\n        this._withDependencies( [\r\n\r\n            \"scenes\",\r\n            \"cameras\",\r\n            \"animations\"\r\n\r\n        ] ).then( function ( dependencies ) {\r\n\r\n            var scenes = [];\r\n\r\n            for ( var name in dependencies.scenes ) {\r\n\r\n                scenes.push( dependencies.scenes[ name ] );\r\n\r\n            }\r\n\r\n            var scene = json.scene !== undefined ? dependencies.scenes[ json.scene ] : scenes[ 0 ];\r\n\r\n            var cameras = [];\r\n\r\n            for ( var name in dependencies.cameras ) {\r\n\r\n                var camera = dependencies.cameras[ name ];\r\n                cameras.push( camera );\r\n\r\n            }\r\n\r\n            var animations = [];\r\n\r\n            for ( var name in dependencies.animations ) {\r\n\r\n                animations.push( dependencies.animations[ name ] );\r\n\r\n            }\r\n\r\n            callback( scene, scenes, cameras, animations );\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    loadShaders() {\r\n\r\n        var json = this.json;\r\n\r\n        // Skip shader loading entirely since materials get completely replaced by replaceBrushMaterials()\r\n        // Just return empty shaders for all shader references to avoid breaking the material loading pipeline\r\n        return Promise.resolve( _each( json.shaders, function () {\r\n            return ''; // Return empty string for each shader\r\n        } ) );\r\n\r\n    };\r\n\r\n    loadBuffers() {\r\n        var json = this.json;\r\n        var extensions = this.extensions;\r\n        var options = this.options;\r\n\r\n        return _each( json.buffers, function ( buffer, name ) {\r\n\r\n            if ( name === BINARY_EXTENSION_BUFFER_NAME ) {\r\n\r\n                return extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body;\r\n\r\n            }\r\n\r\n            if ( buffer.type === 'arraybuffer' || buffer.type === undefined ) {\r\n\r\n                return new Promise( function ( resolve ) {\r\n\r\n                    var loader = new THREE.FileLoader( options.manager );\r\n                    loader.setResponseType( 'arraybuffer' );\r\n                    loader.setCrossOrigin('no-cors');\r\n                    loader.load( resolveURL( buffer.uri, options.path ), function ( buffer ) {\r\n\r\n                        resolve( buffer );\r\n\r\n                    } );\r\n\r\n                } );\r\n\r\n            } else {\r\n\r\n                console.warn( 'THREE.LegacyGLTFLoader: ' + buffer.type + ' buffer type is not supported' );\r\n\r\n            }\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    loadBufferViews() {\r\n\r\n        var json = this.json;\r\n\r\n        return this._withDependencies( [\r\n\r\n            \"buffers\"\r\n\r\n        ] ).then( function ( dependencies ) {\r\n\r\n            return _each( json.bufferViews, function ( bufferView ) {\r\n\r\n                var arraybuffer = dependencies.buffers[ bufferView.buffer ];\r\n\r\n                var byteLength = bufferView.byteLength !== undefined ? bufferView.byteLength : 0;\r\n\r\n                return arraybuffer.slice( bufferView.byteOffset, bufferView.byteOffset + byteLength );\r\n\r\n            } );\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    loadAccessors() {\r\n\r\n        var json = this.json;\r\n\r\n        return this._withDependencies( [\r\n\r\n            \"bufferViews\"\r\n\r\n        ] ).then( function ( dependencies ) {\r\n\r\n            return _each( json.accessors, function ( accessor ) {\r\n\r\n                var arraybuffer = dependencies.bufferViews[ accessor.bufferView ];\r\n                var itemSize = WEBGL_TYPE_SIZES[ accessor.type ];\r\n                var TypedArray = WEBGL_COMPONENT_TYPES[ accessor.componentType ];\r\n\r\n                // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\r\n                var elementBytes = TypedArray.BYTES_PER_ELEMENT;\r\n                var itemBytes = elementBytes * itemSize;\r\n\r\n                // The buffer is not interleaved if the stride is the item size in bytes.\r\n                if ( accessor.byteStride && accessor.byteStride !== itemBytes ) {\r\n\r\n                    // Use the full buffer if it's interleaved.\r\n                    var array = new TypedArray( arraybuffer );\r\n\r\n                    // Integer parameters to IB/IBA are in array elements, not bytes.\r\n                    var ib = new THREE.InterleavedBuffer( array, accessor.byteStride / elementBytes );\r\n\r\n                    return new THREE.InterleavedBufferAttribute( ib, itemSize, accessor.byteOffset / elementBytes );\r\n\r\n                } else {\r\n\r\n                    array = new TypedArray( arraybuffer, accessor.byteOffset, accessor.count * itemSize );\r\n\r\n                    return new THREE.BufferAttribute( array, itemSize );\r\n\r\n                }\r\n\r\n            } );\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    loadTextures() {\r\n        var json = this.json;\r\n        \r\n        // Skip texture loading entirely since materials get completely replaced by replaceBrushMaterials()\r\n        // Just return null textures for all texture references to avoid breaking the material loading pipeline\r\n        return Promise.resolve(_each(json.textures, function() {\r\n            return null; // Return null for each texture\r\n        }));\r\n    };\r\n\r\n    loadMaterials() {\r\n\r\n        var json = this.json;\r\n\r\n        return this._withDependencies( [\r\n\r\n            \"shaders\",\r\n            \"textures\"\r\n\r\n        ] ).then( function ( dependencies ) {\r\n\r\n            return _each( json.materials, function ( material ) {\r\n\r\n                var materialType;\r\n                var materialValues = {};\r\n                var materialParams = {};\r\n\r\n                var khr_material;\r\n\r\n                if ( material.extensions && material.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ] ) {\r\n\r\n                    khr_material = material.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ];\r\n\r\n                }\r\n\r\n                if ( khr_material ) {\r\n\r\n                    // don't copy over unused values to avoid material warning spam\r\n                    var keys = [ 'ambient', 'emission', 'transparent', 'transparency', 'doubleSided' ];\r\n\r\n                    switch ( khr_material.technique ) {\r\n\r\n                        case 'BLINN' :\r\n                        case 'PHONG' :\r\n                            materialType = THREE.MeshPhongMaterial;\r\n                            keys.push( 'diffuse', 'specular', 'shininess' );\r\n                            break;\r\n\r\n                        case 'LAMBERT' :\r\n                            materialType = THREE.MeshLambertMaterial;\r\n                            keys.push( 'diffuse' );\r\n                            break;\r\n\r\n                        case 'CONSTANT' :\r\n                        default :\r\n                            materialType = THREE.MeshBasicMaterial;\r\n                            break;\r\n\r\n                    }\r\n\r\n                    keys.forEach( function ( v ) {\r\n\r\n                        if ( khr_material.values[ v ] !== undefined ) materialValues[ v ] = khr_material.values[ v ];\r\n\r\n                    } );\r\n\r\n                    if ( khr_material.doubleSided || materialValues.doubleSided ) {\r\n\r\n                        materialParams.side = THREE.DoubleSide;\r\n\r\n                    }\r\n\r\n                    if ( khr_material.transparent || materialValues.transparent ) {\r\n\r\n                        materialParams.transparent = true;\r\n                        materialParams.opacity = ( materialValues.transparency !== undefined ) ? materialValues.transparency : 1;\r\n\r\n                    }\r\n\r\n                } else if ( material.technique === undefined ) {\r\n\r\n                    materialType = THREE.MeshPhongMaterial;\r\n\r\n                    Object.assign( materialValues, material.values );\r\n\r\n                } else {\r\n\r\n                    materialType = DeferredShaderMaterial;\r\n\r\n                    var technique = json.techniques[ material.technique ];\r\n\r\n                    materialParams.uniforms = {};\r\n\r\n                    var program = json.programs[ technique.program ];\r\n\r\n                    if ( program ) {\r\n\r\n                        materialParams.fragmentShader = dependencies.shaders[ program.fragmentShader ];\r\n\r\n                        if ( ! materialParams.fragmentShader ) {\r\n\r\n                            // Shaders are intentionally skipped since materials get replaced by replaceBrushMaterials()\r\n                            materialType = THREE.MeshPhongMaterial;\r\n\r\n                        }\r\n\r\n                        var vertexShader = dependencies.shaders[ program.vertexShader ];\r\n\r\n                        if ( ! vertexShader ) {\r\n\r\n                            // Shaders are intentionally skipped since materials get replaced by replaceBrushMaterials()\r\n                            materialType = THREE.MeshPhongMaterial;\r\n\r\n                        }\r\n\r\n                        // IMPORTANT: FIX VERTEX SHADER ATTRIBUTE DEFINITIONS\r\n                        // I'm not sure we need to replace the param names any more.\r\n                        // Not sure why it worked before!\r\n                        //materialParams.vertexShader = replaceTHREEShaderAttributes( vertexShader, technique );\r\n\r\n                        var uniforms = technique.uniforms;\r\n\r\n                        for ( var uniformId in uniforms ) {\r\n\r\n                            var pname = uniforms[ uniformId ];\r\n                            var shaderParam = technique.parameters[ pname ];\r\n\r\n                            var ptype = shaderParam.type;\r\n\r\n                            if ( WEBGL_TYPE[ ptype ] ) {\r\n\r\n                                var pcount = shaderParam.count;\r\n                                var value;\r\n\r\n                                if ( material.values !== undefined ) value = material.values[ pname ];\r\n\r\n                                var uvalue = new WEBGL_TYPE[ ptype ]();\r\n                                var usemantic = shaderParam.semantic;\r\n                                var unode = shaderParam.node;\r\n\r\n                                switch ( ptype ) {\r\n\r\n                                    case WEBGL_CONSTANTS.FLOAT:\r\n\r\n                                        uvalue = shaderParam.value;\r\n\r\n                                        if ( pname == \"transparency\" ) {\r\n\r\n                                            materialParams.transparent = true;\r\n\r\n                                        }\r\n\r\n                                        if ( value !== undefined ) {\r\n\r\n                                            uvalue = value;\r\n\r\n                                        }\r\n\r\n                                        break;\r\n\r\n                                    case WEBGL_CONSTANTS.FLOAT_VEC2:\r\n                                    case WEBGL_CONSTANTS.FLOAT_VEC3:\r\n                                    case WEBGL_CONSTANTS.FLOAT_VEC4:\r\n                                    case WEBGL_CONSTANTS.FLOAT_MAT3:\r\n\r\n                                        if ( shaderParam && shaderParam.value ) {\r\n\r\n                                            uvalue.fromArray( shaderParam.value );\r\n\r\n                                        }\r\n\r\n                                        if ( value ) {\r\n\r\n                                            uvalue.fromArray( value );\r\n\r\n                                        }\r\n\r\n                                        break;\r\n\r\n                                    case WEBGL_CONSTANTS.FLOAT_MAT2:\r\n\r\n                                        // what to do?\r\n                                        console.warn( \"FLOAT_MAT2 is not a supported uniform type\" );\r\n                                        break;\r\n\r\n                                    case WEBGL_CONSTANTS.FLOAT_MAT4:\r\n\r\n                                        if ( pcount ) {\r\n\r\n                                            uvalue = new Array( pcount );\r\n\r\n                                            for ( var mi = 0; mi < pcount; mi ++ ) {\r\n\r\n                                                uvalue[ mi ] = new WEBGL_TYPE[ ptype ]();\r\n\r\n                                            }\r\n\r\n                                            if ( shaderParam && shaderParam.value ) {\r\n\r\n                                                var m4v = shaderParam.value;\r\n                                                uvalue.fromArray( m4v );\r\n\r\n                                            }\r\n\r\n                                            if ( value ) {\r\n\r\n                                                uvalue.fromArray( value );\r\n\r\n                                            }\r\n\r\n                                        } else {\r\n\r\n                                            if ( shaderParam && shaderParam.value ) {\r\n\r\n                                                var m4 = shaderParam.value;\r\n                                                uvalue.fromArray( m4 );\r\n\r\n                                            }\r\n\r\n                                            if ( value ) {\r\n\r\n                                                uvalue.fromArray( value );\r\n\r\n                                            }\r\n\r\n                                        }\r\n\r\n                                        break;\r\n\r\n                                    case WEBGL_CONSTANTS.SAMPLER_2D:\r\n\r\n                                        if ( value !== undefined ) {\r\n\r\n                                            uvalue = dependencies.textures[ value ];\r\n\r\n                                        } else if ( shaderParam.value !== undefined ) {\r\n\r\n                                            uvalue = dependencies.textures[ shaderParam.value ];\r\n\r\n                                        } else {\r\n\r\n                                            uvalue = null;\r\n\r\n                                        }\r\n\r\n                                        break;\r\n\r\n                                }\r\n\r\n                                materialParams.uniforms[ uniformId ] = {\r\n                                    value: uvalue,\r\n                                    semantic: usemantic,\r\n                                    node: unode\r\n                                };\r\n\r\n                            } else {\r\n\r\n                                throw new Error( \"Unknown shader uniform param type: \" + ptype );\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        var states = technique.states || {};\r\n                        var enables = states.enable || [];\r\n                        var functions = states.functions || {};\r\n\r\n                        var enableCullFace = false;\r\n                        var enableDepthTest = false;\r\n                        var enableBlend = false;\r\n\r\n                        for ( var i = 0, il = enables.length; i < il; i ++ ) {\r\n\r\n                            var enable = enables[ i ];\r\n\r\n                            switch ( STATES_ENABLES[ enable ] ) {\r\n\r\n                                case 'CULL_FACE':\r\n\r\n                                    enableCullFace = true;\r\n\r\n                                    break;\r\n\r\n                                case 'DEPTH_TEST':\r\n\r\n                                    enableDepthTest = true;\r\n\r\n                                    break;\r\n\r\n                                case 'BLEND':\r\n\r\n                                    enableBlend = true;\r\n\r\n                                    break;\r\n\r\n                                // TODO: implement\r\n                                case 'SCISSOR_TEST':\r\n                                case 'POLYGON_OFFSET_FILL':\r\n                                case 'SAMPLE_ALPHA_TO_COVERAGE':\r\n\r\n                                    break;\r\n\r\n                                default:\r\n\r\n                                    throw new Error( \"Unknown technique.states.enable: \" + enable );\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        if ( enableCullFace ) {\r\n\r\n                            materialParams.side = functions.cullFace !== undefined ? WEBGL_SIDES[ functions.cullFace ] : THREE.FrontSide;\r\n\r\n                        } else {\r\n\r\n                            materialParams.side = THREE.DoubleSide;\r\n\r\n                        }\r\n\r\n                        materialParams.depthTest = enableDepthTest;\r\n                        materialParams.depthFunc = functions.depthFunc !== undefined ? WEBGL_DEPTH_FUNCS[ functions.depthFunc ] : THREE.LessDepth;\r\n                        materialParams.depthWrite = functions.depthMask !== undefined ? functions.depthMask[ 0 ] : true;\r\n\r\n                        materialParams.blending = enableBlend ? THREE.CustomBlending : THREE.NoBlending;\r\n                        materialParams.transparent = enableBlend;\r\n\r\n                        var blendEquationSeparate = functions.blendEquationSeparate;\r\n\r\n                        if ( blendEquationSeparate !== undefined ) {\r\n\r\n                            materialParams.blendEquation = WEBGL_BLEND_EQUATIONS[ blendEquationSeparate[ 0 ] ];\r\n                            materialParams.blendEquationAlpha = WEBGL_BLEND_EQUATIONS[ blendEquationSeparate[ 1 ] ];\r\n\r\n                        } else {\r\n\r\n                            materialParams.blendEquation = THREE.AddEquation;\r\n                            materialParams.blendEquationAlpha = THREE.AddEquation;\r\n\r\n                        }\r\n\r\n                        var blendFuncSeparate = functions.blendFuncSeparate;\r\n\r\n                        if ( blendFuncSeparate !== undefined ) {\r\n\r\n                            materialParams.blendSrc = WEBGL_BLEND_FUNCS[ blendFuncSeparate[ 0 ] ];\r\n                            materialParams.blendDst = WEBGL_BLEND_FUNCS[ blendFuncSeparate[ 1 ] ];\r\n                            materialParams.blendSrcAlpha = WEBGL_BLEND_FUNCS[ blendFuncSeparate[ 2 ] ];\r\n                            materialParams.blendDstAlpha = WEBGL_BLEND_FUNCS[ blendFuncSeparate[ 3 ] ];\r\n\r\n                        } else {\r\n\r\n                            materialParams.blendSrc = THREE.OneFactor;\r\n                            materialParams.blendDst = THREE.ZeroFactor;\r\n                            materialParams.blendSrcAlpha = THREE.OneFactor;\r\n                            materialParams.blendDstAlpha = THREE.ZeroFactor;\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                if ( Array.isArray( materialValues.diffuse ) ) {\r\n\r\n                    materialParams.color = new THREE.Color().fromArray( materialValues.diffuse );\r\n\r\n                } else if ( typeof ( materialValues.diffuse ) === 'string' ) {\r\n\r\n                    materialParams.map = dependencies.textures[ materialValues.diffuse ];\r\n\r\n                }\r\n\r\n                delete materialParams.diffuse;\r\n\r\n                if ( typeof ( materialValues.reflective ) === 'string' ) {\r\n\r\n                    materialParams.envMap = dependencies.textures[ materialValues.reflective ];\r\n\r\n                }\r\n\r\n                if ( typeof ( materialValues.bump ) === 'string' ) {\r\n\r\n                    materialParams.bumpMap = dependencies.textures[ materialValues.bump ];\r\n\r\n                }\r\n\r\n                if ( Array.isArray( materialValues.emission ) ) {\r\n\r\n                    if ( materialType === THREE.MeshBasicMaterial ) {\r\n\r\n                        materialParams.color = new THREE.Color().fromArray( materialValues.emission );\r\n\r\n                    } else {\r\n\r\n                        materialParams.emissive = new THREE.Color().fromArray( materialValues.emission );\r\n\r\n                    }\r\n\r\n                } else if ( typeof ( materialValues.emission ) === 'string' ) {\r\n\r\n                    if ( materialType === THREE.MeshBasicMaterial ) {\r\n\r\n                        materialParams.map = dependencies.textures[ materialValues.emission ];\r\n\r\n                    } else {\r\n\r\n                        materialParams.emissiveMap = dependencies.textures[ materialValues.emission ];\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                if ( Array.isArray( materialValues.specular ) ) {\r\n\r\n                    materialParams.specular = new THREE.Color().fromArray( materialValues.specular );\r\n\r\n                } else if ( typeof ( materialValues.specular ) === 'string' ) {\r\n\r\n                    materialParams.specularMap = dependencies.textures[ materialValues.specular ];\r\n\r\n                }\r\n\r\n                if ( materialValues.shininess !== undefined ) {\r\n\r\n                    materialParams.shininess = materialValues.shininess;\r\n\r\n                }\r\n\r\n                var _material = new materialType( materialParams );\r\n                if ( material.name !== undefined ) _material.name = material.name;\r\n\r\n                return _material;\r\n\r\n            } );\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    loadMeshes() {\r\n\r\n        var json = this.json;\r\n\r\n        return this._withDependencies( [\r\n\r\n            \"accessors\",\r\n            \"materials\"\r\n\r\n        ] ).then( function ( dependencies ) {\r\n\r\n            return _each( json.meshes, function ( mesh ) {\r\n\r\n                var group = new THREE.Group();\r\n                if ( mesh.name !== undefined ) group.name = mesh.name;\r\n\r\n                if ( mesh.extras ) group.userData = mesh.extras;\r\n\r\n                var primitives = mesh.primitives || [];\r\n\r\n                for ( var name in primitives ) {\r\n\r\n                    var primitive = primitives[ name ];\r\n\r\n                    if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES || primitive.mode === undefined ) {\r\n\r\n                        var geometry = new THREE.BufferGeometry();\r\n\r\n                        var attributes = primitive.attributes;\r\n\r\n                        for ( var attributeId in attributes ) {\r\n\r\n                            var attributeEntry = attributes[ attributeId ];\r\n\r\n                            if ( ! attributeEntry ) return;\r\n\r\n                            var bufferAttribute = dependencies.accessors[ attributeEntry ];\r\n\r\n                            switch ( attributeId ) {\r\n\r\n                                case 'POSITION':\r\n                                    geometry.setAttribute( 'position', bufferAttribute );\r\n                                    break;\r\n\r\n                                case 'NORMAL':\r\n                                    geometry.setAttribute( 'normal', bufferAttribute );\r\n                                    break;\r\n\r\n                                case 'TEXCOORD_0':\r\n                                case 'TEXCOORD0':\r\n                                case 'TEXCOORD':\r\n                                    geometry.setAttribute( 'uv', bufferAttribute );\r\n                                    break;\r\n\r\n                                case 'TEXCOORD_1':\r\n                                    geometry.setAttribute( 'uv2', bufferAttribute );\r\n                                    break;\r\n\r\n                                case 'COLOR_0':\r\n                                case 'COLOR0':\r\n                                case 'COLOR':\r\n                                    geometry.setAttribute( 'color', bufferAttribute );\r\n                                    break;\r\n\r\n                                case 'WEIGHT':\r\n                                    geometry.setAttribute( 'skinWeight', bufferAttribute );\r\n                                    break;\r\n\r\n                                case 'JOINT':\r\n                                    geometry.setAttribute( 'skinIndex', bufferAttribute );\r\n                                    break;\r\n\r\n                                default:\r\n\r\n                                    if ( ! primitive.material ) break;\r\n\r\n                                    var material = json.materials[ primitive.material ];\r\n\r\n                                    if ( ! material.technique ) break;\r\n\r\n                                    var parameters = json.techniques[ material.technique ].parameters || {};\r\n\r\n                                    for ( var attributeName in parameters ) {\r\n\r\n                                        if ( parameters[ attributeName ][ 'semantic' ] === attributeId ) {\r\n\r\n                                            geometry.setAttribute( attributeName, bufferAttribute );\r\n\r\n                                        }\r\n\r\n                                    }\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        if ( primitive.indices ) {\r\n\r\n                            geometry.setIndex( dependencies.accessors[ primitive.indices ] );\r\n\r\n                        }\r\n\r\n                        var material = dependencies.materials !== undefined ? dependencies.materials[ primitive.material ] : createDefaultMaterial();\r\n\r\n                        var meshNode = new THREE.Mesh( geometry, material );\r\n                        meshNode.castShadow = true;\r\n                        meshNode.name = ( name === \"0\" ? group.name : group.name + name );\r\n\r\n                        if ( primitive.extras ) meshNode.userData = primitive.extras;\r\n\r\n                        group.add( meshNode );\r\n\r\n                    } else if ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\r\n\r\n                        var geometry = new THREE.BufferGeometry();\r\n\r\n                        var attributes = primitive.attributes;\r\n\r\n                        for ( var attributeId in attributes ) {\r\n\r\n                            var attributeEntry = attributes[ attributeId ];\r\n\r\n                            if ( ! attributeEntry ) return;\r\n\r\n                            var bufferAttribute = dependencies.accessors[ attributeEntry ];\r\n\r\n                            switch ( attributeId ) {\r\n\r\n                                case 'POSITION':\r\n                                    geometry.setAttribute( 'position', bufferAttribute );\r\n                                    break;\r\n\r\n                                case 'COLOR_0':\r\n                                case 'COLOR0':\r\n                                case 'COLOR':\r\n                                    geometry.setAttribute( 'color', bufferAttribute );\r\n                                    break;\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                        var material = dependencies.materials[ primitive.material ];\r\n\r\n                        var meshNode;\r\n\r\n                        if ( primitive.indices ) {\r\n\r\n                            geometry.setIndex( dependencies.accessors[ primitive.indices ] );\r\n\r\n                            meshNode = new THREE.LineSegments( geometry, material );\r\n\r\n                        } else {\r\n\r\n                            meshNode = new THREE.Line( geometry, material );\r\n\r\n                        }\r\n\r\n                        meshNode.name = ( name === \"0\" ? group.name : group.name + name );\r\n\r\n                        if ( primitive.extras ) meshNode.userData = primitive.extras;\r\n\r\n                        group.add( meshNode );\r\n\r\n                    } else {\r\n\r\n                        console.warn( \"Only triangular and line primitives are supported\" );\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                return group;\r\n\r\n            } );\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    loadCameras() {\r\n\r\n        var json = this.json;\r\n\r\n        return _each( json.cameras, function ( camera ) {\r\n\r\n            if ( camera.type == \"perspective\" && camera.perspective ) {\r\n\r\n                var yfov = camera.perspective.yfov;\r\n                var aspectRatio = camera.perspective.aspectRatio !== undefined ? camera.perspective.aspectRatio : 1;\r\n\r\n                // According to COLLADA spec...\r\n                // aspectRatio = xfov / yfov\r\n                var xfov = yfov * aspectRatio;\r\n\r\n                var _camera = new THREE.PerspectiveCamera( THREE.MathUtils.radToDeg( xfov ), aspectRatio, camera.perspective.znear || 1, camera.perspective.zfar || 2e6 );\r\n                if ( camera.name !== undefined ) _camera.name = camera.name;\r\n\r\n                if ( camera.extras ) _camera.userData = camera.extras;\r\n\r\n                return _camera;\r\n\r\n            } else if ( camera.type == \"orthographic\" && camera.orthographic ) {\r\n\r\n                var _camera = new THREE.OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2, window.innerHeight / 2, window.innerHeight / - 2, camera.orthographic.znear, camera.orthographic.zfar );\r\n                if ( camera.name !== undefined ) _camera.name = camera.name;\r\n\r\n                if ( camera.extras ) _camera.userData = camera.extras;\r\n\r\n                return _camera;\r\n\r\n            }\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    loadSkins() {\r\n\r\n        var json = this.json;\r\n\r\n        return this._withDependencies( [\r\n\r\n            \"accessors\"\r\n\r\n        ] ).then( function ( dependencies ) {\r\n\r\n            return _each( json.skins, function ( skin ) {\r\n\r\n                var bindShapeMatrix = new THREE.Matrix4();\r\n\r\n                if ( skin.bindShapeMatrix !== undefined ) bindShapeMatrix.fromArray( skin.bindShapeMatrix );\r\n\r\n                var _skin = {\r\n                    bindShapeMatrix: bindShapeMatrix,\r\n                    jointNames: skin.jointNames,\r\n                    inverseBindMatrices: dependencies.accessors[ skin.inverseBindMatrices ]\r\n                };\r\n\r\n                return _skin;\r\n\r\n            } );\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    loadAnimations() {\r\n\r\n        var json = this.json;\r\n\r\n        return this._withDependencies( [\r\n\r\n            \"accessors\",\r\n            \"nodes\"\r\n\r\n        ] ).then( function ( dependencies ) {\r\n\r\n            return _each( json.animations, function ( animation, animationId ) {\r\n\r\n                var tracks = [];\r\n\r\n                for ( var channelId in animation.channels ) {\r\n\r\n                    var channel = animation.channels[ channelId ];\r\n                    var sampler = animation.samplers[ channel.sampler ];\r\n\r\n                    if ( sampler ) {\r\n\r\n                        var target = channel.target;\r\n                        var name = target.id;\r\n                        var input = animation.parameters !== undefined ? animation.parameters[ sampler.input ] : sampler.input;\r\n                        var output = animation.parameters !== undefined ? animation.parameters[ sampler.output ] : sampler.output;\r\n\r\n                        var inputAccessor = dependencies.accessors[ input ];\r\n                        var outputAccessor = dependencies.accessors[ output ];\r\n\r\n                        var node = dependencies.nodes[ name ];\r\n\r\n                        if ( node ) {\r\n\r\n                            node.updateMatrix();\r\n                            node.matrixAutoUpdate = true;\r\n\r\n                            var TypedKeyframeTrack = PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.rotation\r\n                                ? THREE.QuaternionKeyframeTrack\r\n                                : THREE.VectorKeyframeTrack;\r\n\r\n                            var targetName = node.name ? node.name : node.uuid;\r\n                            var interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\r\n\r\n                            // KeyframeTrack.optimize() will modify given 'times' and 'values'\r\n                            // buffers before creating a truncated copy to keep. Because buffers may\r\n                            // be reused by other tracks, make copies here.\r\n                            tracks.push( new TypedKeyframeTrack(\r\n                                targetName + '.' + PATH_PROPERTIES[ target.path ],\r\n                                THREE.AnimationUtils.arraySlice( inputAccessor.array, 0 ),\r\n                                THREE.AnimationUtils.arraySlice( outputAccessor.array, 0 ),\r\n                                interpolation\r\n                            ) );\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                }\r\n\r\n                var name = animation.name !== undefined ? animation.name : \"animation_\" + animationId;\r\n\r\n                return new THREE.AnimationClip( name, undefined, tracks );\r\n\r\n            } );\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    loadNodes() {\r\n\r\n        var json = this.json;\r\n        var extensions = this.extensions;\r\n        var scope = this;\r\n\r\n        return _each( json.nodes, function ( node ) {\r\n\r\n            var matrix = new THREE.Matrix4();\r\n\r\n            var _node;\r\n\r\n            if ( node.jointName ) {\r\n\r\n                _node = new THREE.Bone();\r\n                _node.name = node.name !== undefined ? node.name : node.jointName;\r\n                _node.jointName = node.jointName;\r\n\r\n            } else {\r\n\r\n                _node = new THREE.Object3D();\r\n                if ( node.name !== undefined ) _node.name = node.name;\r\n\r\n            }\r\n\r\n            if ( node.extras ) _node.userData = node.extras;\r\n\r\n            if ( node.matrix !== undefined ) {\r\n\r\n                matrix.fromArray( node.matrix );\r\n                _node.applyMatrix4( matrix );\r\n\r\n            } else {\r\n\r\n                if ( node.translation !== undefined ) {\r\n\r\n                    _node.position.fromArray( node.translation );\r\n\r\n                }\r\n\r\n                if ( node.rotation !== undefined ) {\r\n\r\n                    _node.quaternion.fromArray( node.rotation );\r\n\r\n                }\r\n\r\n                if ( node.scale !== undefined ) {\r\n\r\n                    _node.scale.fromArray( node.scale );\r\n\r\n                }\r\n\r\n            }\r\n\r\n            return _node;\r\n\r\n        } ).then( function ( __nodes ) {\r\n\r\n            return scope._withDependencies( [\r\n\r\n                \"meshes\",\r\n                \"skins\",\r\n                \"cameras\"\r\n\r\n            ] ).then( function ( dependencies ) {\r\n\r\n                return _each( __nodes, function ( _node, nodeId ) {\r\n\r\n                    var node = json.nodes[ nodeId ];\r\n\r\n                    if ( node.meshes !== undefined ) {\r\n\r\n                        for ( var meshId in node.meshes ) {\r\n\r\n                            var mesh = node.meshes[ meshId ];\r\n                            var group = dependencies.meshes[ mesh ];\r\n\r\n                            if ( group === undefined ) {\r\n\r\n                                console.warn( 'LegacyGLTFLoader: Couldn\\'t find node \"' + mesh + '\".' );\r\n                                continue;\r\n\r\n                            }\r\n\r\n                            for ( var childrenId in group.children ) {\r\n\r\n                                var child = group.children[ childrenId ];\r\n\r\n                                // clone Mesh to add to _node\r\n\r\n                                var originalMaterial = child.material;\r\n                                var originalGeometry = child.geometry;\r\n                                var originalUserData = child.userData;\r\n                                var originalName = child.name;\r\n\r\n                                var material;\r\n\r\n                                if ( originalMaterial.isDeferredShaderMaterial ) {\r\n\r\n                                    originalMaterial = material = originalMaterial.create();\r\n\r\n                                } else {\r\n\r\n                                    material = originalMaterial;\r\n\r\n                                }\r\n\r\n                                switch ( child.type ) {\r\n\r\n                                    case 'LineSegments':\r\n                                        child = new THREE.LineSegments( originalGeometry, material );\r\n                                        break;\r\n\r\n                                    case 'LineLoop':\r\n                                        child = new THREE.LineLoop( originalGeometry, material );\r\n                                        break;\r\n\r\n                                    case 'Line':\r\n                                        child = new THREE.Line( originalGeometry, material );\r\n                                        break;\r\n\r\n                                    default:\r\n                                        child = new THREE.Mesh( originalGeometry, material );\r\n\r\n                                }\r\n\r\n                                child.castShadow = true;\r\n                                child.userData = originalUserData;\r\n                                child.name = originalName;\r\n\r\n                                var skinEntry;\r\n\r\n                                if ( node.skin ) {\r\n\r\n                                    skinEntry = dependencies.skins[ node.skin ];\r\n\r\n                                }\r\n\r\n                                // Replace Mesh with SkinnedMesh in library\r\n                                if ( skinEntry ) {\r\n\r\n                                    var getJointNode = function ( jointId ) {\r\n\r\n                                        var keys = Object.keys( __nodes );\r\n\r\n                                        for ( var i = 0, il = keys.length; i < il; i ++ ) {\r\n\r\n                                            var n = __nodes[ keys[ i ] ];\r\n\r\n                                            if ( n.jointName === jointId ) return n;\r\n\r\n                                        }\r\n\r\n                                        return null;\r\n\r\n                                    };\r\n\r\n                                    var geometry = originalGeometry;\r\n                                    var material = originalMaterial;\r\n                                    material.skinning = true;\r\n\r\n                                    child = new THREE.SkinnedMesh( geometry, material );\r\n                                    child.castShadow = true;\r\n                                    child.userData = originalUserData;\r\n                                    child.name = originalName;\r\n\r\n                                    var bones = [];\r\n                                    var boneInverses = [];\r\n\r\n                                    for ( var i = 0, l = skinEntry.jointNames.length; i < l; i ++ ) {\r\n\r\n                                        var jointId = skinEntry.jointNames[ i ];\r\n                                        var jointNode = getJointNode( jointId );\r\n\r\n                                        if ( jointNode ) {\r\n\r\n                                            bones.push( jointNode );\r\n\r\n                                            var m = skinEntry.inverseBindMatrices.array;\r\n                                            var mat = new THREE.Matrix4().fromArray( m, i * 16 );\r\n                                            boneInverses.push( mat );\r\n\r\n                                        } else {\r\n\r\n                                            console.warn( \"WARNING: joint: '\" + jointId + \"' could not be found\" );\r\n\r\n                                        }\r\n\r\n                                    }\r\n\r\n                                    child.bind( new THREE.Skeleton( bones, boneInverses ), skinEntry.bindShapeMatrix );\r\n\r\n                                    var buildBoneGraph = function ( parentJson, parentObject, property ) {\r\n\r\n                                        var children = parentJson[ property ];\r\n\r\n                                        if ( children === undefined ) return;\r\n\r\n                                        for ( var i = 0, il = children.length; i < il; i ++ ) {\r\n\r\n                                            var nodeId = children[ i ];\r\n                                            var bone = __nodes[ nodeId ];\r\n                                            var boneJson = json.nodes[ nodeId ];\r\n\r\n                                            if ( bone !== undefined && bone.isBone === true && boneJson !== undefined ) {\r\n\r\n                                                parentObject.add( bone );\r\n                                                buildBoneGraph( boneJson, bone, 'children' );\r\n\r\n                                            }\r\n\r\n                                        }\r\n\r\n                                    };\r\n\r\n                                    buildBoneGraph( node, child, 'skeletons' );\r\n\r\n                                }\r\n\r\n                                _node.add( child );\r\n\r\n                            }\r\n\r\n                        }\r\n\r\n                    }\r\n\r\n                    if ( node.camera !== undefined ) {\r\n\r\n                        var camera = dependencies.cameras[ node.camera ];\r\n\r\n                        _node.add( camera );\r\n\r\n                    }\r\n\r\n                    if ( node.extensions\r\n                        && node.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ]\r\n                        && node.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ].light ) {\r\n\r\n                        var extensionLights = extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ].lights;\r\n                        var light = extensionLights[ node.extensions[ EXTENSIONS.KHR_MATERIALS_COMMON ].light ];\r\n\r\n                        _node.add( light );\r\n\r\n                    }\r\n\r\n                    return _node;\r\n\r\n                } );\r\n\r\n            } );\r\n\r\n        } );\r\n\r\n    };\r\n\r\n    loadScenes() {\r\n\r\n        var json = this.json;\r\n\r\n        // scene node hierachy builder\r\n\r\n        function buildNodeHierachy( nodeId, parentObject, allNodes ) {\r\n\r\n            var _node = allNodes[ nodeId ];\r\n            parentObject.add( _node );\r\n\r\n            var node = json.nodes[ nodeId ];\r\n\r\n            if ( node.children ) {\r\n\r\n                var children = node.children;\r\n\r\n                for ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n                    var child = children[ i ];\r\n                    buildNodeHierachy( child, _node, allNodes );\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n\r\n        return this._withDependencies( [\r\n\r\n            \"nodes\"\r\n\r\n        ] ).then( function ( dependencies ) {\r\n\r\n            return _each( json.scenes, function ( scene ) {\r\n\r\n                var _scene = new THREE.Scene();\r\n                if ( scene.name !== undefined ) _scene.name = scene.name;\r\n\r\n                if ( scene.extras ) _scene.userData = scene.extras;\r\n\r\n                var nodes = scene.nodes || [];\r\n\r\n                for ( var i = 0, l = nodes.length; i < l; i ++ ) {\r\n\r\n                    var nodeId = nodes[ i ];\r\n                    buildNodeHierachy( nodeId, _scene, dependencies.nodes );\r\n\r\n                }\r\n\r\n                _scene.traverse( function ( child ) {\r\n\r\n                    // Register raw material meshes with LegacyGLTFLoader.Shaders\r\n                    if ( child.material && child.material.isRawShaderMaterial ) {\r\n\r\n                        child.gltfShader = new GLTFShader( child, dependencies.nodes );\r\n                        child.onBeforeRender = function ( renderer, scene, camera ) {\r\n\r\n                            this.gltfShader.update( scene, camera );\r\n\r\n                        };\r\n\r\n                    }\r\n\r\n                } );\r\n\r\n                return _scene;\r\n\r\n            } );\r\n\r\n        } );\r\n\r\n    };\r\n}\r\n"],"names":[],"version":3,"file":"icosa-viewer.module.js.map"}